{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n/**\n * Runner middleware is responsible for communication with `karma run`.\n *\n * It basically triggers a test run and streams stdout back.\n */\n\nconst _ = require('lodash');\nconst path = require('path');\nconst helper = require('../helper');\nconst log = require('../logger').create();\nconst constant = require('../constants');\nconst json = require('body-parser').json();\n\n// TODO(vojta): disable when single-run mode\nfunction createRunnerMiddleware(emitter, fileList, capturedBrowsers, reporter, executor, /* config.protocol */protocol, /* config.hostname */hostname, /* config.port */\nport, /* config.urlRoot */urlRoot, config) {\n  helper.saveOriginalArgs(config);\n  return function (request, response, next) {\n    if (request.url !== '/__run__' && request.url !== urlRoot + 'run') {\n      return next();\n    }\n    log.debug('Execution (fired by runner)');\n    response.writeHead(200);\n    if (!capturedBrowsers.length) {\n      const url = `${protocol}//${hostname}:${port}${urlRoot}`;\n      return response.end(`No captured browser, open ${url}\\n`);\n    }\n    json(request, response, function () {\n      if (!capturedBrowsers.areAllReady([])) {\n        response.write('Waiting for previous execution...\\n');\n      }\n      const data = request.body;\n      updateClientArgs(data);\n      handleRun(data);\n      refreshFileList(data).then(() => {\n        executor.schedule();\n      }).catch(error => {\n        const errorMessage = `Error during refresh file list. ${error.stack || error}`;\n        executor.scheduleError(errorMessage);\n      });\n    });\n    function updateClientArgs(data) {\n      helper.restoreOriginalArgs(config);\n      if (_.isEmpty(data.args)) {\n        log.debug('Ignoring empty client.args from run command');\n      } else if (_.isArray(data.args) && _.isArray(config.client.args) || _.isPlainObject(data.args) && _.isPlainObject(config.client.args)) {\n        log.debug('Merging client.args with ', data.args);\n        config.client.args = _.merge(config.client.args, data.args);\n      } else {\n        log.warn('Replacing client.args with ', data.args, ' as their types do not match.');\n        config.client.args = data.args;\n      }\n    }\n    function refreshFileList(_x) {\n      return _refreshFileList.apply(this, arguments);\n    }\n    function _refreshFileList() {\n      _refreshFileList = _asyncToGenerator(function* (data) {\n        let fullRefresh = true;\n        if (helper.isArray(data.changedFiles)) {\n          yield Promise.all(data.changedFiles.map( /*#__PURE__*/function () {\n            var _ref = _asyncToGenerator(function* (filepath) {\n              yield fileList.changeFile(path.resolve(config.basePath, filepath));\n              fullRefresh = false;\n            });\n            return function (_x2) {\n              return _ref.apply(this, arguments);\n            };\n          }()));\n        }\n        if (helper.isArray(data.addedFiles)) {\n          yield Promise.all(data.addedFiles.map( /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator(function* (filepath) {\n              yield fileList.addFile(path.resolve(config.basePath, filepath));\n              fullRefresh = false;\n            });\n            return function (_x3) {\n              return _ref2.apply(this, arguments);\n            };\n          }()));\n        }\n        if (helper.isArray(data.removedFiles)) {\n          yield Promise.all(data.removedFiles.map( /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator(function* (filepath) {\n              yield fileList.removeFile(path.resolve(config.basePath, filepath));\n              fullRefresh = false;\n            });\n            return function (_x4) {\n              return _ref3.apply(this, arguments);\n            };\n          }()));\n        }\n        if (fullRefresh && data.refresh !== false) {\n          log.debug('Refreshing all the files / patterns');\n          yield fileList.refresh();\n        }\n      });\n      return _refreshFileList.apply(this, arguments);\n    }\n    function handleRun(data) {\n      emitter.once('run_start', function () {\n        const responseWrite = response.write.bind(response);\n        responseWrite.colors = data.colors;\n        reporter.addAdapter(responseWrite);\n\n        // clean up, close runner response\n        emitter.once('run_complete', function (_browsers, results) {\n          reporter.removeAdapter(responseWrite);\n          const emptyTestSuite = results.failed + results.success === 0 ? 0 : 1;\n          response.end(constant.EXIT_CODE + emptyTestSuite + results.exitCode);\n        });\n      });\n    }\n  };\n}\ncreateRunnerMiddleware.$inject = ['emitter', 'fileList', 'capturedBrowsers', 'reporter', 'executor', 'config.protocol', 'config.hostname', 'config.port', 'config.urlRoot', 'config'];\n\n// PUBLIC API\nexports.create = createRunnerMiddleware;","map":{"version":3,"names":["_","require","path","helper","log","create","constant","json","createRunnerMiddleware","emitter","fileList","capturedBrowsers","reporter","executor","protocol","hostname","port","urlRoot","config","saveOriginalArgs","request","response","next","url","debug","writeHead","length","end","areAllReady","write","data","body","updateClientArgs","handleRun","refreshFileList","then","schedule","catch","error","errorMessage","stack","scheduleError","restoreOriginalArgs","isEmpty","args","isArray","client","isPlainObject","merge","warn","fullRefresh","changedFiles","Promise","all","map","filepath","changeFile","resolve","basePath","addedFiles","addFile","removedFiles","removeFile","refresh","once","responseWrite","bind","colors","addAdapter","_browsers","results","removeAdapter","emptyTestSuite","failed","success","EXIT_CODE","exitCode","$inject","exports"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/karma/lib/middleware/runner.js"],"sourcesContent":["/**\n * Runner middleware is responsible for communication with `karma run`.\n *\n * It basically triggers a test run and streams stdout back.\n */\n\nconst _ = require('lodash')\nconst path = require('path')\nconst helper = require('../helper')\nconst log = require('../logger').create()\nconst constant = require('../constants')\nconst json = require('body-parser').json()\n\n// TODO(vojta): disable when single-run mode\nfunction createRunnerMiddleware (emitter, fileList, capturedBrowsers, reporter, executor,\n  /* config.protocol */ protocol, /* config.hostname */ hostname, /* config.port */\n  port, /* config.urlRoot */ urlRoot, config) {\n  helper.saveOriginalArgs(config)\n  return function (request, response, next) {\n    if (request.url !== '/__run__' && request.url !== urlRoot + 'run') {\n      return next()\n    }\n\n    log.debug('Execution (fired by runner)')\n    response.writeHead(200)\n\n    if (!capturedBrowsers.length) {\n      const url = `${protocol}//${hostname}:${port}${urlRoot}`\n      return response.end(`No captured browser, open ${url}\\n`)\n    }\n\n    json(request, response, function () {\n      if (!capturedBrowsers.areAllReady([])) {\n        response.write('Waiting for previous execution...\\n')\n      }\n\n      const data = request.body\n\n      updateClientArgs(data)\n      handleRun(data)\n      refreshFileList(data).then(() => {\n        executor.schedule()\n      }).catch((error) => {\n        const errorMessage = `Error during refresh file list. ${error.stack || error}`\n        executor.scheduleError(errorMessage)\n      })\n    })\n\n    function updateClientArgs (data) {\n      helper.restoreOriginalArgs(config)\n      if (_.isEmpty(data.args)) {\n        log.debug('Ignoring empty client.args from run command')\n      } else if ((_.isArray(data.args) && _.isArray(config.client.args)) ||\n        (_.isPlainObject(data.args) && _.isPlainObject(config.client.args))) {\n        log.debug('Merging client.args with ', data.args)\n        config.client.args = _.merge(config.client.args, data.args)\n      } else {\n        log.warn('Replacing client.args with ', data.args, ' as their types do not match.')\n        config.client.args = data.args\n      }\n    }\n\n    async function refreshFileList (data) {\n      let fullRefresh = true\n\n      if (helper.isArray(data.changedFiles)) {\n        await Promise.all(data.changedFiles.map(async function (filepath) {\n          await fileList.changeFile(path.resolve(config.basePath, filepath))\n          fullRefresh = false\n        }))\n      }\n\n      if (helper.isArray(data.addedFiles)) {\n        await Promise.all(data.addedFiles.map(async function (filepath) {\n          await fileList.addFile(path.resolve(config.basePath, filepath))\n          fullRefresh = false\n        }))\n      }\n\n      if (helper.isArray(data.removedFiles)) {\n        await Promise.all(data.removedFiles.map(async function (filepath) {\n          await fileList.removeFile(path.resolve(config.basePath, filepath))\n          fullRefresh = false\n        }))\n      }\n\n      if (fullRefresh && data.refresh !== false) {\n        log.debug('Refreshing all the files / patterns')\n        await fileList.refresh()\n      }\n    }\n\n    function handleRun (data) {\n      emitter.once('run_start', function () {\n        const responseWrite = response.write.bind(response)\n        responseWrite.colors = data.colors\n        reporter.addAdapter(responseWrite)\n\n        // clean up, close runner response\n        emitter.once('run_complete', function (_browsers, results) {\n          reporter.removeAdapter(responseWrite)\n          const emptyTestSuite = (results.failed + results.success) === 0 ? 0 : 1\n          response.end(constant.EXIT_CODE + emptyTestSuite + results.exitCode)\n        })\n      })\n    }\n  }\n}\n\ncreateRunnerMiddleware.$inject = ['emitter', 'fileList', 'capturedBrowsers', 'reporter', 'executor',\n  'config.protocol', 'config.hostname', 'config.port', 'config.urlRoot', 'config']\n\n// PUBLIC API\nexports.create = createRunnerMiddleware\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}