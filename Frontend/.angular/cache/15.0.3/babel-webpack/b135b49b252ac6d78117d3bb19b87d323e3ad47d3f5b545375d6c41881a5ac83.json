{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.kFieldCount = exports.kResponseCountField = exports.kRequestCountField = exports.isTaskQueue = exports.markMovable = exports.isMovable = exports.isTransferable = exports.kQueueOptions = exports.kValue = exports.kTransferable = exports.commonState = void 0;\n;\nexports.commonState = {\n  isWorkerThread: false,\n  workerData: undefined\n};\n// Internal symbol used to mark Transferable objects returned\n// by the Piscina.move() function\nconst kMovable = Symbol('Piscina.kMovable');\nexports.kTransferable = Symbol.for('Piscina.transferable');\nexports.kValue = Symbol.for('Piscina.valueOf');\nexports.kQueueOptions = Symbol.for('Piscina.queueOptions');\n// True if the object implements the Transferable interface\nfunction isTransferable(value) {\n  return value != null && typeof value === 'object' && exports.kTransferable in value && exports.kValue in value;\n}\nexports.isTransferable = isTransferable;\n// True if object implements Transferable and has been returned\n// by the Piscina.move() function\nfunction isMovable(value) {\n  return isTransferable(value) && value[kMovable] === true;\n}\nexports.isMovable = isMovable;\nfunction markMovable(value) {\n  Object.defineProperty(value, kMovable, {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: true\n  });\n}\nexports.markMovable = markMovable;\nfunction isTaskQueue(value) {\n  return typeof value === 'object' && value !== null && 'size' in value && typeof value.shift === 'function' && typeof value.remove === 'function' && typeof value.push === 'function';\n}\nexports.isTaskQueue = isTaskQueue;\nexports.kRequestCountField = 0;\nexports.kResponseCountField = 1;\nexports.kFieldCount = 2;","map":{"version":3,"names":["Object","defineProperty","exports","value","kFieldCount","kResponseCountField","kRequestCountField","isTaskQueue","markMovable","isMovable","isTransferable","kQueueOptions","kValue","kTransferable","commonState","isWorkerThread","workerData","undefined","kMovable","Symbol","for","enumerable","configurable","writable","shift","remove","push"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/piscina/dist/src/common.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.kFieldCount = exports.kResponseCountField = exports.kRequestCountField = exports.isTaskQueue = exports.markMovable = exports.isMovable = exports.isTransferable = exports.kQueueOptions = exports.kValue = exports.kTransferable = exports.commonState = void 0;\n;\nexports.commonState = {\n    isWorkerThread: false,\n    workerData: undefined\n};\n// Internal symbol used to mark Transferable objects returned\n// by the Piscina.move() function\nconst kMovable = Symbol('Piscina.kMovable');\nexports.kTransferable = Symbol.for('Piscina.transferable');\nexports.kValue = Symbol.for('Piscina.valueOf');\nexports.kQueueOptions = Symbol.for('Piscina.queueOptions');\n// True if the object implements the Transferable interface\nfunction isTransferable(value) {\n    return value != null &&\n        typeof value === 'object' &&\n        exports.kTransferable in value &&\n        exports.kValue in value;\n}\nexports.isTransferable = isTransferable;\n// True if object implements Transferable and has been returned\n// by the Piscina.move() function\nfunction isMovable(value) {\n    return isTransferable(value) && value[kMovable] === true;\n}\nexports.isMovable = isMovable;\nfunction markMovable(value) {\n    Object.defineProperty(value, kMovable, {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: true\n    });\n}\nexports.markMovable = markMovable;\nfunction isTaskQueue(value) {\n    return typeof value === 'object' &&\n        value !== null &&\n        'size' in value &&\n        typeof value.shift === 'function' &&\n        typeof value.remove === 'function' &&\n        typeof value.push === 'function';\n}\nexports.isTaskQueue = isTaskQueue;\nexports.kRequestCountField = 0;\nexports.kResponseCountField = 1;\nexports.kFieldCount = 2;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,WAAW,GAAGF,OAAO,CAACG,mBAAmB,GAAGH,OAAO,CAACI,kBAAkB,GAAGJ,OAAO,CAACK,WAAW,GAAGL,OAAO,CAACM,WAAW,GAAGN,OAAO,CAACO,SAAS,GAAGP,OAAO,CAACQ,cAAc,GAAGR,OAAO,CAACS,aAAa,GAAGT,OAAO,CAACU,MAAM,GAAGV,OAAO,CAACW,aAAa,GAAGX,OAAO,CAACY,WAAW,GAAG,KAAK,CAAC;AACvQ;AACAZ,OAAO,CAACY,WAAW,GAAG;EAClBC,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAEC;AAChB,CAAC;AACD;AACA;AACA,MAAMC,QAAQ,GAAGC,MAAM,CAAC,kBAAkB,CAAC;AAC3CjB,OAAO,CAACW,aAAa,GAAGM,MAAM,CAACC,GAAG,CAAC,sBAAsB,CAAC;AAC1DlB,OAAO,CAACU,MAAM,GAAGO,MAAM,CAACC,GAAG,CAAC,iBAAiB,CAAC;AAC9ClB,OAAO,CAACS,aAAa,GAAGQ,MAAM,CAACC,GAAG,CAAC,sBAAsB,CAAC;AAC1D;AACA,SAASV,cAAc,CAACP,KAAK,EAAE;EAC3B,OAAOA,KAAK,IAAI,IAAI,IAChB,OAAOA,KAAK,KAAK,QAAQ,IACzBD,OAAO,CAACW,aAAa,IAAIV,KAAK,IAC9BD,OAAO,CAACU,MAAM,IAAIT,KAAK;AAC/B;AACAD,OAAO,CAACQ,cAAc,GAAGA,cAAc;AACvC;AACA;AACA,SAASD,SAAS,CAACN,KAAK,EAAE;EACtB,OAAOO,cAAc,CAACP,KAAK,CAAC,IAAIA,KAAK,CAACe,QAAQ,CAAC,KAAK,IAAI;AAC5D;AACAhB,OAAO,CAACO,SAAS,GAAGA,SAAS;AAC7B,SAASD,WAAW,CAACL,KAAK,EAAE;EACxBH,MAAM,CAACC,cAAc,CAACE,KAAK,EAAEe,QAAQ,EAAE;IACnCG,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAE,IAAI;IAClBC,QAAQ,EAAE,IAAI;IACdpB,KAAK,EAAE;EACX,CAAC,CAAC;AACN;AACAD,OAAO,CAACM,WAAW,GAAGA,WAAW;AACjC,SAASD,WAAW,CAACJ,KAAK,EAAE;EACxB,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAC5BA,KAAK,KAAK,IAAI,IACd,MAAM,IAAIA,KAAK,IACf,OAAOA,KAAK,CAACqB,KAAK,KAAK,UAAU,IACjC,OAAOrB,KAAK,CAACsB,MAAM,KAAK,UAAU,IAClC,OAAOtB,KAAK,CAACuB,IAAI,KAAK,UAAU;AACxC;AACAxB,OAAO,CAACK,WAAW,GAAGA,WAAW;AACjCL,OAAO,CAACI,kBAAkB,GAAG,CAAC;AAC9BJ,OAAO,CAACG,mBAAmB,GAAG,CAAC;AAC/BH,OAAO,CAACE,WAAW,GAAG,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}