{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebpackResourceLoader = void 0;\nconst node_assert_1 = __importDefault(require(\"node:assert\"));\nconst node_buffer_1 = require(\"node:buffer\");\nconst path = __importStar(require(\"node:path\"));\nconst vm = __importStar(require(\"node:vm\"));\nconst diagnostics_1 = require(\"./ivy/diagnostics\");\nconst paths_1 = require(\"./ivy/paths\");\nconst inline_resource_1 = require(\"./loaders/inline-resource\");\nconst replace_resources_1 = require(\"./transformers/replace_resources\");\nclass WebpackResourceLoader {\n  constructor(shouldCache) {\n    this._fileDependencies = new Map();\n    this._reverseDependencies = new Map();\n    this.modifiedResources = new Set();\n    this.outputPathCounter = 1;\n    this.inlineDataLoaderPath = inline_resource_1.InlineAngularResourceLoaderPath;\n    if (shouldCache) {\n      this.fileCache = new Map();\n      this.assetCache = new Map();\n    }\n  }\n  update(parentCompilation, changedFiles) {\n    var _a, _b, _c, _d, _e;\n    this._parentCompilation = parentCompilation;\n    // Update resource cache and modified resources\n    this.modifiedResources.clear();\n    if (changedFiles) {\n      for (const changedFile of changedFiles) {\n        const changedFileNormalized = (0, paths_1.normalizePath)(changedFile);\n        (_a = this.assetCache) === null || _a === void 0 ? void 0 : _a.delete(changedFileNormalized);\n        for (const affectedResource of this.getAffectedResources(changedFile)) {\n          const affectedResourceNormalized = (0, paths_1.normalizePath)(affectedResource);\n          (_b = this.fileCache) === null || _b === void 0 ? void 0 : _b.delete(affectedResourceNormalized);\n          this.modifiedResources.add(affectedResource);\n          for (const effectedDependencies of this.getResourceDependencies(affectedResourceNormalized)) {\n            (_c = this.assetCache) === null || _c === void 0 ? void 0 : _c.delete((0, paths_1.normalizePath)(effectedDependencies));\n          }\n        }\n      }\n    } else {\n      (_d = this.fileCache) === null || _d === void 0 ? void 0 : _d.clear();\n      (_e = this.assetCache) === null || _e === void 0 ? void 0 : _e.clear();\n    }\n    // Re-emit all assets for un-effected files\n    if (this.assetCache) {\n      for (const [, {\n        name,\n        source,\n        info\n      }] of this.assetCache) {\n        this._parentCompilation.emitAsset(name, source, info);\n      }\n    }\n  }\n  clearParentCompilation() {\n    this._parentCompilation = undefined;\n  }\n  getModifiedResourceFiles() {\n    return this.modifiedResources;\n  }\n  getResourceDependencies(filePath) {\n    return this._fileDependencies.get(filePath) || [];\n  }\n  getAffectedResources(file) {\n    return this._reverseDependencies.get(file) || [];\n  }\n  setAffectedResources(file, resources) {\n    this._reverseDependencies.set(file, new Set(resources));\n  }\n  // eslint-disable-next-line max-lines-per-function\n  _compile(filePath, data, fileExtension, resourceType, containingFile) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this._parentCompilation) {\n        throw new Error('WebpackResourceLoader cannot be used without parentCompilation');\n      }\n      const {\n        context,\n        webpack\n      } = _this._parentCompilation.compiler;\n      const {\n        EntryPlugin,\n        NormalModule,\n        WebpackError,\n        library,\n        node,\n        sources,\n        util: {\n          createHash\n        }\n      } = webpack;\n      const getEntry = () => {\n        if (filePath) {\n          return `${filePath}?${replace_resources_1.NG_COMPONENT_RESOURCE_QUERY}`;\n        } else if (resourceType) {\n          return (\n            // app.component.ts-2.css?ngResource!=!@ngtools/webpack/src/loaders/inline-resource.js!app.component.ts\n            `${containingFile}-${_this.outputPathCounter}.${fileExtension}` + `?${replace_resources_1.NG_COMPONENT_RESOURCE_QUERY}!=!${_this.inlineDataLoaderPath}!${containingFile}`\n          );\n        } else if (data) {\n          // Create a special URL for reading the resource from memory\n          return `angular-resource:${resourceType},${createHash('xxhash64').update(data).digest('hex')}`;\n        }\n        throw new Error(`\"filePath\", \"resourceType\" or \"data\" must be specified.`);\n      };\n      const entry = getEntry();\n      // Simple sanity check.\n      if (filePath === null || filePath === void 0 ? void 0 : filePath.match(/\\.[jt]s$/)) {\n        throw new Error(`Cannot use a JavaScript or TypeScript file (${filePath}) in a component's styleUrls or templateUrl.`);\n      }\n      const outputFilePath = filePath || `${containingFile}-angular-inline--${_this.outputPathCounter++}.${resourceType === 'template' ? 'html' : 'css'}`;\n      const outputOptions = {\n        filename: outputFilePath,\n        library: {\n          type: 'var',\n          name: 'resource'\n        }\n      };\n      const childCompiler = _this._parentCompilation.createChildCompiler('angular-compiler:resource', outputOptions, [new node.NodeTemplatePlugin(outputOptions), new node.NodeTargetPlugin(), new EntryPlugin(context, entry, {\n        name: 'resource'\n      }), new library.EnableLibraryPlugin('var')]);\n      childCompiler.hooks.thisCompilation.tap('angular-compiler', (compilation, {\n        normalModuleFactory\n      }) => {\n        // If no data is provided, the resource will be read from the filesystem\n        if (data !== undefined) {\n          normalModuleFactory.hooks.resolveForScheme.for('angular-resource').tap('angular-compiler', resourceData => {\n            if (filePath) {\n              resourceData.path = filePath;\n              resourceData.resource = filePath;\n            }\n            return true;\n          });\n          NormalModule.getCompilationHooks(compilation).readResourceForScheme.for('angular-resource').tap('angular-compiler', () => data);\n          compilation[inline_resource_1.InlineAngularResourceSymbol] = data;\n        }\n        compilation.hooks.additionalAssets.tap('angular-compiler', () => {\n          const asset = compilation.assets[outputFilePath];\n          if (!asset) {\n            return;\n          }\n          try {\n            const output = _this._evaluate(outputFilePath, asset.source().toString());\n            if (typeof output === 'string') {\n              compilation.assets[outputFilePath] = new sources.RawSource(output);\n            }\n          } catch (error) {\n            (0, node_assert_1.default)(error instanceof Error, 'catch clause variable is not an Error instance');\n            // Use compilation errors, as otherwise webpack will choke\n            (0, diagnostics_1.addError)(compilation, error.message);\n          }\n        });\n      });\n      let finalContent;\n      childCompiler.hooks.compilation.tap('angular-compiler', childCompilation => {\n        childCompilation.hooks.processAssets.tap({\n          name: 'angular-compiler',\n          stage: webpack.Compilation.PROCESS_ASSETS_STAGE_REPORT\n        }, () => {\n          var _a;\n          finalContent = (_a = childCompilation.assets[outputFilePath]) === null || _a === void 0 ? void 0 : _a.source().toString();\n          for (const {\n            files\n          } of childCompilation.chunks) {\n            for (const file of files) {\n              childCompilation.deleteAsset(file);\n            }\n          }\n        });\n      });\n      return new Promise((resolve, reject) => {\n        childCompiler.runAsChild((error, _, childCompilation) => {\n          var _a, _b;\n          if (error) {\n            reject(error);\n            return;\n          } else if (!childCompilation) {\n            reject(new Error('Unknown child compilation error'));\n            return;\n          }\n          // Workaround to attempt to reduce memory usage of child compilations.\n          // This removes the child compilation from the main compilation and manually propagates\n          // all dependencies, warnings, and errors.\n          const parent = childCompiler.parentCompilation;\n          if (parent) {\n            parent.children = parent.children.filter(child => child !== childCompilation);\n            let fileDependencies;\n            for (const dependency of childCompilation.fileDependencies) {\n              // Skip paths that do not appear to be files (have no extension).\n              // `fileDependencies` can contain directories and not just files which can\n              // cause incorrect cache invalidation on rebuilds.\n              if (!path.extname(dependency)) {\n                continue;\n              }\n              if (data && containingFile && dependency.endsWith(entry)) {\n                // use containing file if the resource was inline\n                parent.fileDependencies.add(containingFile);\n              } else {\n                parent.fileDependencies.add(dependency);\n              }\n              // Save the dependencies for this resource.\n              if (filePath) {\n                const resolvedFile = (0, paths_1.normalizePath)(dependency);\n                const entry = _this._reverseDependencies.get(resolvedFile);\n                if (entry) {\n                  entry.add(filePath);\n                } else {\n                  _this._reverseDependencies.set(resolvedFile, new Set([filePath]));\n                }\n                if (fileDependencies) {\n                  fileDependencies.add(dependency);\n                } else {\n                  fileDependencies = new Set([dependency]);\n                  _this._fileDependencies.set(filePath, fileDependencies);\n                }\n              }\n            }\n            parent.contextDependencies.addAll(childCompilation.contextDependencies);\n            parent.missingDependencies.addAll(childCompilation.missingDependencies);\n            parent.buildDependencies.addAll(childCompilation.buildDependencies);\n            parent.warnings.push(...childCompilation.warnings);\n            parent.errors.push(...childCompilation.errors);\n            if (_this.assetCache) {\n              for (const {\n                info,\n                name,\n                source\n              } of childCompilation.getAssets()) {\n                // Use the originating file as the cache key if present\n                // Otherwise, generate a cache key based on the generated name\n                const cacheKey = (_a = info.sourceFilename) !== null && _a !== void 0 ? _a : `!![GENERATED]:${name}`;\n                _this.assetCache.set(cacheKey, {\n                  info,\n                  name,\n                  source\n                });\n              }\n            }\n          }\n          resolve({\n            content: finalContent !== null && finalContent !== void 0 ? finalContent : '',\n            success: ((_b = childCompilation.errors) === null || _b === void 0 ? void 0 : _b.length) === 0\n          });\n        });\n      });\n    })();\n  }\n  _evaluate(filename, source) {\n    // Evaluate code\n    var _a;\n    // css-loader requires the btoa function to exist to correctly generate inline sourcemaps\n    const context = {\n      btoa(input) {\n        return node_buffer_1.Buffer.from(input).toString('base64');\n      }\n    };\n    try {\n      vm.runInNewContext(source, context, {\n        filename\n      });\n    } catch {\n      // Error are propagated through the child compilation.\n      return null;\n    }\n    if (typeof context.resource === 'string') {\n      return context.resource;\n    } else if (typeof ((_a = context.resource) === null || _a === void 0 ? void 0 : _a.default) === 'string') {\n      return context.resource.default;\n    }\n    throw new Error(`The loader \"${filename}\" didn't return a string.`);\n  }\n  get(filePath) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      var _a;\n      const normalizedFile = (0, paths_1.normalizePath)(filePath);\n      let compilationResult = (_a = _this2.fileCache) === null || _a === void 0 ? void 0 : _a.get(normalizedFile);\n      if (compilationResult === undefined) {\n        // cache miss so compile resource\n        compilationResult = yield _this2._compile(filePath);\n        // Only cache if compilation was successful\n        if (_this2.fileCache && compilationResult.success) {\n          _this2.fileCache.set(normalizedFile, compilationResult);\n        }\n      }\n      return compilationResult.content;\n    })();\n  }\n  process(data, fileExtension, resourceType, containingFile) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (data.trim().length === 0) {\n        return '';\n      }\n      const compilationResult = yield _this3._compile(undefined, data, fileExtension, resourceType, containingFile);\n      return compilationResult.content;\n    })();\n  }\n}\nexports.WebpackResourceLoader = WebpackResourceLoader;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","WebpackResourceLoader","node_assert_1","require","node_buffer_1","path","vm","diagnostics_1","paths_1","inline_resource_1","replace_resources_1","constructor","shouldCache","_fileDependencies","Map","_reverseDependencies","modifiedResources","Set","outputPathCounter","inlineDataLoaderPath","InlineAngularResourceLoaderPath","fileCache","assetCache","update","parentCompilation","changedFiles","_a","_b","_c","_d","_e","_parentCompilation","clear","changedFile","changedFileNormalized","normalizePath","delete","affectedResource","getAffectedResources","affectedResourceNormalized","add","effectedDependencies","getResourceDependencies","name","source","info","emitAsset","clearParentCompilation","getModifiedResourceFiles","filePath","file","setAffectedResources","resources","set","_compile","data","fileExtension","resourceType","containingFile","Error","context","webpack","compiler","EntryPlugin","NormalModule","WebpackError","library","node","sources","util","createHash","getEntry","NG_COMPONENT_RESOURCE_QUERY","digest","entry","match","outputFilePath","outputOptions","filename","type","childCompiler","createChildCompiler","NodeTemplatePlugin","NodeTargetPlugin","EnableLibraryPlugin","hooks","thisCompilation","tap","compilation","normalModuleFactory","resolveForScheme","for","resourceData","resource","getCompilationHooks","readResourceForScheme","InlineAngularResourceSymbol","additionalAssets","asset","assets","output","_evaluate","toString","RawSource","error","default","addError","message","finalContent","childCompilation","processAssets","stage","Compilation","PROCESS_ASSETS_STAGE_REPORT","files","chunks","deleteAsset","Promise","resolve","reject","runAsChild","_","parent","children","filter","child","fileDependencies","dependency","extname","endsWith","resolvedFile","contextDependencies","addAll","missingDependencies","buildDependencies","warnings","push","errors","getAssets","cacheKey","sourceFilename","content","success","length","btoa","input","Buffer","from","runInNewContext","normalizedFile","compilationResult","process","trim"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@ngtools/webpack/src/resource_loader.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebpackResourceLoader = void 0;\nconst node_assert_1 = __importDefault(require(\"node:assert\"));\nconst node_buffer_1 = require(\"node:buffer\");\nconst path = __importStar(require(\"node:path\"));\nconst vm = __importStar(require(\"node:vm\"));\nconst diagnostics_1 = require(\"./ivy/diagnostics\");\nconst paths_1 = require(\"./ivy/paths\");\nconst inline_resource_1 = require(\"./loaders/inline-resource\");\nconst replace_resources_1 = require(\"./transformers/replace_resources\");\nclass WebpackResourceLoader {\n    constructor(shouldCache) {\n        this._fileDependencies = new Map();\n        this._reverseDependencies = new Map();\n        this.modifiedResources = new Set();\n        this.outputPathCounter = 1;\n        this.inlineDataLoaderPath = inline_resource_1.InlineAngularResourceLoaderPath;\n        if (shouldCache) {\n            this.fileCache = new Map();\n            this.assetCache = new Map();\n        }\n    }\n    update(parentCompilation, changedFiles) {\n        var _a, _b, _c, _d, _e;\n        this._parentCompilation = parentCompilation;\n        // Update resource cache and modified resources\n        this.modifiedResources.clear();\n        if (changedFiles) {\n            for (const changedFile of changedFiles) {\n                const changedFileNormalized = (0, paths_1.normalizePath)(changedFile);\n                (_a = this.assetCache) === null || _a === void 0 ? void 0 : _a.delete(changedFileNormalized);\n                for (const affectedResource of this.getAffectedResources(changedFile)) {\n                    const affectedResourceNormalized = (0, paths_1.normalizePath)(affectedResource);\n                    (_b = this.fileCache) === null || _b === void 0 ? void 0 : _b.delete(affectedResourceNormalized);\n                    this.modifiedResources.add(affectedResource);\n                    for (const effectedDependencies of this.getResourceDependencies(affectedResourceNormalized)) {\n                        (_c = this.assetCache) === null || _c === void 0 ? void 0 : _c.delete((0, paths_1.normalizePath)(effectedDependencies));\n                    }\n                }\n            }\n        }\n        else {\n            (_d = this.fileCache) === null || _d === void 0 ? void 0 : _d.clear();\n            (_e = this.assetCache) === null || _e === void 0 ? void 0 : _e.clear();\n        }\n        // Re-emit all assets for un-effected files\n        if (this.assetCache) {\n            for (const [, { name, source, info }] of this.assetCache) {\n                this._parentCompilation.emitAsset(name, source, info);\n            }\n        }\n    }\n    clearParentCompilation() {\n        this._parentCompilation = undefined;\n    }\n    getModifiedResourceFiles() {\n        return this.modifiedResources;\n    }\n    getResourceDependencies(filePath) {\n        return this._fileDependencies.get(filePath) || [];\n    }\n    getAffectedResources(file) {\n        return this._reverseDependencies.get(file) || [];\n    }\n    setAffectedResources(file, resources) {\n        this._reverseDependencies.set(file, new Set(resources));\n    }\n    // eslint-disable-next-line max-lines-per-function\n    async _compile(filePath, data, fileExtension, resourceType, containingFile) {\n        if (!this._parentCompilation) {\n            throw new Error('WebpackResourceLoader cannot be used without parentCompilation');\n        }\n        const { context, webpack } = this._parentCompilation.compiler;\n        const { EntryPlugin, NormalModule, WebpackError, library, node, sources, util: { createHash }, } = webpack;\n        const getEntry = () => {\n            if (filePath) {\n                return `${filePath}?${replace_resources_1.NG_COMPONENT_RESOURCE_QUERY}`;\n            }\n            else if (resourceType) {\n                return (\n                // app.component.ts-2.css?ngResource!=!@ngtools/webpack/src/loaders/inline-resource.js!app.component.ts\n                `${containingFile}-${this.outputPathCounter}.${fileExtension}` +\n                    `?${replace_resources_1.NG_COMPONENT_RESOURCE_QUERY}!=!${this.inlineDataLoaderPath}!${containingFile}`);\n            }\n            else if (data) {\n                // Create a special URL for reading the resource from memory\n                return `angular-resource:${resourceType},${createHash('xxhash64')\n                    .update(data)\n                    .digest('hex')}`;\n            }\n            throw new Error(`\"filePath\", \"resourceType\" or \"data\" must be specified.`);\n        };\n        const entry = getEntry();\n        // Simple sanity check.\n        if (filePath === null || filePath === void 0 ? void 0 : filePath.match(/\\.[jt]s$/)) {\n            throw new Error(`Cannot use a JavaScript or TypeScript file (${filePath}) in a component's styleUrls or templateUrl.`);\n        }\n        const outputFilePath = filePath ||\n            `${containingFile}-angular-inline--${this.outputPathCounter++}.${resourceType === 'template' ? 'html' : 'css'}`;\n        const outputOptions = {\n            filename: outputFilePath,\n            library: {\n                type: 'var',\n                name: 'resource',\n            },\n        };\n        const childCompiler = this._parentCompilation.createChildCompiler('angular-compiler:resource', outputOptions, [\n            new node.NodeTemplatePlugin(outputOptions),\n            new node.NodeTargetPlugin(),\n            new EntryPlugin(context, entry, { name: 'resource' }),\n            new library.EnableLibraryPlugin('var'),\n        ]);\n        childCompiler.hooks.thisCompilation.tap('angular-compiler', (compilation, { normalModuleFactory }) => {\n            // If no data is provided, the resource will be read from the filesystem\n            if (data !== undefined) {\n                normalModuleFactory.hooks.resolveForScheme\n                    .for('angular-resource')\n                    .tap('angular-compiler', (resourceData) => {\n                    if (filePath) {\n                        resourceData.path = filePath;\n                        resourceData.resource = filePath;\n                    }\n                    return true;\n                });\n                NormalModule.getCompilationHooks(compilation)\n                    .readResourceForScheme.for('angular-resource')\n                    .tap('angular-compiler', () => data);\n                compilation[inline_resource_1.InlineAngularResourceSymbol] = data;\n            }\n            compilation.hooks.additionalAssets.tap('angular-compiler', () => {\n                const asset = compilation.assets[outputFilePath];\n                if (!asset) {\n                    return;\n                }\n                try {\n                    const output = this._evaluate(outputFilePath, asset.source().toString());\n                    if (typeof output === 'string') {\n                        compilation.assets[outputFilePath] = new sources.RawSource(output);\n                    }\n                }\n                catch (error) {\n                    (0, node_assert_1.default)(error instanceof Error, 'catch clause variable is not an Error instance');\n                    // Use compilation errors, as otherwise webpack will choke\n                    (0, diagnostics_1.addError)(compilation, error.message);\n                }\n            });\n        });\n        let finalContent;\n        childCompiler.hooks.compilation.tap('angular-compiler', (childCompilation) => {\n            childCompilation.hooks.processAssets.tap({ name: 'angular-compiler', stage: webpack.Compilation.PROCESS_ASSETS_STAGE_REPORT }, () => {\n                var _a;\n                finalContent = (_a = childCompilation.assets[outputFilePath]) === null || _a === void 0 ? void 0 : _a.source().toString();\n                for (const { files } of childCompilation.chunks) {\n                    for (const file of files) {\n                        childCompilation.deleteAsset(file);\n                    }\n                }\n            });\n        });\n        return new Promise((resolve, reject) => {\n            childCompiler.runAsChild((error, _, childCompilation) => {\n                var _a, _b;\n                if (error) {\n                    reject(error);\n                    return;\n                }\n                else if (!childCompilation) {\n                    reject(new Error('Unknown child compilation error'));\n                    return;\n                }\n                // Workaround to attempt to reduce memory usage of child compilations.\n                // This removes the child compilation from the main compilation and manually propagates\n                // all dependencies, warnings, and errors.\n                const parent = childCompiler.parentCompilation;\n                if (parent) {\n                    parent.children = parent.children.filter((child) => child !== childCompilation);\n                    let fileDependencies;\n                    for (const dependency of childCompilation.fileDependencies) {\n                        // Skip paths that do not appear to be files (have no extension).\n                        // `fileDependencies` can contain directories and not just files which can\n                        // cause incorrect cache invalidation on rebuilds.\n                        if (!path.extname(dependency)) {\n                            continue;\n                        }\n                        if (data && containingFile && dependency.endsWith(entry)) {\n                            // use containing file if the resource was inline\n                            parent.fileDependencies.add(containingFile);\n                        }\n                        else {\n                            parent.fileDependencies.add(dependency);\n                        }\n                        // Save the dependencies for this resource.\n                        if (filePath) {\n                            const resolvedFile = (0, paths_1.normalizePath)(dependency);\n                            const entry = this._reverseDependencies.get(resolvedFile);\n                            if (entry) {\n                                entry.add(filePath);\n                            }\n                            else {\n                                this._reverseDependencies.set(resolvedFile, new Set([filePath]));\n                            }\n                            if (fileDependencies) {\n                                fileDependencies.add(dependency);\n                            }\n                            else {\n                                fileDependencies = new Set([dependency]);\n                                this._fileDependencies.set(filePath, fileDependencies);\n                            }\n                        }\n                    }\n                    parent.contextDependencies.addAll(childCompilation.contextDependencies);\n                    parent.missingDependencies.addAll(childCompilation.missingDependencies);\n                    parent.buildDependencies.addAll(childCompilation.buildDependencies);\n                    parent.warnings.push(...childCompilation.warnings);\n                    parent.errors.push(...childCompilation.errors);\n                    if (this.assetCache) {\n                        for (const { info, name, source } of childCompilation.getAssets()) {\n                            // Use the originating file as the cache key if present\n                            // Otherwise, generate a cache key based on the generated name\n                            const cacheKey = (_a = info.sourceFilename) !== null && _a !== void 0 ? _a : `!![GENERATED]:${name}`;\n                            this.assetCache.set(cacheKey, { info, name, source });\n                        }\n                    }\n                }\n                resolve({\n                    content: finalContent !== null && finalContent !== void 0 ? finalContent : '',\n                    success: ((_b = childCompilation.errors) === null || _b === void 0 ? void 0 : _b.length) === 0,\n                });\n            });\n        });\n    }\n    _evaluate(filename, source) {\n        // Evaluate code\n        var _a;\n        // css-loader requires the btoa function to exist to correctly generate inline sourcemaps\n        const context = {\n            btoa(input) {\n                return node_buffer_1.Buffer.from(input).toString('base64');\n            },\n        };\n        try {\n            vm.runInNewContext(source, context, { filename });\n        }\n        catch {\n            // Error are propagated through the child compilation.\n            return null;\n        }\n        if (typeof context.resource === 'string') {\n            return context.resource;\n        }\n        else if (typeof ((_a = context.resource) === null || _a === void 0 ? void 0 : _a.default) === 'string') {\n            return context.resource.default;\n        }\n        throw new Error(`The loader \"${filename}\" didn't return a string.`);\n    }\n    async get(filePath) {\n        var _a;\n        const normalizedFile = (0, paths_1.normalizePath)(filePath);\n        let compilationResult = (_a = this.fileCache) === null || _a === void 0 ? void 0 : _a.get(normalizedFile);\n        if (compilationResult === undefined) {\n            // cache miss so compile resource\n            compilationResult = await this._compile(filePath);\n            // Only cache if compilation was successful\n            if (this.fileCache && compilationResult.success) {\n                this.fileCache.set(normalizedFile, compilationResult);\n            }\n        }\n        return compilationResult.content;\n    }\n    async process(data, fileExtension, resourceType, containingFile) {\n        if (data.trim().length === 0) {\n            return '';\n        }\n        const compilationResult = await this._compile(undefined, data, fileExtension, resourceType, containingFile);\n        return compilationResult.content;\n    }\n}\nexports.WebpackResourceLoader = WebpackResourceLoader;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}