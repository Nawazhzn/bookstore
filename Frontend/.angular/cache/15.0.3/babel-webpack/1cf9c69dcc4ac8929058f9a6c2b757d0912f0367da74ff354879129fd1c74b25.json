{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.augmentAppWithServiceWorkerCore = exports.augmentAppWithServiceWorkerEsbuild = exports.augmentAppWithServiceWorker = void 0;\nconst crypto = __importStar(require(\"crypto\"));\nconst fs_1 = require(\"fs\");\nconst path = __importStar(require(\"path\"));\nconst error_1 = require(\"./error\");\nconst load_esm_1 = require(\"./load-esm\");\nclass CliFilesystem {\n  constructor(fs, base) {\n    this.fs = fs;\n    this.base = base;\n  }\n  list(dir) {\n    return this._recursiveList(this._resolve(dir), []);\n  }\n  read(file) {\n    return this.fs.readFile(this._resolve(file), 'utf-8');\n  }\n  hash(file) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return crypto.createHash('sha1').update(yield _this.fs.readFile(_this._resolve(file))).digest('hex');\n    })();\n  }\n  write(_file, _content) {\n    throw new Error('This should never happen.');\n  }\n  _resolve(file) {\n    return path.join(this.base, file);\n  }\n  _recursiveList(dir, items) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const subdirectories = [];\n      for (const entry of yield _this2.fs.readdir(dir)) {\n        const entryPath = path.join(dir, entry);\n        const stats = yield _this2.fs.stat(entryPath);\n        if (stats.isFile()) {\n          // Uses posix paths since the service worker expects URLs\n          items.push('/' + path.relative(_this2.base, entryPath).replace(/\\\\/g, '/'));\n        } else if (stats.isDirectory()) {\n          subdirectories.push(entryPath);\n        }\n      }\n      for (const subdirectory of subdirectories) {\n        yield _this2._recursiveList(subdirectory, items);\n      }\n      return items;\n    })();\n  }\n}\nfunction augmentAppWithServiceWorker(_x, _x2, _x3, _x4, _x5) {\n  return _augmentAppWithServiceWorker.apply(this, arguments);\n}\nfunction _augmentAppWithServiceWorker() {\n  _augmentAppWithServiceWorker = _asyncToGenerator(function* (appRoot, workspaceRoot, outputPath, baseHref, ngswConfigPath, inputputFileSystem = fs_1.promises, outputFileSystem = fs_1.promises) {\n    // Determine the configuration file path\n    const configPath = ngswConfigPath ? path.join(workspaceRoot, ngswConfigPath) : path.join(appRoot, 'ngsw-config.json');\n    // Read the configuration file\n    let config;\n    try {\n      const configurationData = yield inputputFileSystem.readFile(configPath, 'utf-8');\n      config = JSON.parse(configurationData);\n    } catch (error) {\n      (0, error_1.assertIsError)(error);\n      if (error.code === 'ENOENT') {\n        throw new Error('Error: Expected to find an ngsw-config.json configuration file' + ` in the ${appRoot} folder. Either provide one or` + ' disable Service Worker in the angular.json configuration file.');\n      } else {\n        throw error;\n      }\n    }\n    return augmentAppWithServiceWorkerCore(config, outputPath, baseHref, inputputFileSystem, outputFileSystem);\n  });\n  return _augmentAppWithServiceWorker.apply(this, arguments);\n}\nexports.augmentAppWithServiceWorker = augmentAppWithServiceWorker;\n// This is currently used by the esbuild-based builder\nfunction augmentAppWithServiceWorkerEsbuild(_x6, _x7, _x8, _x9) {\n  return _augmentAppWithServiceWorkerEsbuild.apply(this, arguments);\n}\nfunction _augmentAppWithServiceWorkerEsbuild() {\n  _augmentAppWithServiceWorkerEsbuild = _asyncToGenerator(function* (workspaceRoot, configPath, outputPath, baseHref) {\n    // Read the configuration file\n    let config;\n    try {\n      const configurationData = yield fs_1.promises.readFile(configPath, 'utf-8');\n      config = JSON.parse(configurationData);\n    } catch (error) {\n      (0, error_1.assertIsError)(error);\n      if (error.code === 'ENOENT') {\n        // TODO: Generate an error object that can be consumed by the esbuild-based builder\n        const message = `Service worker configuration file \"${path.relative(workspaceRoot, configPath)}\" could not be found.`;\n        throw new Error(message);\n      } else {\n        throw error;\n      }\n    }\n    // TODO: Return the output files and any errors/warnings\n    return augmentAppWithServiceWorkerCore(config, outputPath, baseHref);\n  });\n  return _augmentAppWithServiceWorkerEsbuild.apply(this, arguments);\n}\nexports.augmentAppWithServiceWorkerEsbuild = augmentAppWithServiceWorkerEsbuild;\nfunction augmentAppWithServiceWorkerCore(_x10, _x11, _x12) {\n  return _augmentAppWithServiceWorkerCore.apply(this, arguments);\n}\nfunction _augmentAppWithServiceWorkerCore() {\n  _augmentAppWithServiceWorkerCore = _asyncToGenerator(function* (config, outputPath, baseHref, inputputFileSystem = fs_1.promises, outputFileSystem = fs_1.promises) {\n    // Load ESM `@angular/service-worker/config` using the TypeScript dynamic import workaround.\n    // Once TypeScript provides support for keeping the dynamic import this workaround can be\n    // changed to a direct dynamic import.\n    const GeneratorConstructor = (yield (0, load_esm_1.loadEsmModule)('@angular/service-worker/config')).Generator;\n    // Generate the manifest\n    const generator = new GeneratorConstructor(new CliFilesystem(outputFileSystem, outputPath), baseHref);\n    const output = yield generator.process(config);\n    // Write the manifest\n    const manifest = JSON.stringify(output, null, 2);\n    yield outputFileSystem.writeFile(path.join(outputPath, 'ngsw.json'), manifest);\n    // Find the service worker package\n    const workerPath = require.resolve('@angular/service-worker/ngsw-worker.js');\n    const copy = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (src, dest) {\n        const resolvedDest = path.join(outputPath, dest);\n        return inputputFileSystem === outputFileSystem ?\n        // Native FS (Builder).\n        inputputFileSystem.copyFile(workerPath, resolvedDest, fs_1.constants.COPYFILE_FICLONE) :\n        // memfs (Webpack): Read the file from the input FS (disk) and write it to the output FS (memory).\n        outputFileSystem.writeFile(resolvedDest, yield inputputFileSystem.readFile(src));\n      });\n      return function copy(_x13, _x14) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    // Write the worker code\n    yield copy(workerPath, 'ngsw-worker.js');\n    // If present, write the safety worker code\n    try {\n      const safetyPath = path.join(path.dirname(workerPath), 'safety-worker.js');\n      yield copy(safetyPath, 'worker-basic.min.js');\n      yield copy(safetyPath, 'safety-worker.js');\n    } catch (error) {\n      (0, error_1.assertIsError)(error);\n      if (error.code !== 'ENOENT') {\n        throw error;\n      }\n    }\n  });\n  return _augmentAppWithServiceWorkerCore.apply(this, arguments);\n}\nexports.augmentAppWithServiceWorkerCore = augmentAppWithServiceWorkerCore;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","augmentAppWithServiceWorkerCore","augmentAppWithServiceWorkerEsbuild","augmentAppWithServiceWorker","crypto","require","fs_1","path","error_1","load_esm_1","CliFilesystem","constructor","fs","base","list","dir","_recursiveList","_resolve","read","file","readFile","hash","createHash","update","digest","write","_file","_content","Error","join","items","subdirectories","entry","readdir","entryPath","stats","stat","isFile","push","relative","replace","isDirectory","subdirectory","appRoot","workspaceRoot","outputPath","baseHref","ngswConfigPath","inputputFileSystem","promises","outputFileSystem","configPath","config","configurationData","JSON","parse","error","assertIsError","code","message","GeneratorConstructor","loadEsmModule","Generator","generator","output","process","manifest","stringify","writeFile","workerPath","resolve","copy","src","dest","resolvedDest","copyFile","constants","COPYFILE_FICLONE","safetyPath","dirname"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/utils/service-worker.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.augmentAppWithServiceWorkerCore = exports.augmentAppWithServiceWorkerEsbuild = exports.augmentAppWithServiceWorker = void 0;\nconst crypto = __importStar(require(\"crypto\"));\nconst fs_1 = require(\"fs\");\nconst path = __importStar(require(\"path\"));\nconst error_1 = require(\"./error\");\nconst load_esm_1 = require(\"./load-esm\");\nclass CliFilesystem {\n    constructor(fs, base) {\n        this.fs = fs;\n        this.base = base;\n    }\n    list(dir) {\n        return this._recursiveList(this._resolve(dir), []);\n    }\n    read(file) {\n        return this.fs.readFile(this._resolve(file), 'utf-8');\n    }\n    async hash(file) {\n        return crypto\n            .createHash('sha1')\n            .update(await this.fs.readFile(this._resolve(file)))\n            .digest('hex');\n    }\n    write(_file, _content) {\n        throw new Error('This should never happen.');\n    }\n    _resolve(file) {\n        return path.join(this.base, file);\n    }\n    async _recursiveList(dir, items) {\n        const subdirectories = [];\n        for (const entry of await this.fs.readdir(dir)) {\n            const entryPath = path.join(dir, entry);\n            const stats = await this.fs.stat(entryPath);\n            if (stats.isFile()) {\n                // Uses posix paths since the service worker expects URLs\n                items.push('/' + path.relative(this.base, entryPath).replace(/\\\\/g, '/'));\n            }\n            else if (stats.isDirectory()) {\n                subdirectories.push(entryPath);\n            }\n        }\n        for (const subdirectory of subdirectories) {\n            await this._recursiveList(subdirectory, items);\n        }\n        return items;\n    }\n}\nasync function augmentAppWithServiceWorker(appRoot, workspaceRoot, outputPath, baseHref, ngswConfigPath, inputputFileSystem = fs_1.promises, outputFileSystem = fs_1.promises) {\n    // Determine the configuration file path\n    const configPath = ngswConfigPath\n        ? path.join(workspaceRoot, ngswConfigPath)\n        : path.join(appRoot, 'ngsw-config.json');\n    // Read the configuration file\n    let config;\n    try {\n        const configurationData = await inputputFileSystem.readFile(configPath, 'utf-8');\n        config = JSON.parse(configurationData);\n    }\n    catch (error) {\n        (0, error_1.assertIsError)(error);\n        if (error.code === 'ENOENT') {\n            throw new Error('Error: Expected to find an ngsw-config.json configuration file' +\n                ` in the ${appRoot} folder. Either provide one or` +\n                ' disable Service Worker in the angular.json configuration file.');\n        }\n        else {\n            throw error;\n        }\n    }\n    return augmentAppWithServiceWorkerCore(config, outputPath, baseHref, inputputFileSystem, outputFileSystem);\n}\nexports.augmentAppWithServiceWorker = augmentAppWithServiceWorker;\n// This is currently used by the esbuild-based builder\nasync function augmentAppWithServiceWorkerEsbuild(workspaceRoot, configPath, outputPath, baseHref) {\n    // Read the configuration file\n    let config;\n    try {\n        const configurationData = await fs_1.promises.readFile(configPath, 'utf-8');\n        config = JSON.parse(configurationData);\n    }\n    catch (error) {\n        (0, error_1.assertIsError)(error);\n        if (error.code === 'ENOENT') {\n            // TODO: Generate an error object that can be consumed by the esbuild-based builder\n            const message = `Service worker configuration file \"${path.relative(workspaceRoot, configPath)}\" could not be found.`;\n            throw new Error(message);\n        }\n        else {\n            throw error;\n        }\n    }\n    // TODO: Return the output files and any errors/warnings\n    return augmentAppWithServiceWorkerCore(config, outputPath, baseHref);\n}\nexports.augmentAppWithServiceWorkerEsbuild = augmentAppWithServiceWorkerEsbuild;\nasync function augmentAppWithServiceWorkerCore(config, outputPath, baseHref, inputputFileSystem = fs_1.promises, outputFileSystem = fs_1.promises) {\n    // Load ESM `@angular/service-worker/config` using the TypeScript dynamic import workaround.\n    // Once TypeScript provides support for keeping the dynamic import this workaround can be\n    // changed to a direct dynamic import.\n    const GeneratorConstructor = (await (0, load_esm_1.loadEsmModule)('@angular/service-worker/config')).Generator;\n    // Generate the manifest\n    const generator = new GeneratorConstructor(new CliFilesystem(outputFileSystem, outputPath), baseHref);\n    const output = await generator.process(config);\n    // Write the manifest\n    const manifest = JSON.stringify(output, null, 2);\n    await outputFileSystem.writeFile(path.join(outputPath, 'ngsw.json'), manifest);\n    // Find the service worker package\n    const workerPath = require.resolve('@angular/service-worker/ngsw-worker.js');\n    const copy = async (src, dest) => {\n        const resolvedDest = path.join(outputPath, dest);\n        return inputputFileSystem === outputFileSystem\n            ? // Native FS (Builder).\n                inputputFileSystem.copyFile(workerPath, resolvedDest, fs_1.constants.COPYFILE_FICLONE)\n            : // memfs (Webpack): Read the file from the input FS (disk) and write it to the output FS (memory).\n                outputFileSystem.writeFile(resolvedDest, await inputputFileSystem.readFile(src));\n    };\n    // Write the worker code\n    await copy(workerPath, 'ngsw-worker.js');\n    // If present, write the safety worker code\n    try {\n        const safetyPath = path.join(path.dirname(workerPath), 'safety-worker.js');\n        await copy(safetyPath, 'worker-basic.min.js');\n        await copy(safetyPath, 'safety-worker.js');\n    }\n    catch (error) {\n        (0, error_1.assertIsError)(error);\n        if (error.code !== 'ENOENT') {\n            throw error;\n        }\n    }\n}\nexports.augmentAppWithServiceWorkerCore = augmentAppWithServiceWorkerCore;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}