{"ast":null,"code":"'use strict';\n\nconst doctype = require('parse5/lib/common/doctype');\nconst {\n  DOCUMENT_MODE\n} = require('parse5/lib/common/html');\n\n//Conversion tables for DOM Level1 structure emulation\nconst nodeTypes = {\n  element: 1,\n  text: 3,\n  cdata: 4,\n  comment: 8\n};\nconst nodePropertyShorthands = {\n  tagName: 'name',\n  childNodes: 'children',\n  parentNode: 'parent',\n  previousSibling: 'prev',\n  nextSibling: 'next',\n  nodeValue: 'data'\n};\n\n//Node\nclass Node {\n  constructor(props) {\n    for (const key of Object.keys(props)) {\n      this[key] = props[key];\n    }\n  }\n  get firstChild() {\n    const children = this.children;\n    return children && children[0] || null;\n  }\n  get lastChild() {\n    const children = this.children;\n    return children && children[children.length - 1] || null;\n  }\n  get nodeType() {\n    return nodeTypes[this.type] || nodeTypes.element;\n  }\n}\nObject.keys(nodePropertyShorthands).forEach(key => {\n  const shorthand = nodePropertyShorthands[key];\n  Object.defineProperty(Node.prototype, key, {\n    get: function () {\n      return this[shorthand] || null;\n    },\n    set: function (val) {\n      this[shorthand] = val;\n      return val;\n    }\n  });\n});\n\n//Node construction\nexports.createDocument = function () {\n  return new Node({\n    type: 'root',\n    name: 'root',\n    parent: null,\n    prev: null,\n    next: null,\n    children: [],\n    'x-mode': DOCUMENT_MODE.NO_QUIRKS\n  });\n};\nexports.createDocumentFragment = function () {\n  return new Node({\n    type: 'root',\n    name: 'root',\n    parent: null,\n    prev: null,\n    next: null,\n    children: []\n  });\n};\nexports.createElement = function (tagName, namespaceURI, attrs) {\n  const attribs = Object.create(null);\n  const attribsNamespace = Object.create(null);\n  const attribsPrefix = Object.create(null);\n  for (let i = 0; i < attrs.length; i++) {\n    const attrName = attrs[i].name;\n    attribs[attrName] = attrs[i].value;\n    attribsNamespace[attrName] = attrs[i].namespace;\n    attribsPrefix[attrName] = attrs[i].prefix;\n  }\n  return new Node({\n    type: tagName === 'script' || tagName === 'style' ? tagName : 'tag',\n    name: tagName,\n    namespace: namespaceURI,\n    attribs: attribs,\n    'x-attribsNamespace': attribsNamespace,\n    'x-attribsPrefix': attribsPrefix,\n    children: [],\n    parent: null,\n    prev: null,\n    next: null\n  });\n};\nexports.createCommentNode = function (data) {\n  return new Node({\n    type: 'comment',\n    data: data,\n    parent: null,\n    prev: null,\n    next: null\n  });\n};\nconst createTextNode = function (value) {\n  return new Node({\n    type: 'text',\n    data: value,\n    parent: null,\n    prev: null,\n    next: null\n  });\n};\n\n//Tree mutation\nconst appendChild = exports.appendChild = function (parentNode, newNode) {\n  const prev = parentNode.children[parentNode.children.length - 1];\n  if (prev) {\n    prev.next = newNode;\n    newNode.prev = prev;\n  }\n  parentNode.children.push(newNode);\n  newNode.parent = parentNode;\n};\nconst insertBefore = exports.insertBefore = function (parentNode, newNode, referenceNode) {\n  const insertionIdx = parentNode.children.indexOf(referenceNode);\n  const prev = referenceNode.prev;\n  if (prev) {\n    prev.next = newNode;\n    newNode.prev = prev;\n  }\n  referenceNode.prev = newNode;\n  newNode.next = referenceNode;\n  parentNode.children.splice(insertionIdx, 0, newNode);\n  newNode.parent = parentNode;\n};\nexports.setTemplateContent = function (templateElement, contentElement) {\n  appendChild(templateElement, contentElement);\n};\nexports.getTemplateContent = function (templateElement) {\n  return templateElement.children[0];\n};\nexports.setDocumentType = function (document, name, publicId, systemId) {\n  const data = doctype.serializeContent(name, publicId, systemId);\n  let doctypeNode = null;\n  for (let i = 0; i < document.children.length; i++) {\n    if (document.children[i].type === 'directive' && document.children[i].name === '!doctype') {\n      doctypeNode = document.children[i];\n      break;\n    }\n  }\n  if (doctypeNode) {\n    doctypeNode.data = data;\n    doctypeNode['x-name'] = name;\n    doctypeNode['x-publicId'] = publicId;\n    doctypeNode['x-systemId'] = systemId;\n  } else {\n    appendChild(document, new Node({\n      type: 'directive',\n      name: '!doctype',\n      data: data,\n      'x-name': name,\n      'x-publicId': publicId,\n      'x-systemId': systemId\n    }));\n  }\n};\nexports.setDocumentMode = function (document, mode) {\n  document['x-mode'] = mode;\n};\nexports.getDocumentMode = function (document) {\n  return document['x-mode'];\n};\nexports.detachNode = function (node) {\n  if (node.parent) {\n    const idx = node.parent.children.indexOf(node);\n    const prev = node.prev;\n    const next = node.next;\n    node.prev = null;\n    node.next = null;\n    if (prev) {\n      prev.next = next;\n    }\n    if (next) {\n      next.prev = prev;\n    }\n    node.parent.children.splice(idx, 1);\n    node.parent = null;\n  }\n};\nexports.insertText = function (parentNode, text) {\n  const lastChild = parentNode.children[parentNode.children.length - 1];\n  if (lastChild && lastChild.type === 'text') {\n    lastChild.data += text;\n  } else {\n    appendChild(parentNode, createTextNode(text));\n  }\n};\nexports.insertTextBefore = function (parentNode, text, referenceNode) {\n  const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n  if (prevNode && prevNode.type === 'text') {\n    prevNode.data += text;\n  } else {\n    insertBefore(parentNode, createTextNode(text), referenceNode);\n  }\n};\nexports.adoptAttributes = function (recipient, attrs) {\n  for (let i = 0; i < attrs.length; i++) {\n    const attrName = attrs[i].name;\n    if (typeof recipient.attribs[attrName] === 'undefined') {\n      recipient.attribs[attrName] = attrs[i].value;\n      recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n      recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n    }\n  }\n};\n\n//Tree traversing\nexports.getFirstChild = function (node) {\n  return node.children[0];\n};\nexports.getChildNodes = function (node) {\n  return node.children;\n};\nexports.getParentNode = function (node) {\n  return node.parent;\n};\nexports.getAttrList = function (element) {\n  const attrList = [];\n  for (const name in element.attribs) {\n    attrList.push({\n      name: name,\n      value: element.attribs[name],\n      namespace: element['x-attribsNamespace'][name],\n      prefix: element['x-attribsPrefix'][name]\n    });\n  }\n  return attrList;\n};\n\n//Node data\nexports.getTagName = function (element) {\n  return element.name;\n};\nexports.getNamespaceURI = function (element) {\n  return element.namespace;\n};\nexports.getTextNodeContent = function (textNode) {\n  return textNode.data;\n};\nexports.getCommentNodeContent = function (commentNode) {\n  return commentNode.data;\n};\nexports.getDocumentTypeNodeName = function (doctypeNode) {\n  return doctypeNode['x-name'];\n};\nexports.getDocumentTypeNodePublicId = function (doctypeNode) {\n  return doctypeNode['x-publicId'];\n};\nexports.getDocumentTypeNodeSystemId = function (doctypeNode) {\n  return doctypeNode['x-systemId'];\n};\n\n//Node types\nexports.isTextNode = function (node) {\n  return node.type === 'text';\n};\nexports.isCommentNode = function (node) {\n  return node.type === 'comment';\n};\nexports.isDocumentTypeNode = function (node) {\n  return node.type === 'directive' && node.name === '!doctype';\n};\nexports.isElementNode = function (node) {\n  return !!node.attribs;\n};\n\n// Source code location\nexports.setNodeSourceCodeLocation = function (node, location) {\n  node.sourceCodeLocation = location;\n};\nexports.getNodeSourceCodeLocation = function (node) {\n  return node.sourceCodeLocation;\n};\nexports.updateNodeSourceCodeLocation = function (node, endLocation) {\n  node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);\n};","map":{"version":3,"names":["doctype","require","DOCUMENT_MODE","nodeTypes","element","text","cdata","comment","nodePropertyShorthands","tagName","childNodes","parentNode","previousSibling","nextSibling","nodeValue","Node","constructor","props","key","Object","keys","firstChild","children","lastChild","length","nodeType","type","forEach","shorthand","defineProperty","prototype","get","set","val","exports","createDocument","name","parent","prev","next","NO_QUIRKS","createDocumentFragment","createElement","namespaceURI","attrs","attribs","create","attribsNamespace","attribsPrefix","i","attrName","value","namespace","prefix","createCommentNode","data","createTextNode","appendChild","newNode","push","insertBefore","referenceNode","insertionIdx","indexOf","splice","setTemplateContent","templateElement","contentElement","getTemplateContent","setDocumentType","document","publicId","systemId","serializeContent","doctypeNode","setDocumentMode","mode","getDocumentMode","detachNode","node","idx","insertText","insertTextBefore","prevNode","adoptAttributes","recipient","getFirstChild","getChildNodes","getParentNode","getAttrList","attrList","getTagName","getNamespaceURI","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isTextNode","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","location","sourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","assign"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/parse5-htmlparser2-tree-adapter/lib/index.js"],"sourcesContent":["'use strict';\n\nconst doctype = require('parse5/lib/common/doctype');\nconst { DOCUMENT_MODE } = require('parse5/lib/common/html');\n\n//Conversion tables for DOM Level1 structure emulation\nconst nodeTypes = {\n    element: 1,\n    text: 3,\n    cdata: 4,\n    comment: 8\n};\n\nconst nodePropertyShorthands = {\n    tagName: 'name',\n    childNodes: 'children',\n    parentNode: 'parent',\n    previousSibling: 'prev',\n    nextSibling: 'next',\n    nodeValue: 'data'\n};\n\n//Node\nclass Node {\n    constructor(props) {\n        for (const key of Object.keys(props)) {\n            this[key] = props[key];\n        }\n    }\n\n    get firstChild() {\n        const children = this.children;\n\n        return (children && children[0]) || null;\n    }\n\n    get lastChild() {\n        const children = this.children;\n\n        return (children && children[children.length - 1]) || null;\n    }\n\n    get nodeType() {\n        return nodeTypes[this.type] || nodeTypes.element;\n    }\n}\n\nObject.keys(nodePropertyShorthands).forEach(key => {\n    const shorthand = nodePropertyShorthands[key];\n\n    Object.defineProperty(Node.prototype, key, {\n        get: function() {\n            return this[shorthand] || null;\n        },\n        set: function(val) {\n            this[shorthand] = val;\n            return val;\n        }\n    });\n});\n\n//Node construction\nexports.createDocument = function() {\n    return new Node({\n        type: 'root',\n        name: 'root',\n        parent: null,\n        prev: null,\n        next: null,\n        children: [],\n        'x-mode': DOCUMENT_MODE.NO_QUIRKS\n    });\n};\n\nexports.createDocumentFragment = function() {\n    return new Node({\n        type: 'root',\n        name: 'root',\n        parent: null,\n        prev: null,\n        next: null,\n        children: []\n    });\n};\n\nexports.createElement = function(tagName, namespaceURI, attrs) {\n    const attribs = Object.create(null);\n    const attribsNamespace = Object.create(null);\n    const attribsPrefix = Object.create(null);\n\n    for (let i = 0; i < attrs.length; i++) {\n        const attrName = attrs[i].name;\n\n        attribs[attrName] = attrs[i].value;\n        attribsNamespace[attrName] = attrs[i].namespace;\n        attribsPrefix[attrName] = attrs[i].prefix;\n    }\n\n    return new Node({\n        type: tagName === 'script' || tagName === 'style' ? tagName : 'tag',\n        name: tagName,\n        namespace: namespaceURI,\n        attribs: attribs,\n        'x-attribsNamespace': attribsNamespace,\n        'x-attribsPrefix': attribsPrefix,\n        children: [],\n        parent: null,\n        prev: null,\n        next: null\n    });\n};\n\nexports.createCommentNode = function(data) {\n    return new Node({\n        type: 'comment',\n        data: data,\n        parent: null,\n        prev: null,\n        next: null\n    });\n};\n\nconst createTextNode = function(value) {\n    return new Node({\n        type: 'text',\n        data: value,\n        parent: null,\n        prev: null,\n        next: null\n    });\n};\n\n//Tree mutation\nconst appendChild = (exports.appendChild = function(parentNode, newNode) {\n    const prev = parentNode.children[parentNode.children.length - 1];\n\n    if (prev) {\n        prev.next = newNode;\n        newNode.prev = prev;\n    }\n\n    parentNode.children.push(newNode);\n    newNode.parent = parentNode;\n});\n\nconst insertBefore = (exports.insertBefore = function(parentNode, newNode, referenceNode) {\n    const insertionIdx = parentNode.children.indexOf(referenceNode);\n    const prev = referenceNode.prev;\n\n    if (prev) {\n        prev.next = newNode;\n        newNode.prev = prev;\n    }\n\n    referenceNode.prev = newNode;\n    newNode.next = referenceNode;\n\n    parentNode.children.splice(insertionIdx, 0, newNode);\n    newNode.parent = parentNode;\n});\n\nexports.setTemplateContent = function(templateElement, contentElement) {\n    appendChild(templateElement, contentElement);\n};\n\nexports.getTemplateContent = function(templateElement) {\n    return templateElement.children[0];\n};\n\nexports.setDocumentType = function(document, name, publicId, systemId) {\n    const data = doctype.serializeContent(name, publicId, systemId);\n    let doctypeNode = null;\n\n    for (let i = 0; i < document.children.length; i++) {\n        if (document.children[i].type === 'directive' && document.children[i].name === '!doctype') {\n            doctypeNode = document.children[i];\n            break;\n        }\n    }\n\n    if (doctypeNode) {\n        doctypeNode.data = data;\n        doctypeNode['x-name'] = name;\n        doctypeNode['x-publicId'] = publicId;\n        doctypeNode['x-systemId'] = systemId;\n    } else {\n        appendChild(\n            document,\n            new Node({\n                type: 'directive',\n                name: '!doctype',\n                data: data,\n                'x-name': name,\n                'x-publicId': publicId,\n                'x-systemId': systemId\n            })\n        );\n    }\n};\n\nexports.setDocumentMode = function(document, mode) {\n    document['x-mode'] = mode;\n};\n\nexports.getDocumentMode = function(document) {\n    return document['x-mode'];\n};\n\nexports.detachNode = function(node) {\n    if (node.parent) {\n        const idx = node.parent.children.indexOf(node);\n        const prev = node.prev;\n        const next = node.next;\n\n        node.prev = null;\n        node.next = null;\n\n        if (prev) {\n            prev.next = next;\n        }\n\n        if (next) {\n            next.prev = prev;\n        }\n\n        node.parent.children.splice(idx, 1);\n        node.parent = null;\n    }\n};\n\nexports.insertText = function(parentNode, text) {\n    const lastChild = parentNode.children[parentNode.children.length - 1];\n\n    if (lastChild && lastChild.type === 'text') {\n        lastChild.data += text;\n    } else {\n        appendChild(parentNode, createTextNode(text));\n    }\n};\n\nexports.insertTextBefore = function(parentNode, text, referenceNode) {\n    const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n\n    if (prevNode && prevNode.type === 'text') {\n        prevNode.data += text;\n    } else {\n        insertBefore(parentNode, createTextNode(text), referenceNode);\n    }\n};\n\nexports.adoptAttributes = function(recipient, attrs) {\n    for (let i = 0; i < attrs.length; i++) {\n        const attrName = attrs[i].name;\n\n        if (typeof recipient.attribs[attrName] === 'undefined') {\n            recipient.attribs[attrName] = attrs[i].value;\n            recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n            recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n        }\n    }\n};\n\n//Tree traversing\nexports.getFirstChild = function(node) {\n    return node.children[0];\n};\n\nexports.getChildNodes = function(node) {\n    return node.children;\n};\n\nexports.getParentNode = function(node) {\n    return node.parent;\n};\n\nexports.getAttrList = function(element) {\n    const attrList = [];\n\n    for (const name in element.attribs) {\n        attrList.push({\n            name: name,\n            value: element.attribs[name],\n            namespace: element['x-attribsNamespace'][name],\n            prefix: element['x-attribsPrefix'][name]\n        });\n    }\n\n    return attrList;\n};\n\n//Node data\nexports.getTagName = function(element) {\n    return element.name;\n};\n\nexports.getNamespaceURI = function(element) {\n    return element.namespace;\n};\n\nexports.getTextNodeContent = function(textNode) {\n    return textNode.data;\n};\n\nexports.getCommentNodeContent = function(commentNode) {\n    return commentNode.data;\n};\n\nexports.getDocumentTypeNodeName = function(doctypeNode) {\n    return doctypeNode['x-name'];\n};\n\nexports.getDocumentTypeNodePublicId = function(doctypeNode) {\n    return doctypeNode['x-publicId'];\n};\n\nexports.getDocumentTypeNodeSystemId = function(doctypeNode) {\n    return doctypeNode['x-systemId'];\n};\n\n//Node types\nexports.isTextNode = function(node) {\n    return node.type === 'text';\n};\n\nexports.isCommentNode = function(node) {\n    return node.type === 'comment';\n};\n\nexports.isDocumentTypeNode = function(node) {\n    return node.type === 'directive' && node.name === '!doctype';\n};\n\nexports.isElementNode = function(node) {\n    return !!node.attribs;\n};\n\n// Source code location\nexports.setNodeSourceCodeLocation = function(node, location) {\n    node.sourceCodeLocation = location;\n};\n\nexports.getNodeSourceCodeLocation = function(node) {\n    return node.sourceCodeLocation;\n};\n\nexports.updateNodeSourceCodeLocation = function(node, endLocation) {\n    node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}