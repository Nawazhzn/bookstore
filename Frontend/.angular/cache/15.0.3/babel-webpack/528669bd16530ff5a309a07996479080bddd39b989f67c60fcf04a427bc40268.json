{"ast":null,"code":"export class UploadImagesComponent {\n  constructor(uploadService) {\n    this.uploadService = uploadService;\n    this.selectedFileNames = [];\n    this.progressInfos = [];\n    this.message = [];\n    this.previews = [];\n  }\n  ngOnInit() {\n    throw new Error('Method not implemented.');\n  }\n  selectFiles(event) {\n    this.message = [];\n    this.progressInfos = [];\n    this.selectedFileNames = [];\n    this.selectedFiles = event.target.files;\n    this.previews = [];\n    if (this.selectedFiles && this.selectedFiles[0]) {\n      const numberOfFiles = this.selectedFiles.length;\n      for (let i = 0; i < numberOfFiles; i++) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          console.log(e.target.result);\n          this.previews.push(e.target.result);\n        };\n        reader.readAsDataURL(this.selectedFiles[i]);\n        this.selectedFileNames.push(this.selectedFiles[i].name);\n      }\n    }\n  }\n  uploadFiles() {\n    this.message = [];\n    if (this.selectedFiles) {\n      for (let i = 0; i < this.selectedFiles.length; i++) {\n        this.upload(i, this.selectedFiles[i]);\n      }\n    }\n  }\n}","map":{"version":3,"mappings":"AAKA,OAAM,MAAOA,qBAAqB;EAWhCC,YAAoBC,aAAgC;IAAhC,kBAAa,GAAbA,aAAa;IARjC,sBAAiB,GAAa,EAAE;IAEhC,kBAAa,GAAU,EAAE;IACzB,YAAO,GAAa,EAAE;IAEtB,aAAQ,GAAa,EAAE;EAGiC;EACxDC,QAAQ;IACN,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEAC,WAAW,CAACC,KAAU;IACpB,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAACC,aAAa,GAAGJ,KAAK,CAACK,MAAM,CAACC,KAAK;IAEvC,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,IAAI,CAACH,aAAa,IAAI,IAAI,CAACA,aAAa,CAAC,CAAC,CAAC,EAAE;MAC/C,MAAMI,aAAa,GAAG,IAAI,CAACJ,aAAa,CAACK,MAAM;MAC/C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,aAAa,EAAEE,CAAC,EAAE,EAAE;QACtC,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;QAE/BD,MAAM,CAACE,MAAM,GAAIC,CAAM,IAAI;UACzBC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACT,MAAM,CAACY,MAAM,CAAC;UAC5B,IAAI,CAACV,QAAQ,CAACW,IAAI,CAACJ,CAAC,CAACT,MAAM,CAACY,MAAM,CAAC;QACrC,CAAC;QAEDN,MAAM,CAACQ,aAAa,CAAC,IAAI,CAACf,aAAa,CAACM,CAAC,CAAC,CAAC;QAE3C,IAAI,CAACP,iBAAiB,CAACe,IAAI,CAAC,IAAI,CAACd,aAAa,CAACM,CAAC,CAAC,CAACU,IAAI,CAAC;;;EAG7D;EAEAC,WAAW;IACT,IAAI,CAACpB,OAAO,GAAG,EAAE;IAEjB,IAAI,IAAI,CAACG,aAAa,EAAE;MACtB,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACN,aAAa,CAACK,MAAM,EAAEC,CAAC,EAAE,EAAE;QAClD,IAAI,CAACY,MAAM,CAACZ,CAAC,EAAE,IAAI,CAACN,aAAa,CAACM,CAAC,CAAC,CAAC;;;EAG3C","names":["UploadImagesComponent","constructor","uploadService","ngOnInit","Error","selectFiles","event","message","progressInfos","selectedFileNames","selectedFiles","target","files","previews","numberOfFiles","length","i","reader","FileReader","onload","e","console","log","result","push","readAsDataURL","name","uploadFiles","upload"],"sourceRoot":"","sources":["C:\\Users\\Nawaz\\Downloads\\mean-stack-authentication-authorization-master\\mean-stack-authentication-authorization-master\\frontend\\src\\app\\components\\components\\upload-images\\upload-images.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FileUploadService } from 'src/app/_services/file-upload.service';\n\nexport class UploadImagesComponent implements OnInit {\n\n  selectedFiles?: FileList;\n  selectedFileNames: string[] = [];\n\n  progressInfos: any[] = [];\n  message: string[] = [];\n\n  previews: string[] = [];\n  imageInfos?: Observable<any>;\n\n  constructor(private uploadService: FileUploadService) { }\n  ngOnInit(): void {\n    throw new Error('Method not implemented.');\n  }\n\n  selectFiles(event: any): void {\n    this.message = [];\n    this.progressInfos = [];\n    this.selectedFileNames = [];\n    this.selectedFiles = event.target.files;\n\n    this.previews = [];\n    if (this.selectedFiles && this.selectedFiles[0]) {\n      const numberOfFiles = this.selectedFiles.length;\n      for (let i = 0; i < numberOfFiles; i++) {\n        const reader = new FileReader();\n\n        reader.onload = (e: any) => {\n          console.log(e.target.result);\n          this.previews.push(e.target.result);\n        };\n\n        reader.readAsDataURL(this.selectedFiles[i]);\n\n        this.selectedFileNames.push(this.selectedFiles[i].name);\n      }\n    }\n  }\n\n  uploadFiles(): void {\n    this.message = [];\n\n    if (this.selectedFiles) {\n      for (let i = 0; i < this.selectedFiles.length; i++) {\n        this.upload(i, this.selectedFiles[i]);\n      }\n    }\n  }\n\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}