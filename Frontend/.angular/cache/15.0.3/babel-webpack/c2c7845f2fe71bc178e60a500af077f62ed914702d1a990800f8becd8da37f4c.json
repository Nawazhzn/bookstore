{"ast":null,"code":"\"use strict\";\n\nconst path = require(\"path\");\nconst {\n  parse\n} = require(\"url\");\nconst querystring = require(\"querystring\");\nconst getPaths = require(\"./getPaths\");\n/** @typedef {import(\"../index.js\").IncomingMessage} IncomingMessage */\n\n/** @typedef {import(\"../index.js\").ServerResponse} ServerResponse */\n\nconst cacheStore = new WeakMap();\n/**\n * @param {Function} fn\n * @param {{ cache?: Map<any, any> }} [cache]\n * @returns {any}\n */\n\nconst mem = (fn, {\n  cache = new Map()\n} = {}) => {\n  /**\n   * @param {any} arguments_\n   * @return {any}\n   */\n  const memoized = (...arguments_) => {\n    const [key] = arguments_;\n    const cacheItem = cache.get(key);\n    if (cacheItem) {\n      return cacheItem.data;\n    }\n    const result = fn.apply(void 0, arguments_);\n    cache.set(key, {\n      data: result\n    });\n    return result;\n  };\n  cacheStore.set(memoized, cache);\n  return memoized;\n};\nconst memoizedParse = mem(parse);\n/**\n * @template {IncomingMessage} Request\n * @template {ServerResponse} Response\n * @param {import(\"../index.js\").Context<Request, Response>} context\n * @param {string} url\n * @returns {string | undefined}\n */\n\nfunction getFilenameFromUrl(context, url) {\n  const {\n    options\n  } = context;\n  const paths = getPaths(context);\n  let foundFilename;\n  let urlObject;\n  try {\n    // The `url` property of the `request` is contains only  `pathname`, `search` and `hash`\n    urlObject = memoizedParse(url, false, true);\n  } catch (_ignoreError) {\n    return;\n  }\n  for (const {\n    publicPath,\n    outputPath\n  } of paths) {\n    let filename;\n    let publicPathObject;\n    try {\n      publicPathObject = memoizedParse(publicPath !== \"auto\" && publicPath ? publicPath : \"/\", false, true);\n    } catch (_ignoreError) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (urlObject.pathname && urlObject.pathname.startsWith(publicPathObject.pathname)) {\n      filename = outputPath; // Strip the `pathname` property from the `publicPath` option from the start of requested url\n      // `/complex/foo.js` => `foo.js`\n\n      const pathname = urlObject.pathname.slice(publicPathObject.pathname.length);\n      if (pathname) {\n        filename = path.join(outputPath, querystring.unescape(pathname));\n      }\n      let fsStats;\n      try {\n        fsStats = /** @type {import(\"fs\").statSync} */\n        context.outputFileSystem.statSync(filename);\n      } catch (_ignoreError) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n      if (fsStats.isFile()) {\n        foundFilename = filename;\n        break;\n      } else if (fsStats.isDirectory() && (typeof options.index === \"undefined\" || options.index)) {\n        const indexValue = typeof options.index === \"undefined\" || typeof options.index === \"boolean\" ? \"index.html\" : options.index;\n        filename = path.join(filename, indexValue);\n        try {\n          fsStats = /** @type {import(\"fs\").statSync} */\n          context.outputFileSystem.statSync(filename);\n        } catch (__ignoreError) {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n        if (fsStats.isFile()) {\n          foundFilename = filename;\n          break;\n        }\n      }\n    }\n  } // eslint-disable-next-line consistent-return\n\n  return foundFilename;\n}\nmodule.exports = getFilenameFromUrl;","map":{"version":3,"names":["path","require","parse","querystring","getPaths","cacheStore","WeakMap","mem","fn","cache","Map","memoized","arguments_","key","cacheItem","get","data","result","apply","set","memoizedParse","getFilenameFromUrl","context","url","options","paths","foundFilename","urlObject","_ignoreError","publicPath","outputPath","filename","publicPathObject","pathname","startsWith","slice","length","join","unescape","fsStats","outputFileSystem","statSync","isFile","isDirectory","index","indexValue","__ignoreError","module","exports"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/webpack-dev-middleware/dist/utils/getFilenameFromUrl.js"],"sourcesContent":["\"use strict\";\n\nconst path = require(\"path\");\n\nconst {\n  parse\n} = require(\"url\");\n\nconst querystring = require(\"querystring\");\n\nconst getPaths = require(\"./getPaths\");\n/** @typedef {import(\"../index.js\").IncomingMessage} IncomingMessage */\n\n/** @typedef {import(\"../index.js\").ServerResponse} ServerResponse */\n\n\nconst cacheStore = new WeakMap();\n/**\n * @param {Function} fn\n * @param {{ cache?: Map<any, any> }} [cache]\n * @returns {any}\n */\n\nconst mem = (fn, {\n  cache = new Map()\n} = {}) => {\n  /**\n   * @param {any} arguments_\n   * @return {any}\n   */\n  const memoized = (...arguments_) => {\n    const [key] = arguments_;\n    const cacheItem = cache.get(key);\n\n    if (cacheItem) {\n      return cacheItem.data;\n    }\n\n    const result = fn.apply(void 0, arguments_);\n    cache.set(key, {\n      data: result\n    });\n    return result;\n  };\n\n  cacheStore.set(memoized, cache);\n  return memoized;\n};\n\nconst memoizedParse = mem(parse);\n/**\n * @template {IncomingMessage} Request\n * @template {ServerResponse} Response\n * @param {import(\"../index.js\").Context<Request, Response>} context\n * @param {string} url\n * @returns {string | undefined}\n */\n\nfunction getFilenameFromUrl(context, url) {\n  const {\n    options\n  } = context;\n  const paths = getPaths(context);\n  let foundFilename;\n  let urlObject;\n\n  try {\n    // The `url` property of the `request` is contains only  `pathname`, `search` and `hash`\n    urlObject = memoizedParse(url, false, true);\n  } catch (_ignoreError) {\n    return;\n  }\n\n  for (const {\n    publicPath,\n    outputPath\n  } of paths) {\n    let filename;\n    let publicPathObject;\n\n    try {\n      publicPathObject = memoizedParse(publicPath !== \"auto\" && publicPath ? publicPath : \"/\", false, true);\n    } catch (_ignoreError) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (urlObject.pathname && urlObject.pathname.startsWith(publicPathObject.pathname)) {\n      filename = outputPath; // Strip the `pathname` property from the `publicPath` option from the start of requested url\n      // `/complex/foo.js` => `foo.js`\n\n      const pathname = urlObject.pathname.slice(publicPathObject.pathname.length);\n\n      if (pathname) {\n        filename = path.join(outputPath, querystring.unescape(pathname));\n      }\n\n      let fsStats;\n\n      try {\n        fsStats =\n        /** @type {import(\"fs\").statSync} */\n        context.outputFileSystem.statSync(filename);\n      } catch (_ignoreError) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (fsStats.isFile()) {\n        foundFilename = filename;\n        break;\n      } else if (fsStats.isDirectory() && (typeof options.index === \"undefined\" || options.index)) {\n        const indexValue = typeof options.index === \"undefined\" || typeof options.index === \"boolean\" ? \"index.html\" : options.index;\n        filename = path.join(filename, indexValue);\n\n        try {\n          fsStats =\n          /** @type {import(\"fs\").statSync} */\n          context.outputFileSystem.statSync(filename);\n        } catch (__ignoreError) {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n\n        if (fsStats.isFile()) {\n          foundFilename = filename;\n          break;\n        }\n      }\n    }\n  } // eslint-disable-next-line consistent-return\n\n\n  return foundFilename;\n}\n\nmodule.exports = getFilenameFromUrl;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}