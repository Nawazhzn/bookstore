{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.execute = void 0;\nconst architect_1 = require(\"@angular-devkit/architect\");\nconst core_1 = require(\"@angular-devkit/core\");\nconst path_1 = require(\"path\");\nconst url = __importStar(require(\"url\"));\nconst utils_1 = require(\"../../utils\");\nconst error_1 = require(\"../../utils/error\");\nfunction runProtractor(root, options) {\n  const additionalProtractorConfig = {\n    baseUrl: options.baseUrl,\n    specs: options.specs && options.specs.length ? options.specs : undefined,\n    suite: options.suite,\n    jasmineNodeOpts: {\n      grep: options.grep,\n      invertGrep: options.invertGrep\n    }\n  };\n  // TODO: Protractor manages process.exit itself, so this target will allways quit the\n  // process. To work around this we run it in a subprocess.\n  // https://github.com/angular/protractor/issues/4160\n  return (0, utils_1.runModuleAsObservableFork)(root, 'protractor/built/launcher', 'init', [(0, path_1.resolve)(root, options.protractorConfig), additionalProtractorConfig]).toPromise();\n}\nfunction updateWebdriver() {\n  return _updateWebdriver.apply(this, arguments);\n}\n/**\n * @experimental Direct usage of this function is considered experimental.\n */\nfunction _updateWebdriver() {\n  _updateWebdriver = _asyncToGenerator(function* () {\n    // The webdriver-manager update command can only be accessed via a deep import.\n    const webdriverDeepImport = 'webdriver-manager/built/lib/cmds/update';\n    let path;\n    try {\n      const protractorPath = require.resolve('protractor');\n      path = require.resolve(webdriverDeepImport, {\n        paths: [protractorPath]\n      });\n    } catch (error) {\n      (0, error_1.assertIsError)(error);\n      if (error.code !== 'MODULE_NOT_FOUND') {\n        throw error;\n      }\n    }\n    if (!path) {\n      throw new Error(core_1.tags.stripIndents`\n      Cannot automatically find webdriver-manager to update.\n      Update webdriver-manager manually and run 'ng e2e --no-webdriver-update' instead.\n    `);\n    }\n    const webdriverUpdate = yield Promise.resolve().then(() => __importStar(require(path)));\n    // const webdriverUpdate = await import(path) as typeof import ('webdriver-manager/built/lib/cmds/update');\n    // run `webdriver-manager update --standalone false --gecko false --quiet`\n    // if you change this, update the command comment in prev line\n    return webdriverUpdate.program.run({\n      standalone: false,\n      gecko: false,\n      quiet: true\n    });\n  });\n  return _updateWebdriver.apply(this, arguments);\n}\nfunction execute(_x, _x2) {\n  return _execute.apply(this, arguments);\n}\nfunction _execute() {\n  _execute = _asyncToGenerator(function* (options, context) {\n    context.logger.warn('Protractor has been deprecated including its support in the Angular CLI. For additional information and alternatives, please see https://github.com/angular/protractor/issues/5502.');\n    // ensure that only one of these options is used\n    if (options.devServerTarget && options.baseUrl) {\n      throw new Error(core_1.tags.stripIndents`\n    The 'baseUrl' option cannot be used with 'devServerTarget'.\n    When present, 'devServerTarget' will be used to automatically setup 'baseUrl' for Protractor.\n    `);\n    }\n    if (options.webdriverUpdate) {\n      yield updateWebdriver();\n    }\n    let baseUrl = options.baseUrl;\n    let server;\n    try {\n      if (options.devServerTarget) {\n        const target = (0, architect_1.targetFromTargetString)(options.devServerTarget);\n        const serverOptions = yield context.getTargetOptions(target);\n        const overrides = {\n          watch: false,\n          liveReload: false\n        };\n        if (options.host !== undefined) {\n          overrides.host = options.host;\n        } else if (typeof serverOptions.host === 'string') {\n          options.host = serverOptions.host;\n        } else {\n          options.host = overrides.host = 'localhost';\n        }\n        if (options.port !== undefined) {\n          overrides.port = options.port;\n        } else if (typeof serverOptions.port === 'number') {\n          options.port = serverOptions.port;\n        }\n        server = yield context.scheduleTarget(target, overrides);\n        const result = yield server.result;\n        if (!result.success) {\n          return {\n            success: false\n          };\n        }\n        if (typeof serverOptions.publicHost === 'string') {\n          let publicHost = serverOptions.publicHost;\n          if (!/^\\w+:\\/\\//.test(publicHost)) {\n            publicHost = `${serverOptions.ssl ? 'https' : 'http'}://${publicHost}`;\n          }\n          const clientUrl = url.parse(publicHost);\n          baseUrl = url.format(clientUrl);\n        } else if (typeof result.baseUrl === 'string') {\n          baseUrl = result.baseUrl;\n        } else if (typeof result.port === 'number') {\n          baseUrl = url.format({\n            protocol: serverOptions.ssl ? 'https' : 'http',\n            hostname: options.host,\n            port: result.port.toString()\n          });\n        }\n      }\n      // Like the baseUrl in protractor config file when using the API we need to add\n      // a trailing slash when provide to the baseUrl.\n      if (baseUrl && !baseUrl.endsWith('/')) {\n        baseUrl += '/';\n      }\n      return yield runProtractor(context.workspaceRoot, {\n        ...options,\n        baseUrl\n      });\n    } catch {\n      return {\n        success: false\n      };\n    } finally {\n      yield server === null || server === void 0 ? void 0 : server.stop();\n    }\n  });\n  return _execute.apply(this, arguments);\n}\nexports.execute = execute;\nexports.default = (0, architect_1.createBuilder)(execute);","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","execute","architect_1","require","core_1","path_1","url","utils_1","error_1","runProtractor","root","options","additionalProtractorConfig","baseUrl","specs","length","suite","jasmineNodeOpts","grep","invertGrep","runModuleAsObservableFork","resolve","protractorConfig","toPromise","updateWebdriver","webdriverDeepImport","path","protractorPath","paths","error","assertIsError","code","Error","tags","stripIndents","webdriverUpdate","Promise","then","program","run","standalone","gecko","quiet","context","logger","warn","devServerTarget","server","target","targetFromTargetString","serverOptions","getTargetOptions","overrides","watch","liveReload","host","port","scheduleTarget","success","publicHost","test","ssl","clientUrl","parse","format","protocol","hostname","toString","endsWith","workspaceRoot","stop","default","createBuilder"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/builders/protractor/index.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.execute = void 0;\nconst architect_1 = require(\"@angular-devkit/architect\");\nconst core_1 = require(\"@angular-devkit/core\");\nconst path_1 = require(\"path\");\nconst url = __importStar(require(\"url\"));\nconst utils_1 = require(\"../../utils\");\nconst error_1 = require(\"../../utils/error\");\nfunction runProtractor(root, options) {\n    const additionalProtractorConfig = {\n        baseUrl: options.baseUrl,\n        specs: options.specs && options.specs.length ? options.specs : undefined,\n        suite: options.suite,\n        jasmineNodeOpts: {\n            grep: options.grep,\n            invertGrep: options.invertGrep,\n        },\n    };\n    // TODO: Protractor manages process.exit itself, so this target will allways quit the\n    // process. To work around this we run it in a subprocess.\n    // https://github.com/angular/protractor/issues/4160\n    return (0, utils_1.runModuleAsObservableFork)(root, 'protractor/built/launcher', 'init', [\n        (0, path_1.resolve)(root, options.protractorConfig),\n        additionalProtractorConfig,\n    ]).toPromise();\n}\nasync function updateWebdriver() {\n    // The webdriver-manager update command can only be accessed via a deep import.\n    const webdriverDeepImport = 'webdriver-manager/built/lib/cmds/update';\n    let path;\n    try {\n        const protractorPath = require.resolve('protractor');\n        path = require.resolve(webdriverDeepImport, { paths: [protractorPath] });\n    }\n    catch (error) {\n        (0, error_1.assertIsError)(error);\n        if (error.code !== 'MODULE_NOT_FOUND') {\n            throw error;\n        }\n    }\n    if (!path) {\n        throw new Error(core_1.tags.stripIndents `\n      Cannot automatically find webdriver-manager to update.\n      Update webdriver-manager manually and run 'ng e2e --no-webdriver-update' instead.\n    `);\n    }\n    const webdriverUpdate = await Promise.resolve().then(() => __importStar(require(path)));\n    // const webdriverUpdate = await import(path) as typeof import ('webdriver-manager/built/lib/cmds/update');\n    // run `webdriver-manager update --standalone false --gecko false --quiet`\n    // if you change this, update the command comment in prev line\n    return webdriverUpdate.program.run({\n        standalone: false,\n        gecko: false,\n        quiet: true,\n    });\n}\n/**\n * @experimental Direct usage of this function is considered experimental.\n */\nasync function execute(options, context) {\n    context.logger.warn('Protractor has been deprecated including its support in the Angular CLI. For additional information and alternatives, please see https://github.com/angular/protractor/issues/5502.');\n    // ensure that only one of these options is used\n    if (options.devServerTarget && options.baseUrl) {\n        throw new Error(core_1.tags.stripIndents `\n    The 'baseUrl' option cannot be used with 'devServerTarget'.\n    When present, 'devServerTarget' will be used to automatically setup 'baseUrl' for Protractor.\n    `);\n    }\n    if (options.webdriverUpdate) {\n        await updateWebdriver();\n    }\n    let baseUrl = options.baseUrl;\n    let server;\n    try {\n        if (options.devServerTarget) {\n            const target = (0, architect_1.targetFromTargetString)(options.devServerTarget);\n            const serverOptions = await context.getTargetOptions(target);\n            const overrides = {\n                watch: false,\n                liveReload: false,\n            };\n            if (options.host !== undefined) {\n                overrides.host = options.host;\n            }\n            else if (typeof serverOptions.host === 'string') {\n                options.host = serverOptions.host;\n            }\n            else {\n                options.host = overrides.host = 'localhost';\n            }\n            if (options.port !== undefined) {\n                overrides.port = options.port;\n            }\n            else if (typeof serverOptions.port === 'number') {\n                options.port = serverOptions.port;\n            }\n            server = await context.scheduleTarget(target, overrides);\n            const result = await server.result;\n            if (!result.success) {\n                return { success: false };\n            }\n            if (typeof serverOptions.publicHost === 'string') {\n                let publicHost = serverOptions.publicHost;\n                if (!/^\\w+:\\/\\//.test(publicHost)) {\n                    publicHost = `${serverOptions.ssl ? 'https' : 'http'}://${publicHost}`;\n                }\n                const clientUrl = url.parse(publicHost);\n                baseUrl = url.format(clientUrl);\n            }\n            else if (typeof result.baseUrl === 'string') {\n                baseUrl = result.baseUrl;\n            }\n            else if (typeof result.port === 'number') {\n                baseUrl = url.format({\n                    protocol: serverOptions.ssl ? 'https' : 'http',\n                    hostname: options.host,\n                    port: result.port.toString(),\n                });\n            }\n        }\n        // Like the baseUrl in protractor config file when using the API we need to add\n        // a trailing slash when provide to the baseUrl.\n        if (baseUrl && !baseUrl.endsWith('/')) {\n            baseUrl += '/';\n        }\n        return await runProtractor(context.workspaceRoot, { ...options, baseUrl });\n    }\n    catch {\n        return { success: false };\n    }\n    finally {\n        await (server === null || server === void 0 ? void 0 : server.stop());\n    }\n}\nexports.execute = execute;\nexports.default = (0, architect_1.createBuilder)(execute);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}