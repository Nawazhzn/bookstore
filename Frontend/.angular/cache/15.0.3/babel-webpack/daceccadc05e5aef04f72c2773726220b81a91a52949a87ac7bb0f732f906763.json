{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStylesConfig = void 0;\nconst mini_css_extract_plugin_1 = __importDefault(require(\"mini-css-extract-plugin\"));\nconst fs = __importStar(require(\"node:fs\"));\nconst path = __importStar(require(\"node:path\"));\nconst node_url_1 = require(\"node:url\");\nconst sass_service_1 = require(\"../../sass/sass-service\");\nconst sass_service_legacy_1 = require(\"../../sass/sass-service-legacy\");\nconst environment_options_1 = require(\"../../utils/environment-options\");\nconst plugins_1 = require(\"../plugins\");\nconst css_optimizer_plugin_1 = require(\"../plugins/css-optimizer-plugin\");\nconst styles_webpack_plugin_1 = require(\"../plugins/styles-webpack-plugin\");\nconst helpers_1 = require(\"../utils/helpers\");\n// eslint-disable-next-line max-lines-per-function\nfunction getStylesConfig(wco) {\n  var _a, _b, _c;\n  const {\n    root,\n    buildOptions,\n    logger\n  } = wco;\n  const extraPlugins = [];\n  extraPlugins.push(new plugins_1.AnyComponentStyleBudgetChecker(buildOptions.budgets));\n  const cssSourceMap = buildOptions.sourceMap.styles;\n  // Determine hashing format.\n  const hashFormat = (0, helpers_1.getOutputHashFormat)(buildOptions.outputHashing);\n  // use includePaths from appConfig\n  const includePaths = (_c = (_b = (_a = buildOptions.stylePreprocessorOptions) === null || _a === void 0 ? void 0 : _a.includePaths) === null || _b === void 0 ? void 0 : _b.map(p => path.resolve(root, p))) !== null && _c !== void 0 ? _c : [];\n  // Process global styles.\n  if (buildOptions.styles.length > 0) {\n    const {\n      entryPoints,\n      noInjectNames\n    } = (0, helpers_1.normalizeGlobalStyles)(buildOptions.styles);\n    extraPlugins.push(new styles_webpack_plugin_1.StylesWebpackPlugin({\n      root,\n      entryPoints,\n      preserveSymlinks: buildOptions.preserveSymlinks\n    }));\n    if (noInjectNames.length > 0) {\n      // Add plugin to remove hashes from lazy styles.\n      extraPlugins.push(new plugins_1.RemoveHashPlugin({\n        chunkNames: noInjectNames,\n        hashFormat\n      }));\n    }\n  }\n  const sassImplementation = environment_options_1.useLegacySass ? new sass_service_legacy_1.SassLegacyWorkerImplementation() : new sass_service_1.SassWorkerImplementation();\n  extraPlugins.push({\n    apply(compiler) {\n      compiler.hooks.shutdown.tap('sass-worker', () => {\n        sassImplementation.close();\n      });\n    }\n  });\n  const assetNameTemplate = (0, helpers_1.assetNameTemplateFactory)(hashFormat);\n  const extraPostcssPlugins = [];\n  // Attempt to setup Tailwind CSS\n  // Only load Tailwind CSS plugin if configuration file was found.\n  // This acts as a guard to ensure the project actually wants to use Tailwind CSS.\n  // The package may be unknowningly present due to a third-party transitive package dependency.\n  const tailwindConfigPath = getTailwindConfigPath(wco);\n  if (tailwindConfigPath) {\n    let tailwindPackagePath;\n    try {\n      tailwindPackagePath = require.resolve('tailwindcss', {\n        paths: [wco.root]\n      });\n    } catch {\n      const relativeTailwindConfigPath = path.relative(wco.root, tailwindConfigPath);\n      logger.warn(`Tailwind CSS configuration file found (${relativeTailwindConfigPath})` + ` but the 'tailwindcss' package is not installed.` + ` To enable Tailwind CSS, please install the 'tailwindcss' package.`);\n    }\n    if (tailwindPackagePath) {\n      extraPostcssPlugins.push(require(tailwindPackagePath)({\n        config: tailwindConfigPath\n      }));\n    }\n  }\n  const autoprefixer = require('autoprefixer');\n  const postcssOptionsCreator = (inlineSourcemaps, extracted) => {\n    const optionGenerator = loader => ({\n      map: inlineSourcemaps ? {\n        inline: true,\n        annotation: false\n      } : undefined,\n      plugins: [(0, plugins_1.PostcssCliResources)({\n        baseHref: buildOptions.baseHref,\n        deployUrl: buildOptions.deployUrl,\n        resourcesOutputPath: buildOptions.resourcesOutputPath,\n        loader,\n        filename: assetNameTemplate,\n        emitFile: buildOptions.platform !== 'server',\n        extracted\n      }), ...extraPostcssPlugins, autoprefixer({\n        ignoreUnknownVersions: true,\n        overrideBrowserslist: buildOptions.supportedBrowsers\n      })]\n    });\n    // postcss-loader fails when trying to determine configuration files for data URIs\n    optionGenerator.config = false;\n    return optionGenerator;\n  };\n  let componentsSourceMap = !!cssSourceMap;\n  if (cssSourceMap) {\n    if (buildOptions.optimization.styles.minify) {\n      // Never use component css sourcemap when style optimizations are on.\n      // It will just increase bundle size without offering good debug experience.\n      logger.warn('Components styles sourcemaps are not generated when styles optimization is enabled.');\n      componentsSourceMap = false;\n    } else if (buildOptions.sourceMap.hidden) {\n      // Inline all sourcemap types except hidden ones, which are the same as no sourcemaps\n      // for component css.\n      logger.warn('Components styles sourcemaps are not generated when sourcemaps are hidden.');\n      componentsSourceMap = false;\n    }\n  }\n  // extract global css from js files into own css file.\n  extraPlugins.push(new mini_css_extract_plugin_1.default({\n    filename: `[name]${hashFormat.extract}.css`\n  }));\n  if (!buildOptions.hmr) {\n    // don't remove `.js` files for `.css` when we are using HMR these contain HMR accept codes.\n    // suppress empty .js files in css only entry points.\n    extraPlugins.push(new plugins_1.SuppressExtractedTextChunksWebpackPlugin());\n  }\n  const postCss = require('postcss');\n  const postCssLoaderPath = require.resolve('postcss-loader');\n  const componentStyleLoaders = [{\n    loader: require.resolve('css-loader'),\n    options: {\n      url: false,\n      sourceMap: componentsSourceMap,\n      importLoaders: 1,\n      exportType: 'string',\n      esModule: false\n    }\n  }, {\n    loader: postCssLoaderPath,\n    options: {\n      implementation: postCss,\n      postcssOptions: postcssOptionsCreator(componentsSourceMap, false)\n    }\n  }];\n  const globalStyleLoaders = [{\n    loader: mini_css_extract_plugin_1.default.loader\n  }, {\n    loader: require.resolve('css-loader'),\n    options: {\n      url: false,\n      sourceMap: !!cssSourceMap,\n      importLoaders: 1\n    }\n  }, {\n    loader: postCssLoaderPath,\n    options: {\n      implementation: postCss,\n      postcssOptions: postcssOptionsCreator(false, true),\n      sourceMap: !!cssSourceMap\n    }\n  }];\n  const styleLanguages = [{\n    extensions: ['css'],\n    use: []\n  }, {\n    extensions: ['scss'],\n    use: [{\n      loader: require.resolve('resolve-url-loader'),\n      options: {\n        sourceMap: cssSourceMap\n      }\n    }, {\n      loader: require.resolve('sass-loader'),\n      options: getSassLoaderOptions(root, sassImplementation, includePaths, false, !!buildOptions.verbose, !!buildOptions.preserveSymlinks)\n    }]\n  }, {\n    extensions: ['sass'],\n    use: [{\n      loader: require.resolve('resolve-url-loader'),\n      options: {\n        sourceMap: cssSourceMap\n      }\n    }, {\n      loader: require.resolve('sass-loader'),\n      options: getSassLoaderOptions(root, sassImplementation, includePaths, true, !!buildOptions.verbose, !!buildOptions.preserveSymlinks)\n    }]\n  }, {\n    extensions: ['less'],\n    use: [{\n      loader: require.resolve('less-loader'),\n      options: {\n        implementation: require('less'),\n        sourceMap: cssSourceMap,\n        lessOptions: {\n          javascriptEnabled: true,\n          paths: includePaths\n        }\n      }\n    }]\n  }];\n  return {\n    module: {\n      rules: styleLanguages.map(({\n        extensions,\n        use\n      }) => ({\n        test: new RegExp(`\\\\.(?:${extensions.join('|')})$`, 'i'),\n        rules: [\n        // Setup processing rules for global and component styles\n        {\n          oneOf: [\n          // Global styles are only defined global styles\n          {\n            use: globalStyleLoaders,\n            resourceQuery: /\\?ngGlobalStyle/\n          },\n          // Component styles are all styles except defined global styles\n          {\n            use: componentStyleLoaders,\n            resourceQuery: /\\?ngResource/\n          }]\n        }, {\n          use\n        }]\n      }))\n    },\n    optimization: {\n      minimizer: buildOptions.optimization.styles.minify ? [new css_optimizer_plugin_1.CssOptimizerPlugin({\n        supportedBrowsers: buildOptions.supportedBrowsers\n      })] : undefined\n    },\n    plugins: extraPlugins\n  };\n}\nexports.getStylesConfig = getStylesConfig;\nfunction getTailwindConfigPath({\n  projectRoot,\n  root\n}) {\n  // A configuration file can exist in the project or workspace root\n  // The list of valid config files can be found:\n  // https://github.com/tailwindlabs/tailwindcss/blob/8845d112fb62d79815b50b3bae80c317450b8b92/src/util/resolveConfigPath.js#L46-L52\n  const tailwindConfigFiles = ['tailwind.config.js', 'tailwind.config.cjs'];\n  for (const basePath of [projectRoot, root]) {\n    for (const configFile of tailwindConfigFiles) {\n      // Irrespective of the name project level configuration should always take precedence.\n      const fullPath = path.join(basePath, configFile);\n      if (fs.existsSync(fullPath)) {\n        return fullPath;\n      }\n    }\n  }\n  return undefined;\n}\nfunction getSassLoaderOptions(root, implementation, includePaths, indentedSyntax, verbose, preserveSymlinks) {\n  return implementation instanceof sass_service_1.SassWorkerImplementation ? {\n    sourceMap: true,\n    api: 'modern',\n    implementation,\n    // Webpack importer is only implemented in the legacy API and we have our own custom Webpack importer.\n    // See: https://github.com/webpack-contrib/sass-loader/blob/997f3eb41d86dd00d5fa49c395a1aeb41573108c/src/utils.js#L642-L651\n    webpackImporter: false,\n    sassOptions: loaderContext => ({\n      importers: [getSassResolutionImporter(loaderContext, root, preserveSymlinks)],\n      loadPaths: includePaths,\n      // Use expanded as otherwise sass will remove comments that are needed for autoprefixer\n      // Ex: /* autoprefixer grid: autoplace */\n      // See: https://github.com/webpack-contrib/sass-loader/blob/45ad0be17264ceada5f0b4fb87e9357abe85c4ff/src/getSassOptions.js#L68-L70\n      style: 'expanded',\n      // Silences compiler warnings from 3rd party stylesheets\n      quietDeps: !verbose,\n      verbose,\n      syntax: indentedSyntax ? 'indented' : 'scss'\n    })\n  } : {\n    sourceMap: true,\n    api: 'legacy',\n    implementation,\n    sassOptions: {\n      importer: (url, from) => {\n        if (url.charAt(0) === '~') {\n          throw new Error(`'${from}' imports '${url}' with a tilde. Usage of '~' in imports is no longer supported.`);\n        }\n        return null;\n      },\n      // Prevent use of `fibers` package as it no longer works in newer Node.js versions\n      fiber: false,\n      indentedSyntax,\n      // bootstrap-sass requires a minimum precision of 8\n      precision: 8,\n      includePaths,\n      // Use expanded as otherwise sass will remove comments that are needed for autoprefixer\n      // Ex: /* autoprefixer grid: autoplace */\n      // See: https://github.com/webpack-contrib/sass-loader/blob/45ad0be17264ceada5f0b4fb87e9357abe85c4ff/src/getSassOptions.js#L68-L70\n      outputStyle: 'expanded',\n      // Silences compiler warnings from 3rd party stylesheets\n      quietDeps: !verbose,\n      verbose\n    }\n  };\n}\nfunction getSassResolutionImporter(loaderContext, root, preserveSymlinks) {\n  const commonResolverOptions = {\n    conditionNames: ['sass', 'style'],\n    mainFields: ['sass', 'style', 'main', '...'],\n    extensions: ['.scss', '.sass', '.css'],\n    restrictions: [/\\.((sa|sc|c)ss)$/i],\n    preferRelative: true,\n    symlinks: !preserveSymlinks\n  };\n  // Sass also supports import-only files. If you name a file <name>.import.scss, it will only be loaded for imports, not for @uses.\n  // See: https://sass-lang.com/documentation/at-rules/import#import-only-files\n  const resolveImport = loaderContext.getResolve({\n    ...commonResolverOptions,\n    dependencyType: 'sass-import',\n    mainFiles: ['_index.import', '_index', 'index.import', 'index', '...']\n  });\n  const resolveModule = loaderContext.getResolve({\n    ...commonResolverOptions,\n    dependencyType: 'sass-module',\n    mainFiles: ['_index', 'index', '...']\n  });\n  return {\n    findFileUrl: function () {\n      var _ref = _asyncToGenerator(function* (url, {\n        fromImport,\n        previousResolvedModules\n      }) {\n        if (url.charAt(0) === '.') {\n          // Let Sass handle relative imports.\n          return null;\n        }\n        const resolve = fromImport ? resolveImport : resolveModule;\n        // Try to resolve from root of workspace\n        let result = yield tryResolve(resolve, root, url);\n        // Try to resolve from previously resolved modules.\n        if (!result && previousResolvedModules) {\n          for (const path of previousResolvedModules) {\n            result = yield tryResolve(resolve, path, url);\n            if (result) {\n              break;\n            }\n          }\n        }\n        return result ? (0, node_url_1.pathToFileURL)(result) : null;\n      });\n      return function findFileUrl(_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  };\n}\nfunction tryResolve(_x3, _x4, _x5) {\n  return _tryResolve.apply(this, arguments);\n}\nfunction _tryResolve() {\n  _tryResolve = _asyncToGenerator(function* (resolve, root, url) {\n    try {\n      return yield resolve(root, url);\n    } catch {\n      // Try to resolve a partial file\n      // @use '@material/button/button' as mdc-button;\n      // `@material/button/button` -> `@material/button/_button`\n      const lastSlashIndex = url.lastIndexOf('/');\n      const underscoreIndex = lastSlashIndex + 1;\n      if (underscoreIndex > 0 && url.charAt(underscoreIndex) !== '_') {\n        const partialFileUrl = `${url.slice(0, underscoreIndex)}_${url.slice(underscoreIndex)}`;\n        return resolve(root, partialFileUrl).catch(() => undefined);\n      }\n    }\n    return undefined;\n  });\n  return _tryResolve.apply(this, arguments);\n}","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","getStylesConfig","mini_css_extract_plugin_1","require","fs","path","node_url_1","sass_service_1","sass_service_legacy_1","environment_options_1","plugins_1","css_optimizer_plugin_1","styles_webpack_plugin_1","helpers_1","wco","_a","_b","_c","root","buildOptions","logger","extraPlugins","push","AnyComponentStyleBudgetChecker","budgets","cssSourceMap","sourceMap","styles","hashFormat","getOutputHashFormat","outputHashing","includePaths","stylePreprocessorOptions","map","p","resolve","length","entryPoints","noInjectNames","normalizeGlobalStyles","StylesWebpackPlugin","preserveSymlinks","RemoveHashPlugin","chunkNames","sassImplementation","useLegacySass","SassLegacyWorkerImplementation","SassWorkerImplementation","apply","compiler","hooks","shutdown","tap","close","assetNameTemplate","assetNameTemplateFactory","extraPostcssPlugins","tailwindConfigPath","getTailwindConfigPath","tailwindPackagePath","paths","relativeTailwindConfigPath","relative","warn","config","autoprefixer","postcssOptionsCreator","inlineSourcemaps","extracted","optionGenerator","loader","inline","annotation","plugins","PostcssCliResources","baseHref","deployUrl","resourcesOutputPath","filename","emitFile","platform","ignoreUnknownVersions","overrideBrowserslist","supportedBrowsers","componentsSourceMap","optimization","minify","hidden","default","extract","hmr","SuppressExtractedTextChunksWebpackPlugin","postCss","postCssLoaderPath","componentStyleLoaders","options","url","importLoaders","exportType","esModule","implementation","postcssOptions","globalStyleLoaders","styleLanguages","extensions","use","getSassLoaderOptions","verbose","lessOptions","javascriptEnabled","module","rules","test","RegExp","join","oneOf","resourceQuery","minimizer","CssOptimizerPlugin","projectRoot","tailwindConfigFiles","basePath","configFile","fullPath","existsSync","indentedSyntax","api","webpackImporter","sassOptions","loaderContext","importers","getSassResolutionImporter","loadPaths","style","quietDeps","syntax","importer","from","charAt","Error","fiber","precision","outputStyle","commonResolverOptions","conditionNames","mainFields","restrictions","preferRelative","symlinks","resolveImport","getResolve","dependencyType","mainFiles","resolveModule","findFileUrl","fromImport","previousResolvedModules","tryResolve","pathToFileURL","lastSlashIndex","lastIndexOf","underscoreIndex","partialFileUrl","slice","catch"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/webpack/configs/styles.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getStylesConfig = void 0;\nconst mini_css_extract_plugin_1 = __importDefault(require(\"mini-css-extract-plugin\"));\nconst fs = __importStar(require(\"node:fs\"));\nconst path = __importStar(require(\"node:path\"));\nconst node_url_1 = require(\"node:url\");\nconst sass_service_1 = require(\"../../sass/sass-service\");\nconst sass_service_legacy_1 = require(\"../../sass/sass-service-legacy\");\nconst environment_options_1 = require(\"../../utils/environment-options\");\nconst plugins_1 = require(\"../plugins\");\nconst css_optimizer_plugin_1 = require(\"../plugins/css-optimizer-plugin\");\nconst styles_webpack_plugin_1 = require(\"../plugins/styles-webpack-plugin\");\nconst helpers_1 = require(\"../utils/helpers\");\n// eslint-disable-next-line max-lines-per-function\nfunction getStylesConfig(wco) {\n    var _a, _b, _c;\n    const { root, buildOptions, logger } = wco;\n    const extraPlugins = [];\n    extraPlugins.push(new plugins_1.AnyComponentStyleBudgetChecker(buildOptions.budgets));\n    const cssSourceMap = buildOptions.sourceMap.styles;\n    // Determine hashing format.\n    const hashFormat = (0, helpers_1.getOutputHashFormat)(buildOptions.outputHashing);\n    // use includePaths from appConfig\n    const includePaths = (_c = (_b = (_a = buildOptions.stylePreprocessorOptions) === null || _a === void 0 ? void 0 : _a.includePaths) === null || _b === void 0 ? void 0 : _b.map((p) => path.resolve(root, p))) !== null && _c !== void 0 ? _c : [];\n    // Process global styles.\n    if (buildOptions.styles.length > 0) {\n        const { entryPoints, noInjectNames } = (0, helpers_1.normalizeGlobalStyles)(buildOptions.styles);\n        extraPlugins.push(new styles_webpack_plugin_1.StylesWebpackPlugin({\n            root,\n            entryPoints,\n            preserveSymlinks: buildOptions.preserveSymlinks,\n        }));\n        if (noInjectNames.length > 0) {\n            // Add plugin to remove hashes from lazy styles.\n            extraPlugins.push(new plugins_1.RemoveHashPlugin({ chunkNames: noInjectNames, hashFormat }));\n        }\n    }\n    const sassImplementation = environment_options_1.useLegacySass\n        ? new sass_service_legacy_1.SassLegacyWorkerImplementation()\n        : new sass_service_1.SassWorkerImplementation();\n    extraPlugins.push({\n        apply(compiler) {\n            compiler.hooks.shutdown.tap('sass-worker', () => {\n                sassImplementation.close();\n            });\n        },\n    });\n    const assetNameTemplate = (0, helpers_1.assetNameTemplateFactory)(hashFormat);\n    const extraPostcssPlugins = [];\n    // Attempt to setup Tailwind CSS\n    // Only load Tailwind CSS plugin if configuration file was found.\n    // This acts as a guard to ensure the project actually wants to use Tailwind CSS.\n    // The package may be unknowningly present due to a third-party transitive package dependency.\n    const tailwindConfigPath = getTailwindConfigPath(wco);\n    if (tailwindConfigPath) {\n        let tailwindPackagePath;\n        try {\n            tailwindPackagePath = require.resolve('tailwindcss', { paths: [wco.root] });\n        }\n        catch {\n            const relativeTailwindConfigPath = path.relative(wco.root, tailwindConfigPath);\n            logger.warn(`Tailwind CSS configuration file found (${relativeTailwindConfigPath})` +\n                ` but the 'tailwindcss' package is not installed.` +\n                ` To enable Tailwind CSS, please install the 'tailwindcss' package.`);\n        }\n        if (tailwindPackagePath) {\n            extraPostcssPlugins.push(require(tailwindPackagePath)({ config: tailwindConfigPath }));\n        }\n    }\n    const autoprefixer = require('autoprefixer');\n    const postcssOptionsCreator = (inlineSourcemaps, extracted) => {\n        const optionGenerator = (loader) => ({\n            map: inlineSourcemaps\n                ? {\n                    inline: true,\n                    annotation: false,\n                }\n                : undefined,\n            plugins: [\n                (0, plugins_1.PostcssCliResources)({\n                    baseHref: buildOptions.baseHref,\n                    deployUrl: buildOptions.deployUrl,\n                    resourcesOutputPath: buildOptions.resourcesOutputPath,\n                    loader,\n                    filename: assetNameTemplate,\n                    emitFile: buildOptions.platform !== 'server',\n                    extracted,\n                }),\n                ...extraPostcssPlugins,\n                autoprefixer({\n                    ignoreUnknownVersions: true,\n                    overrideBrowserslist: buildOptions.supportedBrowsers,\n                }),\n            ],\n        });\n        // postcss-loader fails when trying to determine configuration files for data URIs\n        optionGenerator.config = false;\n        return optionGenerator;\n    };\n    let componentsSourceMap = !!cssSourceMap;\n    if (cssSourceMap) {\n        if (buildOptions.optimization.styles.minify) {\n            // Never use component css sourcemap when style optimizations are on.\n            // It will just increase bundle size without offering good debug experience.\n            logger.warn('Components styles sourcemaps are not generated when styles optimization is enabled.');\n            componentsSourceMap = false;\n        }\n        else if (buildOptions.sourceMap.hidden) {\n            // Inline all sourcemap types except hidden ones, which are the same as no sourcemaps\n            // for component css.\n            logger.warn('Components styles sourcemaps are not generated when sourcemaps are hidden.');\n            componentsSourceMap = false;\n        }\n    }\n    // extract global css from js files into own css file.\n    extraPlugins.push(new mini_css_extract_plugin_1.default({ filename: `[name]${hashFormat.extract}.css` }));\n    if (!buildOptions.hmr) {\n        // don't remove `.js` files for `.css` when we are using HMR these contain HMR accept codes.\n        // suppress empty .js files in css only entry points.\n        extraPlugins.push(new plugins_1.SuppressExtractedTextChunksWebpackPlugin());\n    }\n    const postCss = require('postcss');\n    const postCssLoaderPath = require.resolve('postcss-loader');\n    const componentStyleLoaders = [\n        {\n            loader: require.resolve('css-loader'),\n            options: {\n                url: false,\n                sourceMap: componentsSourceMap,\n                importLoaders: 1,\n                exportType: 'string',\n                esModule: false,\n            },\n        },\n        {\n            loader: postCssLoaderPath,\n            options: {\n                implementation: postCss,\n                postcssOptions: postcssOptionsCreator(componentsSourceMap, false),\n            },\n        },\n    ];\n    const globalStyleLoaders = [\n        {\n            loader: mini_css_extract_plugin_1.default.loader,\n        },\n        {\n            loader: require.resolve('css-loader'),\n            options: {\n                url: false,\n                sourceMap: !!cssSourceMap,\n                importLoaders: 1,\n            },\n        },\n        {\n            loader: postCssLoaderPath,\n            options: {\n                implementation: postCss,\n                postcssOptions: postcssOptionsCreator(false, true),\n                sourceMap: !!cssSourceMap,\n            },\n        },\n    ];\n    const styleLanguages = [\n        {\n            extensions: ['css'],\n            use: [],\n        },\n        {\n            extensions: ['scss'],\n            use: [\n                {\n                    loader: require.resolve('resolve-url-loader'),\n                    options: {\n                        sourceMap: cssSourceMap,\n                    },\n                },\n                {\n                    loader: require.resolve('sass-loader'),\n                    options: getSassLoaderOptions(root, sassImplementation, includePaths, false, !!buildOptions.verbose, !!buildOptions.preserveSymlinks),\n                },\n            ],\n        },\n        {\n            extensions: ['sass'],\n            use: [\n                {\n                    loader: require.resolve('resolve-url-loader'),\n                    options: {\n                        sourceMap: cssSourceMap,\n                    },\n                },\n                {\n                    loader: require.resolve('sass-loader'),\n                    options: getSassLoaderOptions(root, sassImplementation, includePaths, true, !!buildOptions.verbose, !!buildOptions.preserveSymlinks),\n                },\n            ],\n        },\n        {\n            extensions: ['less'],\n            use: [\n                {\n                    loader: require.resolve('less-loader'),\n                    options: {\n                        implementation: require('less'),\n                        sourceMap: cssSourceMap,\n                        lessOptions: {\n                            javascriptEnabled: true,\n                            paths: includePaths,\n                        },\n                    },\n                },\n            ],\n        },\n    ];\n    return {\n        module: {\n            rules: styleLanguages.map(({ extensions, use }) => ({\n                test: new RegExp(`\\\\.(?:${extensions.join('|')})$`, 'i'),\n                rules: [\n                    // Setup processing rules for global and component styles\n                    {\n                        oneOf: [\n                            // Global styles are only defined global styles\n                            {\n                                use: globalStyleLoaders,\n                                resourceQuery: /\\?ngGlobalStyle/,\n                            },\n                            // Component styles are all styles except defined global styles\n                            {\n                                use: componentStyleLoaders,\n                                resourceQuery: /\\?ngResource/,\n                            },\n                        ],\n                    },\n                    { use },\n                ],\n            })),\n        },\n        optimization: {\n            minimizer: buildOptions.optimization.styles.minify\n                ? [\n                    new css_optimizer_plugin_1.CssOptimizerPlugin({\n                        supportedBrowsers: buildOptions.supportedBrowsers,\n                    }),\n                ]\n                : undefined,\n        },\n        plugins: extraPlugins,\n    };\n}\nexports.getStylesConfig = getStylesConfig;\nfunction getTailwindConfigPath({ projectRoot, root }) {\n    // A configuration file can exist in the project or workspace root\n    // The list of valid config files can be found:\n    // https://github.com/tailwindlabs/tailwindcss/blob/8845d112fb62d79815b50b3bae80c317450b8b92/src/util/resolveConfigPath.js#L46-L52\n    const tailwindConfigFiles = ['tailwind.config.js', 'tailwind.config.cjs'];\n    for (const basePath of [projectRoot, root]) {\n        for (const configFile of tailwindConfigFiles) {\n            // Irrespective of the name project level configuration should always take precedence.\n            const fullPath = path.join(basePath, configFile);\n            if (fs.existsSync(fullPath)) {\n                return fullPath;\n            }\n        }\n    }\n    return undefined;\n}\nfunction getSassLoaderOptions(root, implementation, includePaths, indentedSyntax, verbose, preserveSymlinks) {\n    return implementation instanceof sass_service_1.SassWorkerImplementation\n        ? {\n            sourceMap: true,\n            api: 'modern',\n            implementation,\n            // Webpack importer is only implemented in the legacy API and we have our own custom Webpack importer.\n            // See: https://github.com/webpack-contrib/sass-loader/blob/997f3eb41d86dd00d5fa49c395a1aeb41573108c/src/utils.js#L642-L651\n            webpackImporter: false,\n            sassOptions: (loaderContext) => ({\n                importers: [getSassResolutionImporter(loaderContext, root, preserveSymlinks)],\n                loadPaths: includePaths,\n                // Use expanded as otherwise sass will remove comments that are needed for autoprefixer\n                // Ex: /* autoprefixer grid: autoplace */\n                // See: https://github.com/webpack-contrib/sass-loader/blob/45ad0be17264ceada5f0b4fb87e9357abe85c4ff/src/getSassOptions.js#L68-L70\n                style: 'expanded',\n                // Silences compiler warnings from 3rd party stylesheets\n                quietDeps: !verbose,\n                verbose,\n                syntax: indentedSyntax ? 'indented' : 'scss',\n            }),\n        }\n        : {\n            sourceMap: true,\n            api: 'legacy',\n            implementation,\n            sassOptions: {\n                importer: (url, from) => {\n                    if (url.charAt(0) === '~') {\n                        throw new Error(`'${from}' imports '${url}' with a tilde. Usage of '~' in imports is no longer supported.`);\n                    }\n                    return null;\n                },\n                // Prevent use of `fibers` package as it no longer works in newer Node.js versions\n                fiber: false,\n                indentedSyntax,\n                // bootstrap-sass requires a minimum precision of 8\n                precision: 8,\n                includePaths,\n                // Use expanded as otherwise sass will remove comments that are needed for autoprefixer\n                // Ex: /* autoprefixer grid: autoplace */\n                // See: https://github.com/webpack-contrib/sass-loader/blob/45ad0be17264ceada5f0b4fb87e9357abe85c4ff/src/getSassOptions.js#L68-L70\n                outputStyle: 'expanded',\n                // Silences compiler warnings from 3rd party stylesheets\n                quietDeps: !verbose,\n                verbose,\n            },\n        };\n}\nfunction getSassResolutionImporter(loaderContext, root, preserveSymlinks) {\n    const commonResolverOptions = {\n        conditionNames: ['sass', 'style'],\n        mainFields: ['sass', 'style', 'main', '...'],\n        extensions: ['.scss', '.sass', '.css'],\n        restrictions: [/\\.((sa|sc|c)ss)$/i],\n        preferRelative: true,\n        symlinks: !preserveSymlinks,\n    };\n    // Sass also supports import-only files. If you name a file <name>.import.scss, it will only be loaded for imports, not for @uses.\n    // See: https://sass-lang.com/documentation/at-rules/import#import-only-files\n    const resolveImport = loaderContext.getResolve({\n        ...commonResolverOptions,\n        dependencyType: 'sass-import',\n        mainFiles: ['_index.import', '_index', 'index.import', 'index', '...'],\n    });\n    const resolveModule = loaderContext.getResolve({\n        ...commonResolverOptions,\n        dependencyType: 'sass-module',\n        mainFiles: ['_index', 'index', '...'],\n    });\n    return {\n        findFileUrl: async (url, { fromImport, previousResolvedModules }) => {\n            if (url.charAt(0) === '.') {\n                // Let Sass handle relative imports.\n                return null;\n            }\n            const resolve = fromImport ? resolveImport : resolveModule;\n            // Try to resolve from root of workspace\n            let result = await tryResolve(resolve, root, url);\n            // Try to resolve from previously resolved modules.\n            if (!result && previousResolvedModules) {\n                for (const path of previousResolvedModules) {\n                    result = await tryResolve(resolve, path, url);\n                    if (result) {\n                        break;\n                    }\n                }\n            }\n            return result ? (0, node_url_1.pathToFileURL)(result) : null;\n        },\n    };\n}\nasync function tryResolve(resolve, root, url) {\n    try {\n        return await resolve(root, url);\n    }\n    catch {\n        // Try to resolve a partial file\n        // @use '@material/button/button' as mdc-button;\n        // `@material/button/button` -> `@material/button/_button`\n        const lastSlashIndex = url.lastIndexOf('/');\n        const underscoreIndex = lastSlashIndex + 1;\n        if (underscoreIndex > 0 && url.charAt(underscoreIndex) !== '_') {\n            const partialFileUrl = `${url.slice(0, underscoreIndex)}_${url.slice(underscoreIndex)}`;\n            return resolve(root, partialFileUrl).catch(() => undefined);\n        }\n    }\n    return undefined;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}