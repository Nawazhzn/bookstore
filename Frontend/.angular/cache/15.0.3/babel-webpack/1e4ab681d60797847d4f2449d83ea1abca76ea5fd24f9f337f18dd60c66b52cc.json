{"ast":null,"code":"const debug = require('debug')('log4js:file');\nconst path = require('path');\nconst streams = require('streamroller');\nconst os = require('os');\nconst eol = os.EOL;\nlet mainSighupListenerStarted = false;\nconst sighupListeners = new Set();\nfunction mainSighupHandler() {\n  sighupListeners.forEach(app => {\n    app.sighupHandler();\n  });\n}\n\n/**\n * File Appender writing the logs to a text file. Supports rolling of logs by size.\n *\n * @param file the file log messages will be written to\n * @param layout a function that takes a logEvent and returns a string\n *   (defaults to basicLayout).\n * @param logSize - the maximum size (in bytes) for a log file,\n *   if not provided then logs won't be rotated.\n * @param numBackups - the number of log files to keep after logSize\n *   has been reached (default 5)\n * @param options - options to be passed to the underlying stream\n * @param timezoneOffset - optional timezone offset in minutes (default system local)\n */\nfunction fileAppender(file, layout, logSize, numBackups, options, timezoneOffset) {\n  if (typeof file !== 'string' || file.length === 0) {\n    throw new Error(`Invalid filename: ${file}`);\n  } else if (file.endsWith(path.sep)) {\n    throw new Error(`Filename is a directory: ${file}`);\n  } else {\n    // handle ~ expansion: https://github.com/nodejs/node/issues/684\n    // exclude ~ and ~filename as these can be valid files\n    file = file.replace(new RegExp(`^~(?=${path.sep}.+)`), os.homedir());\n  }\n  file = path.normalize(file);\n  numBackups = !numBackups && numBackups !== 0 ? 5 : numBackups;\n  debug('Creating file appender (', file, ', ', logSize, ', ', numBackups, ', ', options, ', ', timezoneOffset, ')');\n  function openTheStream(filePath, fileSize, numFiles, opt) {\n    const stream = new streams.RollingFileStream(filePath, fileSize, numFiles, opt);\n    stream.on('error', err => {\n      // eslint-disable-next-line no-console\n      console.error('log4js.fileAppender - Writing to file %s, error happened ', filePath, err);\n    });\n    stream.on('drain', () => {\n      process.emit('log4js:pause', false);\n    });\n    return stream;\n  }\n  let writer = openTheStream(file, logSize, numBackups, options);\n  const app = function (loggingEvent) {\n    if (!writer.writable) {\n      return;\n    }\n    if (options.removeColor === true) {\n      // eslint-disable-next-line no-control-regex\n      const regex = /\\x1b[[0-9;]*m/g;\n      loggingEvent.data = loggingEvent.data.map(d => {\n        if (typeof d === 'string') return d.replace(regex, '');\n        return d;\n      });\n    }\n    if (!writer.write(layout(loggingEvent, timezoneOffset) + eol, 'utf8')) {\n      process.emit('log4js:pause', true);\n    }\n  };\n  app.reopen = function () {\n    writer.end(() => {\n      writer = openTheStream(file, logSize, numBackups, options);\n    });\n  };\n  app.sighupHandler = function () {\n    debug('SIGHUP handler called.');\n    app.reopen();\n  };\n  app.shutdown = function (complete) {\n    sighupListeners.delete(app);\n    if (sighupListeners.size === 0 && mainSighupListenerStarted) {\n      process.removeListener('SIGHUP', mainSighupHandler);\n      mainSighupListenerStarted = false;\n    }\n    writer.end('', 'utf-8', complete);\n  };\n\n  // On SIGHUP, close and reopen all files. This allows this appender to work with\n  // logrotate. Note that if you are using logrotate, you should not set\n  // `logSize`.\n  sighupListeners.add(app);\n  if (!mainSighupListenerStarted) {\n    process.on('SIGHUP', mainSighupHandler);\n    mainSighupListenerStarted = true;\n  }\n  return app;\n}\nfunction configure(config, layouts) {\n  let layout = layouts.basicLayout;\n  if (config.layout) {\n    layout = layouts.layout(config.layout.type, config.layout);\n  }\n\n  // security default (instead of relying on streamroller default)\n  config.mode = config.mode || 0o600;\n  return fileAppender(config.filename, layout, config.maxLogSize, config.backups, config, config.timezoneOffset);\n}\nmodule.exports.configure = configure;","map":{"version":3,"names":["debug","require","path","streams","os","eol","EOL","mainSighupListenerStarted","sighupListeners","Set","mainSighupHandler","forEach","app","sighupHandler","fileAppender","file","layout","logSize","numBackups","options","timezoneOffset","length","Error","endsWith","sep","replace","RegExp","homedir","normalize","openTheStream","filePath","fileSize","numFiles","opt","stream","RollingFileStream","on","err","console","error","process","emit","writer","loggingEvent","writable","removeColor","regex","data","map","d","write","reopen","end","shutdown","complete","delete","size","removeListener","add","configure","config","layouts","basicLayout","type","mode","filename","maxLogSize","backups","module","exports"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/log4js/lib/appenders/file.js"],"sourcesContent":["const debug = require('debug')('log4js:file');\nconst path = require('path');\nconst streams = require('streamroller');\nconst os = require('os');\n\nconst eol = os.EOL;\n\nlet mainSighupListenerStarted = false;\nconst sighupListeners = new Set();\nfunction mainSighupHandler() {\n  sighupListeners.forEach((app) => {\n    app.sighupHandler();\n  });\n}\n\n/**\n * File Appender writing the logs to a text file. Supports rolling of logs by size.\n *\n * @param file the file log messages will be written to\n * @param layout a function that takes a logEvent and returns a string\n *   (defaults to basicLayout).\n * @param logSize - the maximum size (in bytes) for a log file,\n *   if not provided then logs won't be rotated.\n * @param numBackups - the number of log files to keep after logSize\n *   has been reached (default 5)\n * @param options - options to be passed to the underlying stream\n * @param timezoneOffset - optional timezone offset in minutes (default system local)\n */\nfunction fileAppender(\n  file,\n  layout,\n  logSize,\n  numBackups,\n  options,\n  timezoneOffset\n) {\n  if (typeof file !== 'string' || file.length === 0) {\n    throw new Error(`Invalid filename: ${file}`);\n  } else if (file.endsWith(path.sep)) {\n    throw new Error(`Filename is a directory: ${file}`);\n  } else {\n    // handle ~ expansion: https://github.com/nodejs/node/issues/684\n    // exclude ~ and ~filename as these can be valid files\n    file = file.replace(new RegExp(`^~(?=${path.sep}.+)`), os.homedir());\n  }\n  file = path.normalize(file);\n  numBackups = !numBackups && numBackups !== 0 ? 5 : numBackups;\n\n  debug(\n    'Creating file appender (',\n    file,\n    ', ',\n    logSize,\n    ', ',\n    numBackups,\n    ', ',\n    options,\n    ', ',\n    timezoneOffset,\n    ')'\n  );\n\n  function openTheStream(filePath, fileSize, numFiles, opt) {\n    const stream = new streams.RollingFileStream(\n      filePath,\n      fileSize,\n      numFiles,\n      opt\n    );\n    stream.on('error', (err) => {\n      // eslint-disable-next-line no-console\n      console.error(\n        'log4js.fileAppender - Writing to file %s, error happened ',\n        filePath,\n        err\n      );\n    });\n    stream.on('drain', () => {\n      process.emit('log4js:pause', false);\n    });\n    return stream;\n  }\n\n  let writer = openTheStream(file, logSize, numBackups, options);\n\n  const app = function (loggingEvent) {\n    if (!writer.writable) {\n      return;\n    }\n    if (options.removeColor === true) {\n      // eslint-disable-next-line no-control-regex\n      const regex = /\\x1b[[0-9;]*m/g;\n      loggingEvent.data = loggingEvent.data.map((d) => {\n        if (typeof d === 'string') return d.replace(regex, '');\n        return d;\n      });\n    }\n    if (!writer.write(layout(loggingEvent, timezoneOffset) + eol, 'utf8')) {\n      process.emit('log4js:pause', true);\n    }\n  };\n\n  app.reopen = function () {\n    writer.end(() => {\n      writer = openTheStream(file, logSize, numBackups, options);\n    });\n  };\n\n  app.sighupHandler = function () {\n    debug('SIGHUP handler called.');\n    app.reopen();\n  };\n\n  app.shutdown = function (complete) {\n    sighupListeners.delete(app);\n    if (sighupListeners.size === 0 && mainSighupListenerStarted) {\n      process.removeListener('SIGHUP', mainSighupHandler);\n      mainSighupListenerStarted = false;\n    }\n    writer.end('', 'utf-8', complete);\n  };\n\n  // On SIGHUP, close and reopen all files. This allows this appender to work with\n  // logrotate. Note that if you are using logrotate, you should not set\n  // `logSize`.\n  sighupListeners.add(app);\n  if (!mainSighupListenerStarted) {\n    process.on('SIGHUP', mainSighupHandler);\n    mainSighupListenerStarted = true;\n  }\n\n  return app;\n}\n\nfunction configure(config, layouts) {\n  let layout = layouts.basicLayout;\n  if (config.layout) {\n    layout = layouts.layout(config.layout.type, config.layout);\n  }\n\n  // security default (instead of relying on streamroller default)\n  config.mode = config.mode || 0o600;\n\n  return fileAppender(\n    config.filename,\n    layout,\n    config.maxLogSize,\n    config.backups,\n    config,\n    config.timezoneOffset\n  );\n}\n\nmodule.exports.configure = configure;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}