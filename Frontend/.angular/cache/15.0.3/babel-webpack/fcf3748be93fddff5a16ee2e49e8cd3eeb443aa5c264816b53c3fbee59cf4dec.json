{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.setArray = {}));\n})(this, function (exports) {\n  'use strict';\n\n  /**\n   * Gets the index associated with `key` in the backing array, if it is already present.\n   */\n  exports.get = void 0;\n  /**\n   * Puts `key` into the backing array, if it is not already present. Returns\n   * the index of the `key` in the backing array.\n   */\n  exports.put = void 0;\n  /**\n   * Pops the last added item out of the SetArray.\n   */\n  exports.pop = void 0;\n  /**\n   * SetArray acts like a `Set` (allowing only one occurrence of a string `key`), but provides the\n   * index of the `key` in the backing array.\n   *\n   * This is designed to allow synchronizing a second array with the contents of the backing array,\n   * like how in a sourcemap `sourcesContent[i]` is the source content associated with `source[i]`,\n   * and there are never duplicates.\n   */\n  class SetArray {\n    constructor() {\n      this._indexes = {\n        __proto__: null\n      };\n      this.array = [];\n    }\n  }\n  (() => {\n    exports.get = (strarr, key) => strarr._indexes[key];\n    exports.put = (strarr, key) => {\n      // The key may or may not be present. If it is present, it's a number.\n      const index = exports.get(strarr, key);\n      if (index !== undefined) return index;\n      const {\n        array,\n        _indexes: indexes\n      } = strarr;\n      return indexes[key] = array.push(key) - 1;\n    };\n    exports.pop = strarr => {\n      const {\n        array,\n        _indexes: indexes\n      } = strarr;\n      if (array.length === 0) return;\n      const last = array.pop();\n      indexes[last] = undefined;\n    };\n  })();\n  exports.SetArray = SetArray;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","setArray","get","put","pop","SetArray","constructor","_indexes","__proto__","array","strarr","key","index","undefined","indexes","push","length","last","Object","defineProperty","value"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@jridgewell/set-array/dist/set-array.umd.js"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.setArray = {}));\n})(this, (function (exports) { 'use strict';\n\n    /**\n     * Gets the index associated with `key` in the backing array, if it is already present.\n     */\n    exports.get = void 0;\n    /**\n     * Puts `key` into the backing array, if it is not already present. Returns\n     * the index of the `key` in the backing array.\n     */\n    exports.put = void 0;\n    /**\n     * Pops the last added item out of the SetArray.\n     */\n    exports.pop = void 0;\n    /**\n     * SetArray acts like a `Set` (allowing only one occurrence of a string `key`), but provides the\n     * index of the `key` in the backing array.\n     *\n     * This is designed to allow synchronizing a second array with the contents of the backing array,\n     * like how in a sourcemap `sourcesContent[i]` is the source content associated with `source[i]`,\n     * and there are never duplicates.\n     */\n    class SetArray {\n        constructor() {\n            this._indexes = { __proto__: null };\n            this.array = [];\n        }\n    }\n    (() => {\n        exports.get = (strarr, key) => strarr._indexes[key];\n        exports.put = (strarr, key) => {\n            // The key may or may not be present. If it is present, it's a number.\n            const index = exports.get(strarr, key);\n            if (index !== undefined)\n                return index;\n            const { array, _indexes: indexes } = strarr;\n            return (indexes[key] = array.push(key) - 1);\n        };\n        exports.pop = (strarr) => {\n            const { array, _indexes: indexes } = strarr;\n            if (array.length === 0)\n                return;\n            const last = array.pop();\n            indexes[last] = undefined;\n        };\n    })();\n\n    exports.SetArray = SetArray;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"],"mappings":"AAAA,CAAC,UAAUA,MAAM,EAAEC,OAAO,EAAE;EACxB,OAAOC,OAAO,KAAK,QAAQ,IAAI,OAAOC,MAAM,KAAK,WAAW,GAAGF,OAAO,CAACC,OAAO,CAAC,GAC/E,OAAOE,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,GAAG,GAAGD,MAAM,CAAC,CAAC,SAAS,CAAC,EAAEH,OAAO,CAAC,IACxED,MAAM,GAAG,OAAOM,UAAU,KAAK,WAAW,GAAGA,UAAU,GAAGN,MAAM,IAAIO,IAAI,EAAEN,OAAO,CAACD,MAAM,CAACQ,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7G,CAAC,EAAE,IAAI,EAAG,UAAUN,OAAO,EAAE;EAAE,YAAY;;EAEvC;AACJ;AACA;EACIA,OAAO,CAACO,GAAG,GAAG,KAAK,CAAC;EACpB;AACJ;AACA;AACA;EACIP,OAAO,CAACQ,GAAG,GAAG,KAAK,CAAC;EACpB;AACJ;AACA;EACIR,OAAO,CAACS,GAAG,GAAG,KAAK,CAAC;EACpB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMC,QAAQ,CAAC;IACXC,WAAW,GAAG;MACV,IAAI,CAACC,QAAQ,GAAG;QAAEC,SAAS,EAAE;MAAK,CAAC;MACnC,IAAI,CAACC,KAAK,GAAG,EAAE;IACnB;EACJ;EACA,CAAC,MAAM;IACHd,OAAO,CAACO,GAAG,GAAG,CAACQ,MAAM,EAAEC,GAAG,KAAKD,MAAM,CAACH,QAAQ,CAACI,GAAG,CAAC;IACnDhB,OAAO,CAACQ,GAAG,GAAG,CAACO,MAAM,EAAEC,GAAG,KAAK;MAC3B;MACA,MAAMC,KAAK,GAAGjB,OAAO,CAACO,GAAG,CAACQ,MAAM,EAAEC,GAAG,CAAC;MACtC,IAAIC,KAAK,KAAKC,SAAS,EACnB,OAAOD,KAAK;MAChB,MAAM;QAAEH,KAAK;QAAEF,QAAQ,EAAEO;MAAQ,CAAC,GAAGJ,MAAM;MAC3C,OAAQI,OAAO,CAACH,GAAG,CAAC,GAAGF,KAAK,CAACM,IAAI,CAACJ,GAAG,CAAC,GAAG,CAAC;IAC9C,CAAC;IACDhB,OAAO,CAACS,GAAG,GAAIM,MAAM,IAAK;MACtB,MAAM;QAAED,KAAK;QAAEF,QAAQ,EAAEO;MAAQ,CAAC,GAAGJ,MAAM;MAC3C,IAAID,KAAK,CAACO,MAAM,KAAK,CAAC,EAClB;MACJ,MAAMC,IAAI,GAAGR,KAAK,CAACL,GAAG,EAAE;MACxBU,OAAO,CAACG,IAAI,CAAC,GAAGJ,SAAS;IAC7B,CAAC;EACL,CAAC,GAAG;EAEJlB,OAAO,CAACU,QAAQ,GAAGA,QAAQ;EAE3Ba,MAAM,CAACC,cAAc,CAACxB,OAAO,EAAE,YAAY,EAAE;IAAEyB,KAAK,EAAE;EAAK,CAAC,CAAC;AAEjE,CAAC,CAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}