{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransferSizePlugin = void 0;\nconst util_1 = require(\"util\");\nconst zlib_1 = require(\"zlib\");\nconst webpack_diagnostics_1 = require(\"../../utils/webpack-diagnostics\");\nconst brotliCompressAsync = (0, util_1.promisify)(zlib_1.brotliCompress);\nconst PLUGIN_NAME = 'angular-transfer-size-estimator';\nclass TransferSizePlugin {\n  constructor() {}\n  apply(compiler) {\n    compiler.hooks.thisCompilation.tap(PLUGIN_NAME, compilation => {\n      compilation.hooks.processAssets.tapPromise({\n        name: PLUGIN_NAME,\n        stage: compiler.webpack.Compilation.PROCESS_ASSETS_STAGE_ANALYSE\n      }, /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (compilationAssets) {\n          const actions = [];\n          for (const assetName of Object.keys(compilationAssets)) {\n            if (!assetName.endsWith('.js') && !assetName.endsWith('.css')) {\n              continue;\n            }\n            const scriptAsset = compilation.getAsset(assetName);\n            if (!scriptAsset || scriptAsset.source.size() <= 0) {\n              continue;\n            }\n            actions.push(brotliCompressAsync(scriptAsset.source.source()).then(result => {\n              compilation.updateAsset(assetName, s => s, assetInfo => ({\n                ...assetInfo,\n                estimatedTransferSize: result.length\n              }));\n            }).catch(error => {\n              (0, webpack_diagnostics_1.addWarning)(compilation, `Unable to calculate estimated transfer size for '${assetName}'. Reason: ${error.message}`);\n            }));\n          }\n          yield Promise.all(actions);\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    });\n  }\n}\nexports.TransferSizePlugin = TransferSizePlugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","TransferSizePlugin","util_1","require","zlib_1","webpack_diagnostics_1","brotliCompressAsync","promisify","brotliCompress","PLUGIN_NAME","constructor","apply","compiler","hooks","thisCompilation","tap","compilation","processAssets","tapPromise","name","stage","webpack","Compilation","PROCESS_ASSETS_STAGE_ANALYSE","compilationAssets","actions","assetName","keys","endsWith","scriptAsset","getAsset","source","size","push","then","result","updateAsset","s","assetInfo","estimatedTransferSize","length","catch","error","addWarning","message","Promise","all"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/webpack/plugins/transfer-size-plugin.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransferSizePlugin = void 0;\nconst util_1 = require(\"util\");\nconst zlib_1 = require(\"zlib\");\nconst webpack_diagnostics_1 = require(\"../../utils/webpack-diagnostics\");\nconst brotliCompressAsync = (0, util_1.promisify)(zlib_1.brotliCompress);\nconst PLUGIN_NAME = 'angular-transfer-size-estimator';\nclass TransferSizePlugin {\n    constructor() { }\n    apply(compiler) {\n        compiler.hooks.thisCompilation.tap(PLUGIN_NAME, (compilation) => {\n            compilation.hooks.processAssets.tapPromise({\n                name: PLUGIN_NAME,\n                stage: compiler.webpack.Compilation.PROCESS_ASSETS_STAGE_ANALYSE,\n            }, async (compilationAssets) => {\n                const actions = [];\n                for (const assetName of Object.keys(compilationAssets)) {\n                    if (!assetName.endsWith('.js') && !assetName.endsWith('.css')) {\n                        continue;\n                    }\n                    const scriptAsset = compilation.getAsset(assetName);\n                    if (!scriptAsset || scriptAsset.source.size() <= 0) {\n                        continue;\n                    }\n                    actions.push(brotliCompressAsync(scriptAsset.source.source())\n                        .then((result) => {\n                        compilation.updateAsset(assetName, (s) => s, (assetInfo) => ({\n                            ...assetInfo,\n                            estimatedTransferSize: result.length,\n                        }));\n                    })\n                        .catch((error) => {\n                        (0, webpack_diagnostics_1.addWarning)(compilation, `Unable to calculate estimated transfer size for '${assetName}'. Reason: ${error.message}`);\n                    }));\n                }\n                await Promise.all(actions);\n            });\n        });\n    }\n}\nexports.TransferSizePlugin = TransferSizePlugin;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAG,KAAK,CAAC;AACnC,MAAMC,MAAM,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC9B,MAAMC,MAAM,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC9B,MAAME,qBAAqB,GAAGF,OAAO,CAAC,iCAAiC,CAAC;AACxE,MAAMG,mBAAmB,GAAG,CAAC,CAAC,EAAEJ,MAAM,CAACK,SAAS,EAAEH,MAAM,CAACI,cAAc,CAAC;AACxE,MAAMC,WAAW,GAAG,iCAAiC;AACrD,MAAMR,kBAAkB,CAAC;EACrBS,WAAW,GAAG,CAAE;EAChBC,KAAK,CAACC,QAAQ,EAAE;IACZA,QAAQ,CAACC,KAAK,CAACC,eAAe,CAACC,GAAG,CAACN,WAAW,EAAGO,WAAW,IAAK;MAC7DA,WAAW,CAACH,KAAK,CAACI,aAAa,CAACC,UAAU,CAAC;QACvCC,IAAI,EAAEV,WAAW;QACjBW,KAAK,EAAER,QAAQ,CAACS,OAAO,CAACC,WAAW,CAACC;MACxC,CAAC;QAAA,6BAAE,WAAOC,iBAAiB,EAAK;UAC5B,MAAMC,OAAO,GAAG,EAAE;UAClB,KAAK,MAAMC,SAAS,IAAI7B,MAAM,CAAC8B,IAAI,CAACH,iBAAiB,CAAC,EAAE;YACpD,IAAI,CAACE,SAAS,CAACE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAACF,SAAS,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE;cAC3D;YACJ;YACA,MAAMC,WAAW,GAAGb,WAAW,CAACc,QAAQ,CAACJ,SAAS,CAAC;YACnD,IAAI,CAACG,WAAW,IAAIA,WAAW,CAACE,MAAM,CAACC,IAAI,EAAE,IAAI,CAAC,EAAE;cAChD;YACJ;YACAP,OAAO,CAACQ,IAAI,CAAC3B,mBAAmB,CAACuB,WAAW,CAACE,MAAM,CAACA,MAAM,EAAE,CAAC,CACxDG,IAAI,CAAEC,MAAM,IAAK;cAClBnB,WAAW,CAACoB,WAAW,CAACV,SAAS,EAAGW,CAAC,IAAKA,CAAC,EAAGC,SAAS,KAAM;gBACzD,GAAGA,SAAS;gBACZC,qBAAqB,EAAEJ,MAAM,CAACK;cAClC,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CACGC,KAAK,CAAEC,KAAK,IAAK;cAClB,CAAC,CAAC,EAAErC,qBAAqB,CAACsC,UAAU,EAAE3B,WAAW,EAAG,oDAAmDU,SAAU,cAAagB,KAAK,CAACE,OAAQ,EAAC,CAAC;YAClJ,CAAC,CAAC,CAAC;UACP;UACA,MAAMC,OAAO,CAACC,GAAG,CAACrB,OAAO,CAAC;QAC9B,CAAC;QAAA;UAAA;QAAA;MAAA,IAAC;IACN,CAAC,CAAC;EACN;AACJ;AACA1B,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}