{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst codegen_1 = require(\"ajv/dist/compile/codegen\");\nconst _util_1 = require(\"./_util\");\nconst regexpMetaSchema = {\n  type: \"object\",\n  properties: {\n    pattern: {\n      type: \"string\"\n    },\n    flags: {\n      type: \"string\",\n      nullable: true\n    }\n  },\n  required: [\"pattern\"],\n  additionalProperties: false\n};\nconst metaRegexp = /^\\/(.*)\\/([gimuy]*)$/;\nfunction getDef() {\n  return {\n    keyword: \"regexp\",\n    type: \"string\",\n    schemaType: [\"string\", \"object\"],\n    code(cxt) {\n      const {\n        data,\n        schema\n      } = cxt;\n      const regx = getRegExp(schema);\n      cxt.pass((0, codegen_1._)`${regx}.test(${data})`);\n      function getRegExp(sch) {\n        if (typeof sch == \"object\") return (0, _util_1.usePattern)(cxt, sch.pattern, sch.flags);\n        const rx = metaRegexp.exec(sch);\n        if (rx) return (0, _util_1.usePattern)(cxt, rx[1], rx[2]);\n        throw new Error(\"cannot parse string into RegExp\");\n      }\n    },\n    metaSchema: {\n      anyOf: [{\n        type: \"string\"\n      }, regexpMetaSchema]\n    }\n  };\n}\nexports.default = getDef;\nmodule.exports = getDef;","map":{"version":3,"names":["Object","defineProperty","exports","value","codegen_1","require","_util_1","regexpMetaSchema","type","properties","pattern","flags","nullable","required","additionalProperties","metaRegexp","getDef","keyword","schemaType","code","cxt","data","schema","regx","getRegExp","pass","_","sch","usePattern","rx","exec","Error","metaSchema","anyOf","default","module"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/ajv-keywords/dist/definitions/regexp.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"ajv/dist/compile/codegen\");\nconst _util_1 = require(\"./_util\");\nconst regexpMetaSchema = {\n    type: \"object\",\n    properties: {\n        pattern: { type: \"string\" },\n        flags: { type: \"string\", nullable: true },\n    },\n    required: [\"pattern\"],\n    additionalProperties: false,\n};\nconst metaRegexp = /^\\/(.*)\\/([gimuy]*)$/;\nfunction getDef() {\n    return {\n        keyword: \"regexp\",\n        type: \"string\",\n        schemaType: [\"string\", \"object\"],\n        code(cxt) {\n            const { data, schema } = cxt;\n            const regx = getRegExp(schema);\n            cxt.pass((0, codegen_1._) `${regx}.test(${data})`);\n            function getRegExp(sch) {\n                if (typeof sch == \"object\")\n                    return (0, _util_1.usePattern)(cxt, sch.pattern, sch.flags);\n                const rx = metaRegexp.exec(sch);\n                if (rx)\n                    return (0, _util_1.usePattern)(cxt, rx[1], rx[2]);\n                throw new Error(\"cannot parse string into RegExp\");\n            }\n        },\n        metaSchema: {\n            anyOf: [{ type: \"string\" }, regexpMetaSchema],\n        },\n    };\n}\nexports.default = getDef;\nmodule.exports = getDef;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,SAAS,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AACrD,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,MAAME,gBAAgB,GAAG;EACrBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,OAAO,EAAE;MAAEF,IAAI,EAAE;IAAS,CAAC;IAC3BG,KAAK,EAAE;MAAEH,IAAI,EAAE,QAAQ;MAAEI,QAAQ,EAAE;IAAK;EAC5C,CAAC;EACDC,QAAQ,EAAE,CAAC,SAAS,CAAC;EACrBC,oBAAoB,EAAE;AAC1B,CAAC;AACD,MAAMC,UAAU,GAAG,sBAAsB;AACzC,SAASC,MAAM,GAAG;EACd,OAAO;IACHC,OAAO,EAAE,QAAQ;IACjBT,IAAI,EAAE,QAAQ;IACdU,UAAU,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;IAChCC,IAAI,CAACC,GAAG,EAAE;MACN,MAAM;QAAEC,IAAI;QAAEC;MAAO,CAAC,GAAGF,GAAG;MAC5B,MAAMG,IAAI,GAAGC,SAAS,CAACF,MAAM,CAAC;MAC9BF,GAAG,CAACK,IAAI,CAAC,CAAC,CAAC,EAAErB,SAAS,CAACsB,CAAC,CAAG,GAAEH,IAAK,SAAQF,IAAK,GAAE,CAAC;MAClD,SAASG,SAAS,CAACG,GAAG,EAAE;QACpB,IAAI,OAAOA,GAAG,IAAI,QAAQ,EACtB,OAAO,CAAC,CAAC,EAAErB,OAAO,CAACsB,UAAU,EAAER,GAAG,EAAEO,GAAG,CAACjB,OAAO,EAAEiB,GAAG,CAAChB,KAAK,CAAC;QAC/D,MAAMkB,EAAE,GAAGd,UAAU,CAACe,IAAI,CAACH,GAAG,CAAC;QAC/B,IAAIE,EAAE,EACF,OAAO,CAAC,CAAC,EAAEvB,OAAO,CAACsB,UAAU,EAAER,GAAG,EAAES,EAAE,CAAC,CAAC,CAAC,EAAEA,EAAE,CAAC,CAAC,CAAC,CAAC;QACrD,MAAM,IAAIE,KAAK,CAAC,iCAAiC,CAAC;MACtD;IACJ,CAAC;IACDC,UAAU,EAAE;MACRC,KAAK,EAAE,CAAC;QAAEzB,IAAI,EAAE;MAAS,CAAC,EAAED,gBAAgB;IAChD;EACJ,CAAC;AACL;AACAL,OAAO,CAACgC,OAAO,GAAGlB,MAAM;AACxBmB,MAAM,CAACjC,OAAO,GAAGc,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}