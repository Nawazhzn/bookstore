{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLessImplementation = getLessImplementation;\nexports.getLessOptions = getLessOptions;\nexports.isUnsupportedUrl = isUnsupportedUrl;\nexports.normalizeSourceMap = normalizeSourceMap;\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _full = require(\"klona/full\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/* eslint-disable class-methods-use-this */\nconst trailingSlash = /[/\\\\]$/; // This somewhat changed in Less 3.x. Now the file name comes without the\n// automatically added extension whereas the extension is passed in as `options.ext`.\n// So, if the file name matches this regexp, we simply ignore the proposed extension.\n\nconst IS_SPECIAL_MODULE_IMPORT = /^~[^/]+$/; // `[drive_letter]:\\` + `\\\\[server]\\[sharename]\\`\n\nconst IS_NATIVE_WIN32_PATH = /^[a-z]:[/\\\\]|^\\\\\\\\/i; // Examples:\n// - ~package\n// - ~package/\n// - ~@org\n// - ~@org/\n// - ~@org/package\n// - ~@org/package/\n\nconst IS_MODULE_IMPORT = /^~([^/]+|[^/]+\\/|@[^/]+[/][^/]+|@[^/]+\\/?|@[^/]+[/][^/]+\\/)$/;\nconst MODULE_REQUEST_REGEX = /^[^?]*~/;\n/**\n * Creates a Less plugin that uses webpack's resolving engine that is provided by the loaderContext.\n *\n * @param {LoaderContext} loaderContext\n * @param {object} implementation\n * @returns {LessPlugin}\n */\n\nfunction createWebpackLessPlugin(loaderContext, implementation) {\n  const resolve = loaderContext.getResolve({\n    dependencyType: \"less\",\n    conditionNames: [\"less\", \"style\", \"...\"],\n    mainFields: [\"less\", \"style\", \"main\", \"...\"],\n    mainFiles: [\"index\", \"...\"],\n    extensions: [\".less\", \".css\"],\n    preferRelative: true\n  });\n  class WebpackFileManager extends implementation.FileManager {\n    supports(filename) {\n      if (filename[0] === \"/\" || IS_NATIVE_WIN32_PATH.test(filename)) {\n        return true;\n      }\n      if (this.isPathAbsolute(filename)) {\n        return false;\n      }\n      return true;\n    } // Sync resolving is used at least by the `data-uri` function.\n    // This file manager doesn't know how to do it, so let's delegate it\n    // to the default file manager of Less.\n    // We could probably use loaderContext.resolveSync, but it's deprecated,\n    // see https://webpack.js.org/api/loaders/#this-resolvesync\n\n    supportsSync() {\n      return false;\n    }\n    resolveFilename(filename, currentDirectory) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        // Less is giving us trailing slashes, but the context should have no trailing slash\n        const context = currentDirectory.replace(trailingSlash, \"\");\n        let request = filename; // A `~` makes the url an module\n\n        if (MODULE_REQUEST_REGEX.test(filename)) {\n          request = request.replace(MODULE_REQUEST_REGEX, \"\");\n        }\n        if (IS_MODULE_IMPORT.test(filename)) {\n          request = request[request.length - 1] === \"/\" ? request : `${request}/`;\n        }\n        return _this.resolveRequests(context, [...new Set([request, filename])]);\n      })();\n    }\n    resolveRequests(context, possibleRequests) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        if (possibleRequests.length === 0) {\n          return Promise.reject();\n        }\n        let result;\n        try {\n          result = yield resolve(context, possibleRequests[0]);\n        } catch (error) {\n          const [, ...tailPossibleRequests] = possibleRequests;\n          if (tailPossibleRequests.length === 0) {\n            throw error;\n          }\n          result = yield _this2.resolveRequests(context, tailPossibleRequests);\n        }\n        return result;\n      })();\n    }\n    loadFile(filename, ...args) {\n      var _superprop_getLoadFile = () => super.loadFile,\n        _this3 = this;\n      return _asyncToGenerator(function* () {\n        let result;\n        try {\n          if (IS_SPECIAL_MODULE_IMPORT.test(filename)) {\n            const error = new Error();\n            error.type = \"Next\";\n            throw error;\n          }\n          result = yield _superprop_getLoadFile().call(_this3, filename, ...args);\n        } catch (error) {\n          if (error.type !== \"File\" && error.type !== \"Next\") {\n            return Promise.reject(error);\n          }\n          try {\n            result = yield _this3.resolveFilename(filename, ...args);\n          } catch (webpackResolveError) {\n            error.message = `Less resolver error:\\n${error.message}\\n\\n` + `Webpack resolver error details:\\n${webpackResolveError.details}\\n\\n` + `Webpack resolver error missing:\\n${webpackResolveError.missing}\\n\\n`;\n            return Promise.reject(error);\n          }\n          loaderContext.addDependency(result);\n          return _superprop_getLoadFile().call(_this3, result, ...args);\n        }\n        loaderContext.addDependency(_path.default.normalize(result.filename));\n        return result;\n      })();\n    }\n  }\n  return {\n    install(lessInstance, pluginManager) {\n      pluginManager.addFileManager(new WebpackFileManager());\n    },\n    minVersion: [3, 0, 0]\n  };\n}\n/**\n * Get the less options from the loader context and normalizes its values\n *\n * @param {object} loaderContext\n * @param {object} loaderOptions\n * @param {object} implementation\n * @returns {Object}\n */\n\nfunction getLessOptions(loaderContext, loaderOptions, implementation) {\n  const options = (0, _full.klona)(typeof loaderOptions.lessOptions === \"function\" ? loaderOptions.lessOptions(loaderContext) || {} : loaderOptions.lessOptions || {});\n  const lessOptions = {\n    plugins: [],\n    relativeUrls: true,\n    // We need to set the filename because otherwise our WebpackFileManager will receive an undefined path for the entry\n    filename: loaderContext.resourcePath,\n    ...options\n  };\n  const shouldUseWebpackImporter = typeof loaderOptions.webpackImporter === \"boolean\" ? loaderOptions.webpackImporter : true;\n  if (shouldUseWebpackImporter) {\n    lessOptions.plugins.unshift(createWebpackLessPlugin(loaderContext, implementation));\n  }\n  lessOptions.plugins.unshift({\n    install(lessProcessor, pluginManager) {\n      // eslint-disable-next-line no-param-reassign\n      pluginManager.webpackLoaderContext = loaderContext;\n      lessOptions.pluginManager = pluginManager;\n    }\n  });\n  return lessOptions;\n}\nfunction isUnsupportedUrl(url) {\n  // Is Windows path\n  if (IS_NATIVE_WIN32_PATH.test(url)) {\n    return false;\n  } // Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n  // Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n\n  return /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(url);\n}\nfunction normalizeSourceMap(map) {\n  const newMap = map; // map.file is an optional property that provides the output filename.\n  // Since we don't know the final filename in the webpack build chain yet, it makes no sense to have it.\n  // eslint-disable-next-line no-param-reassign\n\n  delete newMap.file; // eslint-disable-next-line no-param-reassign\n\n  newMap.sourceRoot = \"\"; // `less` returns POSIX paths, that's why we need to transform them back to native paths.\n  // eslint-disable-next-line no-param-reassign\n\n  newMap.sources = newMap.sources.map(source => _path.default.normalize(source));\n  return newMap;\n}\nfunction getLessImplementation(loaderContext, implementation) {\n  let resolvedImplementation = implementation;\n  if (!implementation || typeof implementation === \"string\") {\n    const lessImplPkg = implementation || \"less\";\n    try {\n      // eslint-disable-next-line import/no-dynamic-require, global-require\n      resolvedImplementation = require(lessImplPkg);\n    } catch (error) {\n      loaderContext.emitError(error); // eslint-disable-next-line consistent-return\n\n      return;\n    }\n  } // eslint-disable-next-line consistent-return\n\n  return resolvedImplementation;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getLessImplementation","getLessOptions","isUnsupportedUrl","normalizeSourceMap","_path","_interopRequireDefault","require","_full","obj","__esModule","default","trailingSlash","IS_SPECIAL_MODULE_IMPORT","IS_NATIVE_WIN32_PATH","IS_MODULE_IMPORT","MODULE_REQUEST_REGEX","createWebpackLessPlugin","loaderContext","implementation","resolve","getResolve","dependencyType","conditionNames","mainFields","mainFiles","extensions","preferRelative","WebpackFileManager","FileManager","supports","filename","test","isPathAbsolute","supportsSync","resolveFilename","currentDirectory","context","replace","request","length","resolveRequests","Set","possibleRequests","Promise","reject","result","error","tailPossibleRequests","loadFile","args","Error","type","webpackResolveError","message","details","missing","addDependency","normalize","install","lessInstance","pluginManager","addFileManager","minVersion","loaderOptions","options","klona","lessOptions","plugins","relativeUrls","resourcePath","shouldUseWebpackImporter","webpackImporter","unshift","lessProcessor","webpackLoaderContext","url","map","newMap","file","sourceRoot","sources","source","resolvedImplementation","lessImplPkg","emitError"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/less-loader/dist/utils.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLessImplementation = getLessImplementation;\nexports.getLessOptions = getLessOptions;\nexports.isUnsupportedUrl = isUnsupportedUrl;\nexports.normalizeSourceMap = normalizeSourceMap;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _full = require(\"klona/full\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable class-methods-use-this */\nconst trailingSlash = /[/\\\\]$/; // This somewhat changed in Less 3.x. Now the file name comes without the\n// automatically added extension whereas the extension is passed in as `options.ext`.\n// So, if the file name matches this regexp, we simply ignore the proposed extension.\n\nconst IS_SPECIAL_MODULE_IMPORT = /^~[^/]+$/; // `[drive_letter]:\\` + `\\\\[server]\\[sharename]\\`\n\nconst IS_NATIVE_WIN32_PATH = /^[a-z]:[/\\\\]|^\\\\\\\\/i; // Examples:\n// - ~package\n// - ~package/\n// - ~@org\n// - ~@org/\n// - ~@org/package\n// - ~@org/package/\n\nconst IS_MODULE_IMPORT = /^~([^/]+|[^/]+\\/|@[^/]+[/][^/]+|@[^/]+\\/?|@[^/]+[/][^/]+\\/)$/;\nconst MODULE_REQUEST_REGEX = /^[^?]*~/;\n/**\n * Creates a Less plugin that uses webpack's resolving engine that is provided by the loaderContext.\n *\n * @param {LoaderContext} loaderContext\n * @param {object} implementation\n * @returns {LessPlugin}\n */\n\nfunction createWebpackLessPlugin(loaderContext, implementation) {\n  const resolve = loaderContext.getResolve({\n    dependencyType: \"less\",\n    conditionNames: [\"less\", \"style\", \"...\"],\n    mainFields: [\"less\", \"style\", \"main\", \"...\"],\n    mainFiles: [\"index\", \"...\"],\n    extensions: [\".less\", \".css\"],\n    preferRelative: true\n  });\n\n  class WebpackFileManager extends implementation.FileManager {\n    supports(filename) {\n      if (filename[0] === \"/\" || IS_NATIVE_WIN32_PATH.test(filename)) {\n        return true;\n      }\n\n      if (this.isPathAbsolute(filename)) {\n        return false;\n      }\n\n      return true;\n    } // Sync resolving is used at least by the `data-uri` function.\n    // This file manager doesn't know how to do it, so let's delegate it\n    // to the default file manager of Less.\n    // We could probably use loaderContext.resolveSync, but it's deprecated,\n    // see https://webpack.js.org/api/loaders/#this-resolvesync\n\n\n    supportsSync() {\n      return false;\n    }\n\n    async resolveFilename(filename, currentDirectory) {\n      // Less is giving us trailing slashes, but the context should have no trailing slash\n      const context = currentDirectory.replace(trailingSlash, \"\");\n      let request = filename; // A `~` makes the url an module\n\n      if (MODULE_REQUEST_REGEX.test(filename)) {\n        request = request.replace(MODULE_REQUEST_REGEX, \"\");\n      }\n\n      if (IS_MODULE_IMPORT.test(filename)) {\n        request = request[request.length - 1] === \"/\" ? request : `${request}/`;\n      }\n\n      return this.resolveRequests(context, [...new Set([request, filename])]);\n    }\n\n    async resolveRequests(context, possibleRequests) {\n      if (possibleRequests.length === 0) {\n        return Promise.reject();\n      }\n\n      let result;\n\n      try {\n        result = await resolve(context, possibleRequests[0]);\n      } catch (error) {\n        const [, ...tailPossibleRequests] = possibleRequests;\n\n        if (tailPossibleRequests.length === 0) {\n          throw error;\n        }\n\n        result = await this.resolveRequests(context, tailPossibleRequests);\n      }\n\n      return result;\n    }\n\n    async loadFile(filename, ...args) {\n      let result;\n\n      try {\n        if (IS_SPECIAL_MODULE_IMPORT.test(filename)) {\n          const error = new Error();\n          error.type = \"Next\";\n          throw error;\n        }\n\n        result = await super.loadFile(filename, ...args);\n      } catch (error) {\n        if (error.type !== \"File\" && error.type !== \"Next\") {\n          return Promise.reject(error);\n        }\n\n        try {\n          result = await this.resolveFilename(filename, ...args);\n        } catch (webpackResolveError) {\n          error.message = `Less resolver error:\\n${error.message}\\n\\n` + `Webpack resolver error details:\\n${webpackResolveError.details}\\n\\n` + `Webpack resolver error missing:\\n${webpackResolveError.missing}\\n\\n`;\n          return Promise.reject(error);\n        }\n\n        loaderContext.addDependency(result);\n        return super.loadFile(result, ...args);\n      }\n\n      loaderContext.addDependency(_path.default.normalize(result.filename));\n      return result;\n    }\n\n  }\n\n  return {\n    install(lessInstance, pluginManager) {\n      pluginManager.addFileManager(new WebpackFileManager());\n    },\n\n    minVersion: [3, 0, 0]\n  };\n}\n/**\n * Get the less options from the loader context and normalizes its values\n *\n * @param {object} loaderContext\n * @param {object} loaderOptions\n * @param {object} implementation\n * @returns {Object}\n */\n\n\nfunction getLessOptions(loaderContext, loaderOptions, implementation) {\n  const options = (0, _full.klona)(typeof loaderOptions.lessOptions === \"function\" ? loaderOptions.lessOptions(loaderContext) || {} : loaderOptions.lessOptions || {});\n  const lessOptions = {\n    plugins: [],\n    relativeUrls: true,\n    // We need to set the filename because otherwise our WebpackFileManager will receive an undefined path for the entry\n    filename: loaderContext.resourcePath,\n    ...options\n  };\n  const shouldUseWebpackImporter = typeof loaderOptions.webpackImporter === \"boolean\" ? loaderOptions.webpackImporter : true;\n\n  if (shouldUseWebpackImporter) {\n    lessOptions.plugins.unshift(createWebpackLessPlugin(loaderContext, implementation));\n  }\n\n  lessOptions.plugins.unshift({\n    install(lessProcessor, pluginManager) {\n      // eslint-disable-next-line no-param-reassign\n      pluginManager.webpackLoaderContext = loaderContext;\n      lessOptions.pluginManager = pluginManager;\n    }\n\n  });\n  return lessOptions;\n}\n\nfunction isUnsupportedUrl(url) {\n  // Is Windows path\n  if (IS_NATIVE_WIN32_PATH.test(url)) {\n    return false;\n  } // Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n  // Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n\n\n  return /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(url);\n}\n\nfunction normalizeSourceMap(map) {\n  const newMap = map; // map.file is an optional property that provides the output filename.\n  // Since we don't know the final filename in the webpack build chain yet, it makes no sense to have it.\n  // eslint-disable-next-line no-param-reassign\n\n  delete newMap.file; // eslint-disable-next-line no-param-reassign\n\n  newMap.sourceRoot = \"\"; // `less` returns POSIX paths, that's why we need to transform them back to native paths.\n  // eslint-disable-next-line no-param-reassign\n\n  newMap.sources = newMap.sources.map(source => _path.default.normalize(source));\n  return newMap;\n}\n\nfunction getLessImplementation(loaderContext, implementation) {\n  let resolvedImplementation = implementation;\n\n  if (!implementation || typeof implementation === \"string\") {\n    const lessImplPkg = implementation || \"less\";\n\n    try {\n      // eslint-disable-next-line import/no-dynamic-require, global-require\n      resolvedImplementation = require(lessImplPkg);\n    } catch (error) {\n      loaderContext.emitError(error); // eslint-disable-next-line consistent-return\n\n      return;\n    }\n  } // eslint-disable-next-line consistent-return\n\n\n  return resolvedImplementation;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}