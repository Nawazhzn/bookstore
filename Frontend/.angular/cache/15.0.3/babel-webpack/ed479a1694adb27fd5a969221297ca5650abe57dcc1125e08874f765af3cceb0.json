{"ast":null,"code":"\"use strict\";\n\nconst NativeModule = require(\"module\");\nconst path = require(\"path\");\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"webpack\").Module} Module */\n\n/** @typedef {import(\"webpack\").LoaderContext<any>} LoaderContext */\n\n/**\n * @returns {boolean}\n */\n\nfunction trueFn() {\n  return true;\n}\n/**\n * @param {Compilation} compilation\n * @param {string | number} id\n * @returns {null | Module}\n */\n\nfunction findModuleById(compilation, id) {\n  const {\n    modules,\n    chunkGraph\n  } = compilation;\n  for (const module of modules) {\n    const moduleId = typeof chunkGraph !== \"undefined\" ? chunkGraph.getModuleId(module) : module.id;\n    if (moduleId === id) {\n      return module;\n    }\n  }\n  return null;\n}\n/**\n * @param {LoaderContext} loaderContext\n * @param {string | Buffer} code\n * @param {string} filename\n * @returns {object}\n */\n\nfunction evalModuleCode(loaderContext, code, filename) {\n  // @ts-ignore\n  const module = new NativeModule(filename, loaderContext); // @ts-ignore\n\n  module.paths = NativeModule._nodeModulePaths(loaderContext.context); // eslint-disable-line no-underscore-dangle\n\n  module.filename = filename; // @ts-ignore\n\n  module._compile(code, filename); // eslint-disable-line no-underscore-dangle\n\n  return module.exports;\n}\n/**\n * @param {string} a\n * @param {string} b\n * @returns {0 | 1 | -1}\n */\n\nfunction compareIds(a, b) {\n  if (typeof a !== typeof b) {\n    return typeof a < typeof b ? -1 : 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n/**\n * @param {Module} a\n * @param {Module} b\n * @returns {0 | 1 | -1}\n */\n\nfunction compareModulesByIdentifier(a, b) {\n  return compareIds(a.identifier(), b.identifier());\n}\nconst MODULE_TYPE = \"css/mini-extract\";\nconst AUTO_PUBLIC_PATH = \"__mini_css_extract_plugin_public_path_auto__\";\nconst ABSOLUTE_PUBLIC_PATH = \"webpack:///mini-css-extract-plugin/\";\nconst BASE_URI = \"webpack://\";\nconst SINGLE_DOT_PATH_SEGMENT = \"__mini_css_extract_plugin_single_dot_path_segment__\";\n/**\n * @param {string} str\n * @returns {boolean}\n */\n\nfunction isAbsolutePath(str) {\n  return path.posix.isAbsolute(str) || path.win32.isAbsolute(str);\n}\nconst RELATIVE_PATH_REGEXP = /^\\.\\.?[/\\\\]/;\n/**\n * @param {string} str\n * @returns {boolean}\n */\n\nfunction isRelativePath(str) {\n  return RELATIVE_PATH_REGEXP.test(str);\n} // TODO simplify for the next major release\n\n/**\n * @param {LoaderContext} loaderContext\n * @param {string} request\n * @returns {string}\n */\n\nfunction stringifyRequest(loaderContext, request) {\n  if (typeof loaderContext.utils !== \"undefined\" && typeof loaderContext.utils.contextify === \"function\") {\n    return JSON.stringify(loaderContext.utils.contextify(loaderContext.context || loaderContext.rootContext, request));\n  }\n  const splitted = request.split(\"!\");\n  const {\n    context\n  } = loaderContext;\n  return JSON.stringify(splitted.map(part => {\n    // First, separate singlePath from query, because the query might contain paths again\n    const splittedPart = part.match(/^(.*?)(\\?.*)/);\n    const query = splittedPart ? splittedPart[2] : \"\";\n    let singlePath = splittedPart ? splittedPart[1] : part;\n    if (isAbsolutePath(singlePath) && context) {\n      singlePath = path.relative(context, singlePath);\n      if (isAbsolutePath(singlePath)) {\n        // If singlePath still matches an absolute path, singlePath was on a different drive than context.\n        // In this case, we leave the path platform-specific without replacing any separators.\n        // @see https://github.com/webpack/loader-utils/pull/14\n        return singlePath + query;\n      }\n      if (isRelativePath(singlePath) === false) {\n        // Ensure that the relative path starts at least with ./ otherwise it would be a request into the modules directory (like node_modules).\n        singlePath = `./${singlePath}`;\n      }\n    }\n    return singlePath.replace(/\\\\/g, \"/\") + query;\n  }).join(\"!\"));\n}\n/**\n * @param {string} filename\n * @param {string} outputPath\n * @param {boolean} enforceRelative\n * @returns {string}\n */\n\nfunction getUndoPath(filename, outputPath, enforceRelative) {\n  let depth = -1;\n  let append = \"\"; // eslint-disable-next-line no-param-reassign\n\n  outputPath = outputPath.replace(/[\\\\/]$/, \"\");\n  for (const part of filename.split(/[/\\\\]+/)) {\n    if (part === \"..\") {\n      if (depth > -1) {\n        // eslint-disable-next-line no-plusplus\n        depth--;\n      } else {\n        const i = outputPath.lastIndexOf(\"/\");\n        const j = outputPath.lastIndexOf(\"\\\\\");\n        const pos = i < 0 ? j : j < 0 ? i : Math.max(i, j);\n        if (pos < 0) {\n          return `${outputPath}/`;\n        }\n        append = `${outputPath.slice(pos + 1)}/${append}`; // eslint-disable-next-line no-param-reassign\n\n        outputPath = outputPath.slice(0, pos);\n      }\n    } else if (part !== \".\") {\n      // eslint-disable-next-line no-plusplus\n      depth++;\n    }\n  }\n  return depth > 0 ? `${\"../\".repeat(depth)}${append}` : enforceRelative ? `./${append}` : append;\n}\nmodule.exports = {\n  trueFn,\n  findModuleById,\n  evalModuleCode,\n  compareModulesByIdentifier,\n  MODULE_TYPE,\n  AUTO_PUBLIC_PATH,\n  ABSOLUTE_PUBLIC_PATH,\n  BASE_URI,\n  SINGLE_DOT_PATH_SEGMENT,\n  stringifyRequest,\n  getUndoPath\n};","map":{"version":3,"names":["NativeModule","require","path","trueFn","findModuleById","compilation","id","modules","chunkGraph","module","moduleId","getModuleId","evalModuleCode","loaderContext","code","filename","paths","_nodeModulePaths","context","_compile","exports","compareIds","a","b","compareModulesByIdentifier","identifier","MODULE_TYPE","AUTO_PUBLIC_PATH","ABSOLUTE_PUBLIC_PATH","BASE_URI","SINGLE_DOT_PATH_SEGMENT","isAbsolutePath","str","posix","isAbsolute","win32","RELATIVE_PATH_REGEXP","isRelativePath","test","stringifyRequest","request","utils","contextify","JSON","stringify","rootContext","splitted","split","map","part","splittedPart","match","query","singlePath","relative","replace","join","getUndoPath","outputPath","enforceRelative","depth","append","i","lastIndexOf","j","pos","Math","max","slice","repeat"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/mini-css-extract-plugin/dist/utils.js"],"sourcesContent":["\"use strict\";\n\nconst NativeModule = require(\"module\");\n\nconst path = require(\"path\");\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"webpack\").Module} Module */\n\n/** @typedef {import(\"webpack\").LoaderContext<any>} LoaderContext */\n\n/**\n * @returns {boolean}\n */\n\n\nfunction trueFn() {\n  return true;\n}\n/**\n * @param {Compilation} compilation\n * @param {string | number} id\n * @returns {null | Module}\n */\n\n\nfunction findModuleById(compilation, id) {\n  const {\n    modules,\n    chunkGraph\n  } = compilation;\n\n  for (const module of modules) {\n    const moduleId = typeof chunkGraph !== \"undefined\" ? chunkGraph.getModuleId(module) : module.id;\n\n    if (moduleId === id) {\n      return module;\n    }\n  }\n\n  return null;\n}\n/**\n * @param {LoaderContext} loaderContext\n * @param {string | Buffer} code\n * @param {string} filename\n * @returns {object}\n */\n\n\nfunction evalModuleCode(loaderContext, code, filename) {\n  // @ts-ignore\n  const module = new NativeModule(filename, loaderContext); // @ts-ignore\n\n  module.paths = NativeModule._nodeModulePaths(loaderContext.context); // eslint-disable-line no-underscore-dangle\n\n  module.filename = filename; // @ts-ignore\n\n  module._compile(code, filename); // eslint-disable-line no-underscore-dangle\n\n\n  return module.exports;\n}\n/**\n * @param {string} a\n * @param {string} b\n * @returns {0 | 1 | -1}\n */\n\n\nfunction compareIds(a, b) {\n  if (typeof a !== typeof b) {\n    return typeof a < typeof b ? -1 : 1;\n  }\n\n  if (a < b) {\n    return -1;\n  }\n\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n}\n/**\n * @param {Module} a\n * @param {Module} b\n * @returns {0 | 1 | -1}\n */\n\n\nfunction compareModulesByIdentifier(a, b) {\n  return compareIds(a.identifier(), b.identifier());\n}\n\nconst MODULE_TYPE = \"css/mini-extract\";\nconst AUTO_PUBLIC_PATH = \"__mini_css_extract_plugin_public_path_auto__\";\nconst ABSOLUTE_PUBLIC_PATH = \"webpack:///mini-css-extract-plugin/\";\nconst BASE_URI = \"webpack://\";\nconst SINGLE_DOT_PATH_SEGMENT = \"__mini_css_extract_plugin_single_dot_path_segment__\";\n/**\n * @param {string} str\n * @returns {boolean}\n */\n\nfunction isAbsolutePath(str) {\n  return path.posix.isAbsolute(str) || path.win32.isAbsolute(str);\n}\n\nconst RELATIVE_PATH_REGEXP = /^\\.\\.?[/\\\\]/;\n/**\n * @param {string} str\n * @returns {boolean}\n */\n\nfunction isRelativePath(str) {\n  return RELATIVE_PATH_REGEXP.test(str);\n} // TODO simplify for the next major release\n\n/**\n * @param {LoaderContext} loaderContext\n * @param {string} request\n * @returns {string}\n */\n\n\nfunction stringifyRequest(loaderContext, request) {\n  if (typeof loaderContext.utils !== \"undefined\" && typeof loaderContext.utils.contextify === \"function\") {\n    return JSON.stringify(loaderContext.utils.contextify(loaderContext.context || loaderContext.rootContext, request));\n  }\n\n  const splitted = request.split(\"!\");\n  const {\n    context\n  } = loaderContext;\n  return JSON.stringify(splitted.map(part => {\n    // First, separate singlePath from query, because the query might contain paths again\n    const splittedPart = part.match(/^(.*?)(\\?.*)/);\n    const query = splittedPart ? splittedPart[2] : \"\";\n    let singlePath = splittedPart ? splittedPart[1] : part;\n\n    if (isAbsolutePath(singlePath) && context) {\n      singlePath = path.relative(context, singlePath);\n\n      if (isAbsolutePath(singlePath)) {\n        // If singlePath still matches an absolute path, singlePath was on a different drive than context.\n        // In this case, we leave the path platform-specific without replacing any separators.\n        // @see https://github.com/webpack/loader-utils/pull/14\n        return singlePath + query;\n      }\n\n      if (isRelativePath(singlePath) === false) {\n        // Ensure that the relative path starts at least with ./ otherwise it would be a request into the modules directory (like node_modules).\n        singlePath = `./${singlePath}`;\n      }\n    }\n\n    return singlePath.replace(/\\\\/g, \"/\") + query;\n  }).join(\"!\"));\n}\n/**\n * @param {string} filename\n * @param {string} outputPath\n * @param {boolean} enforceRelative\n * @returns {string}\n */\n\n\nfunction getUndoPath(filename, outputPath, enforceRelative) {\n  let depth = -1;\n  let append = \"\"; // eslint-disable-next-line no-param-reassign\n\n  outputPath = outputPath.replace(/[\\\\/]$/, \"\");\n\n  for (const part of filename.split(/[/\\\\]+/)) {\n    if (part === \"..\") {\n      if (depth > -1) {\n        // eslint-disable-next-line no-plusplus\n        depth--;\n      } else {\n        const i = outputPath.lastIndexOf(\"/\");\n        const j = outputPath.lastIndexOf(\"\\\\\");\n        const pos = i < 0 ? j : j < 0 ? i : Math.max(i, j);\n\n        if (pos < 0) {\n          return `${outputPath}/`;\n        }\n\n        append = `${outputPath.slice(pos + 1)}/${append}`; // eslint-disable-next-line no-param-reassign\n\n        outputPath = outputPath.slice(0, pos);\n      }\n    } else if (part !== \".\") {\n      // eslint-disable-next-line no-plusplus\n      depth++;\n    }\n  }\n\n  return depth > 0 ? `${\"../\".repeat(depth)}${append}` : enforceRelative ? `./${append}` : append;\n}\n\nmodule.exports = {\n  trueFn,\n  findModuleById,\n  evalModuleCode,\n  compareModulesByIdentifier,\n  MODULE_TYPE,\n  AUTO_PUBLIC_PATH,\n  ABSOLUTE_PUBLIC_PATH,\n  BASE_URI,\n  SINGLE_DOT_PATH_SEGMENT,\n  stringifyRequest,\n  getUndoPath\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}