{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getKeywords = void 0;\nconst core_1 = require(\"@babel/core\");\n/**\n * The name of the Angular class metadata function created by the Angular compiler.\n */\nconst SET_CLASS_METADATA_NAME = 'ɵsetClassMetadata';\n/**\n * Provides one or more keywords that if found within the content of a source file indicate\n * that this plugin should be used with a source file.\n *\n * @returns An a string iterable containing one or more keywords.\n */\nfunction getKeywords() {\n  return [SET_CLASS_METADATA_NAME];\n}\nexports.getKeywords = getKeywords;\n/**\n * A babel plugin factory function for eliding the Angular class metadata function (`ɵsetClassMetadata`).\n *\n * @returns A babel plugin object instance.\n */\nfunction default_1() {\n  return {\n    visitor: {\n      CallExpression(path) {\n        var _a;\n        const callee = path.node.callee;\n        // The function being called must be the metadata function name\n        let calleeName;\n        if (core_1.types.isMemberExpression(callee) && core_1.types.isIdentifier(callee.property)) {\n          calleeName = callee.property.name;\n        } else if (core_1.types.isIdentifier(callee)) {\n          calleeName = callee.name;\n        }\n        if (calleeName !== SET_CLASS_METADATA_NAME) {\n          return;\n        }\n        // There must be four arguments that meet the following criteria:\n        // * First must be an identifier\n        // * Second must be an array literal\n        const callArguments = path.node.arguments;\n        if (callArguments.length !== 4 || !core_1.types.isIdentifier(callArguments[0]) || !core_1.types.isArrayExpression(callArguments[1])) {\n          return;\n        }\n        // The metadata function is always emitted inside a function expression\n        if (!((_a = path.getFunctionParent()) === null || _a === void 0 ? void 0 : _a.isFunctionExpression())) {\n          return;\n        }\n        // Replace the metadata function with `void 0` which is the equivalent return value\n        // of the metadata function.\n        path.replaceWith(path.scope.buildUndefinedNode());\n      }\n    }\n  };\n}\nexports.default = default_1;","map":{"version":3,"names":["Object","defineProperty","exports","value","getKeywords","core_1","require","SET_CLASS_METADATA_NAME","default_1","visitor","CallExpression","path","_a","callee","node","calleeName","types","isMemberExpression","isIdentifier","property","name","callArguments","arguments","length","isArrayExpression","getFunctionParent","isFunctionExpression","replaceWith","scope","buildUndefinedNode","default"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/babel/plugins/elide-angular-metadata.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getKeywords = void 0;\nconst core_1 = require(\"@babel/core\");\n/**\n * The name of the Angular class metadata function created by the Angular compiler.\n */\nconst SET_CLASS_METADATA_NAME = 'ɵsetClassMetadata';\n/**\n * Provides one or more keywords that if found within the content of a source file indicate\n * that this plugin should be used with a source file.\n *\n * @returns An a string iterable containing one or more keywords.\n */\nfunction getKeywords() {\n    return [SET_CLASS_METADATA_NAME];\n}\nexports.getKeywords = getKeywords;\n/**\n * A babel plugin factory function for eliding the Angular class metadata function (`ɵsetClassMetadata`).\n *\n * @returns A babel plugin object instance.\n */\nfunction default_1() {\n    return {\n        visitor: {\n            CallExpression(path) {\n                var _a;\n                const callee = path.node.callee;\n                // The function being called must be the metadata function name\n                let calleeName;\n                if (core_1.types.isMemberExpression(callee) && core_1.types.isIdentifier(callee.property)) {\n                    calleeName = callee.property.name;\n                }\n                else if (core_1.types.isIdentifier(callee)) {\n                    calleeName = callee.name;\n                }\n                if (calleeName !== SET_CLASS_METADATA_NAME) {\n                    return;\n                }\n                // There must be four arguments that meet the following criteria:\n                // * First must be an identifier\n                // * Second must be an array literal\n                const callArguments = path.node.arguments;\n                if (callArguments.length !== 4 ||\n                    !core_1.types.isIdentifier(callArguments[0]) ||\n                    !core_1.types.isArrayExpression(callArguments[1])) {\n                    return;\n                }\n                // The metadata function is always emitted inside a function expression\n                if (!((_a = path.getFunctionParent()) === null || _a === void 0 ? void 0 : _a.isFunctionExpression())) {\n                    return;\n                }\n                // Replace the metadata function with `void 0` which is the equivalent return value\n                // of the metadata function.\n                path.replaceWith(path.scope.buildUndefinedNode());\n            },\n        },\n    };\n}\nexports.default = default_1;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,WAAW,GAAG,KAAK,CAAC;AAC5B,MAAMC,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC;AACrC;AACA;AACA;AACA,MAAMC,uBAAuB,GAAG,mBAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,SAASH,WAAW,GAAG;EACnB,OAAO,CAACG,uBAAuB,CAAC;AACpC;AACAL,OAAO,CAACE,WAAW,GAAGA,WAAW;AACjC;AACA;AACA;AACA;AACA;AACA,SAASI,SAAS,GAAG;EACjB,OAAO;IACHC,OAAO,EAAE;MACLC,cAAc,CAACC,IAAI,EAAE;QACjB,IAAIC,EAAE;QACN,MAAMC,MAAM,GAAGF,IAAI,CAACG,IAAI,CAACD,MAAM;QAC/B;QACA,IAAIE,UAAU;QACd,IAAIV,MAAM,CAACW,KAAK,CAACC,kBAAkB,CAACJ,MAAM,CAAC,IAAIR,MAAM,CAACW,KAAK,CAACE,YAAY,CAACL,MAAM,CAACM,QAAQ,CAAC,EAAE;UACvFJ,UAAU,GAAGF,MAAM,CAACM,QAAQ,CAACC,IAAI;QACrC,CAAC,MACI,IAAIf,MAAM,CAACW,KAAK,CAACE,YAAY,CAACL,MAAM,CAAC,EAAE;UACxCE,UAAU,GAAGF,MAAM,CAACO,IAAI;QAC5B;QACA,IAAIL,UAAU,KAAKR,uBAAuB,EAAE;UACxC;QACJ;QACA;QACA;QACA;QACA,MAAMc,aAAa,GAAGV,IAAI,CAACG,IAAI,CAACQ,SAAS;QACzC,IAAID,aAAa,CAACE,MAAM,KAAK,CAAC,IAC1B,CAAClB,MAAM,CAACW,KAAK,CAACE,YAAY,CAACG,aAAa,CAAC,CAAC,CAAC,CAAC,IAC5C,CAAChB,MAAM,CAACW,KAAK,CAACQ,iBAAiB,CAACH,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE;UACnD;QACJ;QACA;QACA,IAAI,EAAE,CAACT,EAAE,GAAGD,IAAI,CAACc,iBAAiB,EAAE,MAAM,IAAI,IAAIb,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACc,oBAAoB,EAAE,CAAC,EAAE;UACnG;QACJ;QACA;QACA;QACAf,IAAI,CAACgB,WAAW,CAAChB,IAAI,CAACiB,KAAK,CAACC,kBAAkB,EAAE,CAAC;MACrD;IACJ;EACJ,CAAC;AACL;AACA3B,OAAO,CAAC4B,OAAO,GAAGtB,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}