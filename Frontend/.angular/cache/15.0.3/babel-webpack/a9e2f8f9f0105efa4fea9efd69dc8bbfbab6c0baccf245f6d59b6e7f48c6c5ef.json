{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.debugPerformance = exports.useLegacySass = exports.maxWorkers = exports.allowMinify = exports.shouldBeautify = exports.allowMangle = void 0;\nconst color_1 = require(\"./color\");\nfunction isDisabled(variable) {\n  return variable === '0' || variable.toLowerCase() === 'false';\n}\nfunction isEnabled(variable) {\n  return variable === '1' || variable.toLowerCase() === 'true';\n}\nfunction isPresent(variable) {\n  return typeof variable === 'string' && variable !== '';\n}\n// Optimization and mangling\nconst debugOptimizeVariable = process.env['NG_BUILD_DEBUG_OPTIMIZE'];\nconst debugOptimize = (() => {\n  if (!isPresent(debugOptimizeVariable) || isDisabled(debugOptimizeVariable)) {\n    return {\n      mangle: true,\n      minify: true,\n      beautify: false\n    };\n  }\n  const debugValue = {\n    mangle: false,\n    minify: false,\n    beautify: true\n  };\n  if (isEnabled(debugOptimizeVariable)) {\n    return debugValue;\n  }\n  for (const part of debugOptimizeVariable.split(',')) {\n    switch (part.trim().toLowerCase()) {\n      case 'mangle':\n        debugValue.mangle = true;\n        break;\n      case 'minify':\n        debugValue.minify = true;\n        break;\n      case 'beautify':\n        debugValue.beautify = true;\n        break;\n    }\n  }\n  return debugValue;\n})();\nconst mangleVariable = process.env['NG_BUILD_MANGLE'];\nexports.allowMangle = isPresent(mangleVariable) ? !isDisabled(mangleVariable) : debugOptimize.mangle;\nexports.shouldBeautify = debugOptimize.beautify;\nexports.allowMinify = debugOptimize.minify;\n/**\n * Some environments, like CircleCI which use Docker report a number of CPUs by the host and not the count of available.\n * This cause `Error: Call retries were exceeded` errors when trying to use them.\n *\n * @see https://github.com/nodejs/node/issues/28762\n * @see https://github.com/webpack-contrib/terser-webpack-plugin/issues/143\n * @see https://ithub.com/angular/angular-cli/issues/16860#issuecomment-588828079\n *\n */\nconst maxWorkersVariable = process.env['NG_BUILD_MAX_WORKERS'];\nexports.maxWorkers = isPresent(maxWorkersVariable) ? +maxWorkersVariable : 4;\nconst legacySassVariable = process.env['NG_BUILD_LEGACY_SASS'];\nexports.useLegacySass = (() => {\n  if (!isPresent(legacySassVariable)) {\n    return false;\n  }\n  // eslint-disable-next-line no-console\n  console.warn(color_1.colors.yellow(`Warning: 'NG_BUILD_LEGACY_SASS' environment variable support will be removed in version 16.`));\n  return isEnabled(legacySassVariable);\n})();\nconst debugPerfVariable = process.env['NG_BUILD_DEBUG_PERF'];\nexports.debugPerformance = isPresent(debugPerfVariable) && isEnabled(debugPerfVariable);","map":{"version":3,"names":["Object","defineProperty","exports","value","debugPerformance","useLegacySass","maxWorkers","allowMinify","shouldBeautify","allowMangle","color_1","require","isDisabled","variable","toLowerCase","isEnabled","isPresent","debugOptimizeVariable","process","env","debugOptimize","mangle","minify","beautify","debugValue","part","split","trim","mangleVariable","maxWorkersVariable","legacySassVariable","console","warn","colors","yellow","debugPerfVariable"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/utils/environment-options.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.debugPerformance = exports.useLegacySass = exports.maxWorkers = exports.allowMinify = exports.shouldBeautify = exports.allowMangle = void 0;\nconst color_1 = require(\"./color\");\nfunction isDisabled(variable) {\n    return variable === '0' || variable.toLowerCase() === 'false';\n}\nfunction isEnabled(variable) {\n    return variable === '1' || variable.toLowerCase() === 'true';\n}\nfunction isPresent(variable) {\n    return typeof variable === 'string' && variable !== '';\n}\n// Optimization and mangling\nconst debugOptimizeVariable = process.env['NG_BUILD_DEBUG_OPTIMIZE'];\nconst debugOptimize = (() => {\n    if (!isPresent(debugOptimizeVariable) || isDisabled(debugOptimizeVariable)) {\n        return {\n            mangle: true,\n            minify: true,\n            beautify: false,\n        };\n    }\n    const debugValue = {\n        mangle: false,\n        minify: false,\n        beautify: true,\n    };\n    if (isEnabled(debugOptimizeVariable)) {\n        return debugValue;\n    }\n    for (const part of debugOptimizeVariable.split(',')) {\n        switch (part.trim().toLowerCase()) {\n            case 'mangle':\n                debugValue.mangle = true;\n                break;\n            case 'minify':\n                debugValue.minify = true;\n                break;\n            case 'beautify':\n                debugValue.beautify = true;\n                break;\n        }\n    }\n    return debugValue;\n})();\nconst mangleVariable = process.env['NG_BUILD_MANGLE'];\nexports.allowMangle = isPresent(mangleVariable)\n    ? !isDisabled(mangleVariable)\n    : debugOptimize.mangle;\nexports.shouldBeautify = debugOptimize.beautify;\nexports.allowMinify = debugOptimize.minify;\n/**\n * Some environments, like CircleCI which use Docker report a number of CPUs by the host and not the count of available.\n * This cause `Error: Call retries were exceeded` errors when trying to use them.\n *\n * @see https://github.com/nodejs/node/issues/28762\n * @see https://github.com/webpack-contrib/terser-webpack-plugin/issues/143\n * @see https://ithub.com/angular/angular-cli/issues/16860#issuecomment-588828079\n *\n */\nconst maxWorkersVariable = process.env['NG_BUILD_MAX_WORKERS'];\nexports.maxWorkers = isPresent(maxWorkersVariable) ? +maxWorkersVariable : 4;\nconst legacySassVariable = process.env['NG_BUILD_LEGACY_SASS'];\nexports.useLegacySass = (() => {\n    if (!isPresent(legacySassVariable)) {\n        return false;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(color_1.colors.yellow(`Warning: 'NG_BUILD_LEGACY_SASS' environment variable support will be removed in version 16.`));\n    return isEnabled(legacySassVariable);\n})();\nconst debugPerfVariable = process.env['NG_BUILD_DEBUG_PERF'];\nexports.debugPerformance = isPresent(debugPerfVariable) && isEnabled(debugPerfVariable);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}