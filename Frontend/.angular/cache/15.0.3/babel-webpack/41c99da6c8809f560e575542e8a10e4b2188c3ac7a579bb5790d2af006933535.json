{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\nvar path = _interopDefault(require('path'));\nvar fs = require('fs');\nvar prettyBytes = _interopDefault(require('pretty-bytes'));\nvar parse5 = _interopDefault(require('parse5'));\nvar cssSelect = require('css-select');\nvar treeAdapter = _interopDefault(require('parse5-htmlparser2-tree-adapter'));\nvar postcss = require('postcss');\nvar chalk = _interopDefault(require('chalk'));\n\n/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nconst PARSE5_OPTS = {\n  treeAdapter\n};\n/**\n * Parse HTML into a mutable, serializable DOM Document.\n * The DOM implementation is an htmlparser2 DOM enhanced with basic DOM mutation methods.\n * @param {String} html   HTML to parse into a Document instance\n */\n\nfunction createDocument(html) {\n  const document = /** @type {HTMLDocument} */\n  parse5.parse(html, PARSE5_OPTS);\n  defineProperties(document, DocumentExtensions); // Extend Element.prototype with DOM manipulation methods.\n\n  const scratch = document.createElement('div'); // Get a reference to the base Node class - used by createTextNode()\n\n  document.$$Node = scratch.constructor;\n  const elementProto = Object.getPrototypeOf(scratch);\n  defineProperties(elementProto, ElementExtensions);\n  elementProto.ownerDocument = document;\n  return document;\n}\n/**\n * Serialize a Document to an HTML String\n * @param {HTMLDocument} document   A Document, such as one created via `createDocument()`\n */\n\nfunction serializeDocument(document) {\n  return parse5.serialize(document, PARSE5_OPTS);\n}\n/** @typedef {treeAdapter.Document & typeof ElementExtensions} HTMLDocument */\n\n/**\n * Methods and descriptors to mix into Element.prototype\n * @private\n */\n\nconst ElementExtensions = {\n  /** @extends treeAdapter.Element.prototype */\n  nodeName: {\n    get() {\n      return this.tagName.toUpperCase();\n    }\n  },\n  id: reflectedProperty('id'),\n  className: reflectedProperty('class'),\n  insertBefore(child, referenceNode) {\n    if (!referenceNode) return this.appendChild(child);\n    treeAdapter.insertBefore(this, child, referenceNode);\n    return child;\n  },\n  appendChild(child) {\n    treeAdapter.appendChild(this, child);\n    return child;\n  },\n  removeChild(child) {\n    treeAdapter.detachNode(child);\n  },\n  remove() {\n    treeAdapter.detachNode(this);\n  },\n  textContent: {\n    get() {\n      return getText(this);\n    },\n    set(text) {\n      this.children = [];\n      treeAdapter.insertText(this, text);\n    }\n  },\n  setAttribute(name, value) {\n    if (this.attribs == null) this.attribs = {};\n    if (value == null) value = '';\n    this.attribs[name] = value;\n  },\n  removeAttribute(name) {\n    if (this.attribs != null) {\n      delete this.attribs[name];\n    }\n  },\n  getAttribute(name) {\n    return this.attribs != null && this.attribs[name];\n  },\n  hasAttribute(name) {\n    return this.attribs != null && this.attribs[name] != null;\n  },\n  getAttributeNode(name) {\n    const value = this.getAttribute(name);\n    if (value != null) return {\n      specified: true,\n      value\n    };\n  }\n};\n/**\n * Methods and descriptors to mix into the global document instance\n * @private\n */\n\nconst DocumentExtensions = {\n  /** @extends treeAdapter.Document.prototype */\n  // document is just an Element in htmlparser2, giving it a nodeType of ELEMENT_NODE.\n  // TODO: verify if these are needed for css-select\n  nodeType: {\n    get() {\n      return 9;\n    }\n  },\n  contentType: {\n    get() {\n      return 'text/html';\n    }\n  },\n  nodeName: {\n    get() {\n      return '#document';\n    }\n  },\n  documentElement: {\n    get() {\n      // Find the first <html> element within the document\n      return this.childNodes.filter(child => String(child.tagName).toLowerCase() === 'html');\n    }\n  },\n  compatMode: {\n    get() {\n      const compatMode = {\n        'no-quirks': 'CSS1Compat',\n        quirks: 'BackCompat',\n        'limited-quirks': 'CSS1Compat'\n      };\n      return compatMode[treeAdapter.getDocumentMode(this)];\n    }\n  },\n  head: {\n    get() {\n      return this.querySelector('head');\n    }\n  },\n  body: {\n    get() {\n      return this.querySelector('body');\n    }\n  },\n  createElement(name) {\n    return treeAdapter.createElement(name, null, []);\n  },\n  createTextNode(text) {\n    // there is no dedicated createTextNode equivalent exposed in htmlparser2's DOM\n    const Node = this.$$Node;\n    return new Node({\n      type: 'text',\n      data: text,\n      parent: null,\n      prev: null,\n      next: null\n    });\n  },\n  querySelector(sel) {\n    return cssSelect.selectOne(sel, this.documentElement);\n  },\n  querySelectorAll(sel) {\n    if (sel === ':root') {\n      return this;\n    }\n    return cssSelect.selectAll(sel, this.documentElement);\n  }\n};\n/**\n * Essentially `Object.defineProperties()`, except function values are assigned as value descriptors for convenience.\n * @private\n */\n\nfunction defineProperties(obj, properties) {\n  for (const i in properties) {\n    const value = properties[i];\n    Object.defineProperty(obj, i, typeof value === 'function' ? {\n      value\n    } : value);\n  }\n}\n/**\n * Create a property descriptor defining a getter/setter pair alias for a named attribute.\n * @private\n */\n\nfunction reflectedProperty(attributeName) {\n  return {\n    get() {\n      return this.getAttribute(attributeName);\n    },\n    set(value) {\n      this.setAttribute(attributeName, value);\n    }\n  };\n}\n/**\n * Helper to get the text content of a node\n * https://github.com/fb55/domutils/blob/master/src/stringify.ts#L21\n * @private\n */\n\nfunction getText(node) {\n  if (Array.isArray(node)) return node.map(getText).join('');\n  if (treeAdapter.isElementNode(node)) return node.name === 'br' ? '\\n' : getText(node.children);\n  if (treeAdapter.isTextNode(node)) return node.data;\n  return '';\n}\n\n/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n/**\n * Parse a textual CSS Stylesheet into a Stylesheet instance.\n * Stylesheet is a mutable postcss AST with format similar to CSSOM.\n * @see https://github.com/postcss/postcss/\n * @private\n * @param {String} stylesheet\n * @returns {css.Stylesheet} ast\n */\n\nfunction parseStylesheet(stylesheet) {\n  return postcss.parse(stylesheet);\n}\n/**\n * Serialize a postcss Stylesheet to a String of CSS.\n * @private\n * @param {css.Stylesheet} ast          A Stylesheet to serialize, such as one returned from `parseStylesheet()`\n * @param {Object} options              Options used by the stringify logic\n * @param {Boolean} [options.compress]  Compress CSS output (removes comments, whitespace, etc)\n */\n\nfunction serializeStylesheet(ast, options) {\n  let cssStr = '';\n  postcss.stringify(ast, (result, node, type) => {\n    var _node$raws;\n    if (!options.compress) {\n      cssStr += result;\n      return;\n    } // Simple minification logic\n\n    if ((node == null ? void 0 : node.type) === 'comment') return;\n    if ((node == null ? void 0 : node.type) === 'decl') {\n      const prefix = node.prop + node.raws.between;\n      cssStr += result.replace(prefix, prefix.trim());\n      return;\n    }\n    if (type === 'start') {\n      if (node.type === 'rule' && node.selectors) {\n        cssStr += node.selectors.join(',') + '{';\n      } else {\n        cssStr += result.replace(/\\s\\{$/, '{');\n      }\n      return;\n    }\n    if (type === 'end' && result === '}' && node != null && (_node$raws = node.raws) != null && _node$raws.semicolon) {\n      cssStr = cssStr.slice(0, -1);\n    }\n    cssStr += result.trim();\n  });\n  return cssStr;\n}\n/**\n * Converts a walkStyleRules() iterator to mark nodes with `.$$remove=true` instead of actually removing them.\n * This means they can be removed in a second pass, allowing the first pass to be nondestructive (eg: to preserve mirrored sheets).\n * @private\n * @param {Function} iterator   Invoked on each node in the tree. Return `false` to remove that node.\n * @returns {(rule) => void} nonDestructiveIterator\n */\n\nfunction markOnly(predicate) {\n  return rule => {\n    const sel = rule.selectors;\n    if (predicate(rule) === false) {\n      rule.$$remove = true;\n    }\n    rule.$$markedSelectors = rule.selectors;\n    if (rule._other) {\n      rule._other.$$markedSelectors = rule._other.selectors;\n    }\n    rule.selectors = sel;\n  };\n}\n/**\n * Apply filtered selectors to a rule from a previous markOnly run.\n * @private\n * @param {css.Rule} rule The Rule to apply marked selectors to (if they exist).\n */\n\nfunction applyMarkedSelectors(rule) {\n  if (rule.$$markedSelectors) {\n    rule.selectors = rule.$$markedSelectors;\n  }\n  if (rule._other) {\n    applyMarkedSelectors(rule._other);\n  }\n}\n/**\n * Recursively walk all rules in a stylesheet.\n * @private\n * @param {css.Rule} node       A Stylesheet or Rule to descend into.\n * @param {Function} iterator   Invoked on each node in the tree. Return `false` to remove that node.\n */\n\nfunction walkStyleRules(node, iterator) {\n  node.nodes = node.nodes.filter(rule => {\n    if (hasNestedRules(rule)) {\n      walkStyleRules(rule, iterator);\n    }\n    rule._other = undefined;\n    rule.filterSelectors = filterSelectors;\n    return iterator(rule) !== false;\n  });\n}\n/**\n * Recursively walk all rules in two identical stylesheets, filtering nodes into one or the other based on a predicate.\n * @private\n * @param {css.Rule} node       A Stylesheet or Rule to descend into.\n * @param {css.Rule} node2      A second tree identical to `node`\n * @param {Function} iterator   Invoked on each node in the tree. Return `false` to remove that node from the first tree, true to remove it from the second.\n */\n\nfunction walkStyleRulesWithReverseMirror(node, node2, iterator) {\n  if (node2 === null) return walkStyleRules(node, iterator);\n  [node.nodes, node2.nodes] = splitFilter(node.nodes, node2.nodes, (rule, index, rules, rules2) => {\n    const rule2 = rules2[index];\n    if (hasNestedRules(rule)) {\n      walkStyleRulesWithReverseMirror(rule, rule2, iterator);\n    }\n    rule._other = rule2;\n    rule.filterSelectors = filterSelectors;\n    return iterator(rule) !== false;\n  });\n} // Checks if a node has nested rules, like @media\n// @keyframes are an exception since they are evaluated as a whole\n\nfunction hasNestedRules(rule) {\n  return rule.nodes && rule.nodes.length && rule.nodes.some(n => n.type === 'rule' || n.type === 'atrule') && rule.name !== 'keyframes' && rule.name !== '-webkit-keyframes';\n} // Like [].filter(), but applies the opposite filtering result to a second copy of the Array without a second pass.\n// This is just a quicker version of generating the compliment of the set returned from a filter operation.\n\nfunction splitFilter(a, b, predicate) {\n  const aOut = [];\n  const bOut = [];\n  for (let index = 0; index < a.length; index++) {\n    if (predicate(a[index], index, a, b)) {\n      aOut.push(a[index]);\n    } else {\n      bOut.push(a[index]);\n    }\n  }\n  return [aOut, bOut];\n} // can be invoked on a style rule to subset its selectors (with reverse mirroring)\n\nfunction filterSelectors(predicate) {\n  if (this._other) {\n    const [a, b] = splitFilter(this.selectors, this._other.selectors, predicate);\n    this.selectors = a;\n    this._other.selectors = b;\n  } else {\n    this.selectors = this.selectors.filter(predicate);\n  }\n}\nconst LOG_LEVELS = ['trace', 'debug', 'info', 'warn', 'error', 'silent'];\nconst defaultLogger = {\n  trace(msg) {\n    console.trace(msg);\n  },\n  debug(msg) {\n    console.debug(msg);\n  },\n  warn(msg) {\n    console.warn(chalk.yellow(msg));\n  },\n  error(msg) {\n    console.error(chalk.bold.red(msg));\n  },\n  info(msg) {\n    console.info(chalk.bold.blue(msg));\n  },\n  silent() {}\n};\nfunction createLogger(logLevel) {\n  const logLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  return LOG_LEVELS.reduce((logger, type, index) => {\n    if (index >= logLevelIdx) {\n      logger[type] = defaultLogger[type];\n    } else {\n      logger[type] = defaultLogger.silent;\n    }\n    return logger;\n  }, {});\n}\n\n/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n/**\n * The mechanism to use for lazy-loading stylesheets.\n *\n * Note: <kbd>JS</kbd> indicates a strategy requiring JavaScript (falls back to `<noscript>` unless disabled).\n *\n * - **default:** Move stylesheet links to the end of the document and insert preload meta tags in their place.\n * - **\"body\":** Move all external stylesheet links to the end of the document.\n * - **\"media\":** Load stylesheets asynchronously by adding `media=\"not x\"` and removing once loaded. <kbd>JS</kbd>\n * - **\"swap\":** Convert stylesheet links to preloads that swap to `rel=\"stylesheet\"` once loaded ([details](https://www.filamentgroup.com/lab/load-css-simpler/#the-code)). <kbd>JS</kbd>\n * - **\"swap-high\":** Use `<link rel=\"alternate stylesheet preload\">` and swap to `rel=\"stylesheet\"` once loaded ([details](http://filamentgroup.github.io/loadCSS/test/new-high.html)). <kbd>JS</kbd>\n * - **\"js\":** Inject an asynchronous CSS loader similar to [LoadCSS](https://github.com/filamentgroup/loadCSS) and use it to load stylesheets. <kbd>JS</kbd>\n * - **\"js-lazy\":** Like `\"js\"`, but the stylesheet is disabled until fully loaded.\n * - **false:** Disables adding preload tags.\n * @typedef {(default|'body'|'media'|'swap'|'swap-high'|'js'|'js-lazy')} PreloadStrategy\n * @public\n */\n\n/**\n * Controls which keyframes rules are inlined.\n *\n * - **\"critical\":** _(default)_ inline keyframes rules that are used by the critical CSS.\n * - **\"all\":** Inline all keyframes rules.\n * - **\"none\":** Remove all keyframes rules.\n * @typedef {('critical'|'all'|'none')} KeyframeStrategy\n * @private\n * @property {String} keyframes     Which {@link KeyframeStrategy keyframe strategy} to use (default: `critical`)_\n */\n\n/**\n * Controls log level of the plugin. Specifies the level the logger should use. A logger will\n * not produce output for any log level beneath the specified level. Available levels and order\n * are:\n *\n * - **\"info\"** _(default)_\n * - **\"warn\"**\n * - **\"error\"**\n * - **\"trace\"**\n * - **\"debug\"**\n * - **\"silent\"**\n * @typedef {('info'|'warn'|'error'|'trace'|'debug'|'silent')} LogLevel\n * @public\n */\n\n/**\n * Custom logger interface:\n * @typedef {object} Logger\n * @public\n * @property {function(String)} trace - Prints a trace message\n * @property {function(String)} debug - Prints a debug message\n * @property {function(String)} info - Prints an information message\n * @property {function(String)} warn - Prints a warning message\n * @property {function(String)} error - Prints an error message\n */\n\n/**\n * All optional. Pass them to `new Critters({ ... })`.\n * @public\n * @typedef Options\n * @property {String} path     Base path location of the CSS files _(default: `''`)_\n * @property {String} publicPath     Public path of the CSS resources. This prefix is removed from the href _(default: `''`)_\n * @property {Boolean} external     Inline styles from external stylesheets _(default: `true`)_\n * @property {Number} inlineThreshold Inline external stylesheets smaller than a given size _(default: `0`)_\n * @property {Number} minimumExternalSize If the non-critical external stylesheet would be below this size, just inline it _(default: `0`)_\n * @property {Boolean} pruneSource  Remove inlined rules from the external stylesheet _(default: `false`)_\n * @property {Boolean} mergeStylesheets Merged inlined stylesheets into a single `<style>` tag _(default: `true`)_\n * @property {String[]} additionalStylesheets Glob for matching other stylesheets to be used while looking for critical CSS.\n * @property {String} preload       Which {@link PreloadStrategy preload strategy} to use\n * @property {Boolean} noscriptFallback Add `<noscript>` fallback to JS-based strategies\n * @property {Boolean} inlineFonts  Inline critical font-face rules _(default: `false`)_\n * @property {Boolean} preloadFonts Preloads critical fonts _(default: `true`)_\n * @property {Boolean} fonts        Shorthand for setting `inlineFonts` + `preloadFonts`\n *  - Values:\n *  - `true` to inline critical font-face rules and preload the fonts\n *  - `false` to don't inline any font-face rules and don't preload fonts\n * @property {String} keyframes     Controls which keyframes rules are inlined.\n *  - Values:\n *  - `\"critical\"`: _(default)_ inline keyframes rules used by the critical CSS\n *  - `\"all\"` inline all keyframes rules\n *  - `\"none\"` remove all keyframes rules\n * @property {Boolean} compress     Compress resulting critical CSS _(default: `true`)_\n * @property {String} logLevel      Controls {@link LogLevel log level} of the plugin _(default: `\"info\"`)_\n * @property {object} logger        Provide a custom logger interface {@link Logger logger}\n */\n\nclass Critters {\n  /** @private */\n  constructor(options) {\n    this.options = Object.assign({\n      logLevel: 'info',\n      path: '',\n      publicPath: '',\n      reduceInlineStyles: true,\n      pruneSource: false,\n      additionalStylesheets: []\n    }, options || {});\n    this.urlFilter = this.options.filter;\n    if (this.urlFilter instanceof RegExp) {\n      this.urlFilter = this.urlFilter.test.bind(this.urlFilter);\n    }\n    this.logger = this.options.logger || createLogger(this.options.logLevel);\n  }\n  /**\n   * Read the contents of a file from the specified filesystem or disk\n   */\n\n  readFile(filename) {\n    const fs$1 = this.fs;\n    return new Promise((resolve, reject) => {\n      const callback = (err, data) => {\n        if (err) reject(err);else resolve(data);\n      };\n      if (fs$1 && fs$1.readFile) {\n        fs$1.readFile(filename, callback);\n      } else {\n        fs.readFile(filename, 'utf8', callback);\n      }\n    });\n  }\n  /**\n   * Apply critical CSS processing to the html\n   */\n\n  process(html) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const start = process.hrtime.bigint(); // Parse the generated HTML in a DOM we can mutate\n\n      const document = createDocument(html);\n      if (_this.options.additionalStylesheets.length > 0) {\n        _this.embedAdditionalStylesheet(document);\n      } // `external:false` skips processing of external sheets\n\n      if (_this.options.external !== false) {\n        const externalSheets = [].slice.call(document.querySelectorAll('link[rel=\"stylesheet\"]'));\n        yield Promise.all(externalSheets.map(link => _this.embedLinkedStylesheet(link, document)));\n      } // go through all the style tags in the document and reduce them to only critical CSS\n\n      const styles = _this.getAffectedStyleTags(document);\n      yield Promise.all(styles.map(style => _this.processStyle(style, document)));\n      if (_this.options.mergeStylesheets !== false && styles.length !== 0) {\n        yield _this.mergeStylesheets(document);\n      } // serialize the document back to HTML and we're done\n\n      const output = serializeDocument(document);\n      const end = process.hrtime.bigint();\n      _this.logger.info('Time ' + parseFloat(end - start) / 1000000.0);\n      return output;\n    })();\n  }\n  /**\n   * Get the style tags that need processing\n   */\n\n  getAffectedStyleTags(document) {\n    const styles = [].slice.call(document.querySelectorAll('style')); // `inline:false` skips processing of inline stylesheets\n\n    if (this.options.reduceInlineStyles === false) {\n      return styles.filter(style => style.$$external);\n    }\n    return styles;\n  }\n  mergeStylesheets(document) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const styles = _this2.getAffectedStyleTags(document);\n      if (styles.length === 0) {\n        _this2.logger.warn('Merging inline stylesheets into a single <style> tag skipped, no inline stylesheets to merge');\n        return;\n      }\n      const first = styles[0];\n      let sheet = first.textContent;\n      for (let i = 1; i < styles.length; i++) {\n        const node = styles[i];\n        sheet += node.textContent;\n        node.remove();\n      }\n      first.textContent = sheet;\n    })();\n  }\n  /**\n   * Given href, find the corresponding CSS asset\n   */\n\n  getCssAsset(href) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const outputPath = _this3.options.path;\n      const publicPath = _this3.options.publicPath; // CHECK - the output path\n      // path on disk (with output.publicPath removed)\n\n      let normalizedPath = href.replace(/^\\//, '');\n      const pathPrefix = (publicPath || '').replace(/(^\\/|\\/$)/g, '') + '/';\n      if (normalizedPath.indexOf(pathPrefix) === 0) {\n        normalizedPath = normalizedPath.substring(pathPrefix.length).replace(/^\\//, '');\n      } // Ignore remote stylesheets\n\n      if (/^https?:\\/\\//.test(normalizedPath) || href.startsWith('//')) {\n        return undefined;\n      }\n      const filename = path.resolve(outputPath, normalizedPath);\n      let sheet;\n      try {\n        sheet = yield _this3.readFile(filename);\n      } catch (e) {\n        _this3.logger.warn(`Unable to locate stylesheet: ${filename}`);\n      }\n      return sheet;\n    })();\n  }\n  checkInlineThreshold(link, style, sheet) {\n    if (this.options.inlineThreshold && sheet.length < this.options.inlineThreshold) {\n      const href = style.$$name;\n      style.$$reduce = false;\n      this.logger.info(`\\u001b[32mInlined all of ${href} (${sheet.length} was below the threshold of ${this.options.inlineThreshold})\\u001b[39m`);\n      link.remove();\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Inline the stylesheets from options.additionalStylesheets (assuming it passes `options.filter`)\n   */\n\n  embedAdditionalStylesheet(document) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const styleSheetsIncluded = [];\n      const sources = yield Promise.all(_this4.options.additionalStylesheets.map(cssFile => {\n        if (styleSheetsIncluded.includes(cssFile)) {\n          return;\n        }\n        styleSheetsIncluded.push(cssFile);\n        const style = document.createElement('style');\n        style.$$external = true;\n        return _this4.getCssAsset(cssFile, style).then(sheet => [sheet, style]);\n      }));\n      sources.forEach(([sheet, style]) => {\n        if (!sheet) return;\n        style.textContent = sheet;\n        document.head.appendChild(style);\n      });\n    })();\n  }\n  /**\n   * Inline the target stylesheet referred to by a <link rel=\"stylesheet\"> (assuming it passes `options.filter`)\n   */\n\n  embedLinkedStylesheet(link, document) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const href = link.getAttribute('href');\n      const media = link.getAttribute('media');\n      const preloadMode = _this5.options.preload; // skip filtered resources, or network resources if no filter is provided\n\n      if (_this5.urlFilter ? _this5.urlFilter(href) : !(href || '').match(/\\.css$/)) {\n        return Promise.resolve();\n      } // the reduced critical CSS gets injected into a new <style> tag\n\n      const style = document.createElement('style');\n      style.$$external = true;\n      const sheet = yield _this5.getCssAsset(href, style);\n      if (!sheet) {\n        return;\n      }\n      style.textContent = sheet;\n      style.$$name = href;\n      style.$$links = [link];\n      link.parentNode.insertBefore(style, link);\n      if (_this5.checkInlineThreshold(link, style, sheet)) {\n        return;\n      } // CSS loader is only injected for the first sheet, then this becomes an empty string\n\n      let cssLoaderPreamble = \"function $loadcss(u,m,l){(l=document.createElement('link')).rel='stylesheet';l.href=u;document.head.appendChild(l)}\";\n      const lazy = preloadMode === 'js-lazy';\n      if (lazy) {\n        cssLoaderPreamble = cssLoaderPreamble.replace('l.href', \"l.media='print';l.onload=function(){l.media=m};l.href\");\n      } // Allow disabling any mutation of the stylesheet link:\n\n      if (preloadMode === false) return;\n      let noscriptFallback = false;\n      if (preloadMode === 'body') {\n        document.body.appendChild(link);\n      } else {\n        link.setAttribute('rel', 'preload');\n        link.setAttribute('as', 'style');\n        if (preloadMode === 'js' || preloadMode === 'js-lazy') {\n          const script = document.createElement('script');\n          const js = `${cssLoaderPreamble}$loadcss(${JSON.stringify(href)}${lazy ? ',' + JSON.stringify(media || 'all') : ''})`; // script.appendChild(document.createTextNode(js));\n\n          script.textContent = js;\n          link.parentNode.insertBefore(script, link.nextSibling);\n          style.$$links.push(script);\n          cssLoaderPreamble = '';\n          noscriptFallback = true;\n        } else if (preloadMode === 'media') {\n          // @see https://github.com/filamentgroup/loadCSS/blob/af1106cfe0bf70147e22185afa7ead96c01dec48/src/loadCSS.js#L26\n          link.setAttribute('rel', 'stylesheet');\n          link.removeAttribute('as');\n          link.setAttribute('media', 'print');\n          link.setAttribute('onload', `this.media='${media || 'all'}'`);\n          noscriptFallback = true;\n        } else if (preloadMode === 'swap-high') {\n          // @see http://filamentgroup.github.io/loadCSS/test/new-high.html\n          link.setAttribute('rel', 'alternate stylesheet preload');\n          link.setAttribute('title', 'styles');\n          link.setAttribute('onload', `this.title='';this.rel='stylesheet'`);\n          noscriptFallback = true;\n        } else if (preloadMode === 'swap') {\n          link.setAttribute('onload', \"this.rel='stylesheet'\");\n          noscriptFallback = true;\n        } else {\n          const bodyLink = document.createElement('link');\n          bodyLink.setAttribute('rel', 'stylesheet');\n          if (media) bodyLink.setAttribute('media', media);\n          bodyLink.setAttribute('href', href);\n          document.body.appendChild(bodyLink);\n          style.$$links.push(bodyLink);\n        }\n      }\n      if (_this5.options.noscriptFallback !== false && noscriptFallback) {\n        const noscript = document.createElement('noscript');\n        const noscriptLink = document.createElement('link');\n        noscriptLink.setAttribute('rel', 'stylesheet');\n        noscriptLink.setAttribute('href', href);\n        if (media) noscriptLink.setAttribute('media', media);\n        noscript.appendChild(noscriptLink);\n        link.parentNode.insertBefore(noscript, link.nextSibling);\n        style.$$links.push(noscript);\n      }\n    })();\n  }\n  /**\n   * Prune the source CSS files\n   */\n\n  pruneSource(style, before, sheetInverse) {\n    // if external stylesheet would be below minimum size, just inline everything\n    const minSize = this.options.minimumExternalSize;\n    const name = style.$$name;\n    if (minSize && sheetInverse.length < minSize) {\n      this.logger.info(`\\u001b[32mInlined all of ${name} (non-critical external stylesheet would have been ${sheetInverse.length}b, which was below the threshold of ${minSize})\\u001b[39m`);\n      style.textContent = before; // remove any associated external resources/loaders:\n\n      if (style.$$links) {\n        for (const link of style.$$links) {\n          const parent = link.parentNode;\n          if (parent) parent.removeChild(link);\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Parse the stylesheet within a <style> element, then reduce it to contain only rules used by the document.\n   */\n\n  processStyle(style, document) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      if (style.$$reduce === false) return;\n      const name = style.$$name ? style.$$name.replace(/^\\//, '') : 'inline CSS';\n      const options = _this6.options; // const document = style.ownerDocument;\n\n      let keyframesMode = options.keyframes || 'critical'; // we also accept a boolean value for options.keyframes\n\n      if (keyframesMode === true) keyframesMode = 'all';\n      if (keyframesMode === false) keyframesMode = 'none';\n      let sheet = style.textContent; // store a reference to the previous serialized stylesheet for reporting stats\n\n      const before = sheet; // Skip empty stylesheets\n\n      if (!sheet) return;\n      const ast = parseStylesheet(sheet);\n      const astInverse = options.pruneSource ? parseStylesheet(sheet) : null; // a string to search for font names (very loose)\n\n      let criticalFonts = '';\n      const failedSelectors = [];\n      const criticalKeyframeNames = []; // Walk all CSS rules, marking unused rules with `.$$remove=true` for removal in the second pass.\n      // This first pass is also used to collect font and keyframe usage used in the second pass.\n\n      walkStyleRules(ast, markOnly(rule => {\n        if (rule.type === 'rule') {\n          // Filter the selector list down to only those match\n          rule.filterSelectors(sel => {\n            // Strip pseudo-elements and pseudo-classes, since we only care that their associated elements exist.\n            // This means any selector for a pseudo-element or having a pseudo-class will be inlined if the rest of the selector matches.\n            if (sel === ':root' || sel.match(/^::?(before|after)$/)) {\n              return true;\n            }\n            sel = sel.replace(/(?<!\\\\)::?[a-z-]+(?![a-z-(])/gi, '').replace(/::?not\\(\\s*\\)/g, '').trim();\n            if (!sel) return false;\n            try {\n              return document.querySelector(sel) != null;\n            } catch (e) {\n              failedSelectors.push(sel + ' -> ' + e.message);\n              return false;\n            }\n          }); // If there are no matched selectors, remove the rule:\n\n          if (!rule.selector) {\n            return false;\n          }\n          if (rule.nodes) {\n            for (let i = 0; i < rule.nodes.length; i++) {\n              const decl = rule.nodes[i]; // detect used fonts\n\n              if (decl.prop && decl.prop.match(/\\bfont(-family)?\\b/i)) {\n                criticalFonts += ' ' + decl.value;\n              } // detect used keyframes\n\n              if (decl.prop === 'animation' || decl.prop === 'animation-name') {\n                // @todo: parse animation declarations and extract only the name. for now we'll do a lazy match.\n                const names = decl.value.split(/\\s+/);\n                for (let j = 0; j < names.length; j++) {\n                  const name = names[j].trim();\n                  if (name) criticalKeyframeNames.push(name);\n                }\n              }\n            }\n          }\n        } // keep font rules, they're handled in the second pass:\n\n        if (rule.type === 'atrule' && rule.name === 'font-face') return; // If there are no remaining rules, remove the whole rule:\n\n        const rules = rule.nodes && rule.nodes.filter(rule => !rule.$$remove);\n        return !rules || rules.length !== 0;\n      }));\n      if (failedSelectors.length !== 0) {\n        _this6.logger.warn(`${failedSelectors.length} rules skipped due to selector errors:\\n  ${failedSelectors.join('\\n  ')}`);\n      }\n      const shouldPreloadFonts = options.fonts === true || options.preloadFonts === true;\n      const shouldInlineFonts = options.fonts !== false && options.inlineFonts === true;\n      const preloadedFonts = []; // Second pass, using data picked up from the first\n\n      walkStyleRulesWithReverseMirror(ast, astInverse, rule => {\n        // remove any rules marked in the first pass\n        if (rule.$$remove === true) return false;\n        applyMarkedSelectors(rule); // prune @keyframes rules\n\n        if (rule.type === 'atrule' && rule.name === 'keyframes') {\n          if (keyframesMode === 'none') return false;\n          if (keyframesMode === 'all') return true;\n          return criticalKeyframeNames.indexOf(rule.params) !== -1;\n        } // prune @font-face rules\n\n        if (rule.type === 'atrule' && rule.name === 'font-face') {\n          let family, src;\n          for (let i = 0; i < rule.nodes.length; i++) {\n            const decl = rule.nodes[i];\n            if (decl.prop === 'src') {\n              // @todo parse this properly and generate multiple preloads with type=\"font/woff2\" etc\n              src = (decl.value.match(/url\\s*\\(\\s*(['\"]?)(.+?)\\1\\s*\\)/) || [])[2];\n            } else if (decl.prop === 'font-family') {\n              family = decl.value;\n            }\n          }\n          if (src && shouldPreloadFonts && preloadedFonts.indexOf(src) === -1) {\n            preloadedFonts.push(src);\n            const preload = document.createElement('link');\n            preload.setAttribute('rel', 'preload');\n            preload.setAttribute('as', 'font');\n            preload.setAttribute('crossorigin', 'anonymous');\n            preload.setAttribute('href', src.trim());\n            document.head.appendChild(preload);\n          } // if we're missing info, if the font is unused, or if critical font inlining is disabled, remove the rule:\n\n          if (!family || !src || criticalFonts.indexOf(family) === -1 || !shouldInlineFonts) {\n            return false;\n          }\n        }\n      });\n      sheet = serializeStylesheet(ast, {\n        compress: _this6.options.compress !== false\n      }); // If all rules were removed, get rid of the style element entirely\n\n      if (sheet.trim().length === 0) {\n        if (style.parentNode) {\n          style.remove();\n        }\n        return;\n      }\n      let afterText = '';\n      let styleInlinedCompletely = false;\n      if (options.pruneSource) {\n        const sheetInverse = serializeStylesheet(astInverse, {\n          compress: _this6.options.compress !== false\n        });\n        styleInlinedCompletely = _this6.pruneSource(style, before, sheetInverse);\n        if (styleInlinedCompletely) {\n          const percent = sheetInverse.length / before.length * 100;\n          afterText = `, reducing non-inlined size ${percent | 0}% to ${prettyBytes(sheetInverse.length)}`;\n        }\n      } // replace the inline stylesheet with its critical'd counterpart\n\n      if (!styleInlinedCompletely) {\n        style.textContent = sheet;\n      } // output stats\n\n      const percent = sheet.length / before.length * 100 | 0;\n      _this6.logger.info('\\u001b[32mInlined ' + prettyBytes(sheet.length) + ' (' + percent + '% of original ' + prettyBytes(before.length) + ') of ' + name + afterText + '.\\u001b[39m');\n    })();\n  }\n}\nmodule.exports = Critters;","map":{"version":3,"names":["_interopDefault","ex","path","require","fs","prettyBytes","parse5","cssSelect","treeAdapter","postcss","chalk","PARSE5_OPTS","createDocument","html","document","parse","defineProperties","DocumentExtensions","scratch","createElement","$$Node","constructor","elementProto","Object","getPrototypeOf","ElementExtensions","ownerDocument","serializeDocument","serialize","nodeName","get","tagName","toUpperCase","id","reflectedProperty","className","insertBefore","child","referenceNode","appendChild","removeChild","detachNode","remove","textContent","getText","set","text","children","insertText","setAttribute","name","value","attribs","removeAttribute","getAttribute","hasAttribute","getAttributeNode","specified","nodeType","contentType","documentElement","childNodes","filter","String","toLowerCase","compatMode","quirks","getDocumentMode","head","querySelector","body","createTextNode","Node","type","data","parent","prev","next","sel","selectOne","querySelectorAll","selectAll","obj","properties","i","defineProperty","attributeName","node","Array","isArray","map","join","isElementNode","isTextNode","parseStylesheet","stylesheet","serializeStylesheet","ast","options","cssStr","stringify","result","_node$raws","compress","prefix","prop","raws","between","replace","trim","selectors","semicolon","slice","markOnly","predicate","rule","$$remove","$$markedSelectors","_other","applyMarkedSelectors","walkStyleRules","iterator","nodes","hasNestedRules","undefined","filterSelectors","walkStyleRulesWithReverseMirror","node2","splitFilter","index","rules","rules2","rule2","length","some","n","a","b","aOut","bOut","push","LOG_LEVELS","defaultLogger","trace","msg","console","debug","warn","yellow","error","bold","red","info","blue","silent","createLogger","logLevel","logLevelIdx","indexOf","reduce","logger","Critters","assign","publicPath","reduceInlineStyles","pruneSource","additionalStylesheets","urlFilter","RegExp","test","bind","readFile","filename","fs$1","Promise","resolve","reject","callback","err","process","start","hrtime","bigint","embedAdditionalStylesheet","external","externalSheets","call","all","link","embedLinkedStylesheet","styles","getAffectedStyleTags","style","processStyle","mergeStylesheets","output","end","parseFloat","$$external","first","sheet","getCssAsset","href","outputPath","normalizedPath","pathPrefix","substring","startsWith","e","checkInlineThreshold","inlineThreshold","$$name","$$reduce","styleSheetsIncluded","sources","cssFile","includes","then","forEach","media","preloadMode","preload","match","$$links","parentNode","cssLoaderPreamble","lazy","noscriptFallback","script","js","JSON","nextSibling","bodyLink","noscript","noscriptLink","before","sheetInverse","minSize","minimumExternalSize","keyframesMode","keyframes","astInverse","criticalFonts","failedSelectors","criticalKeyframeNames","message","selector","decl","names","split","j","shouldPreloadFonts","fonts","preloadFonts","shouldInlineFonts","inlineFonts","preloadedFonts","params","family","src","afterText","styleInlinedCompletely","percent","module","exports"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/critters/dist/critters.js"],"sourcesContent":["function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar path = _interopDefault(require('path'));\nvar fs = require('fs');\nvar prettyBytes = _interopDefault(require('pretty-bytes'));\nvar parse5 = _interopDefault(require('parse5'));\nvar cssSelect = require('css-select');\nvar treeAdapter = _interopDefault(require('parse5-htmlparser2-tree-adapter'));\nvar postcss = require('postcss');\nvar chalk = _interopDefault(require('chalk'));\n\n/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nconst PARSE5_OPTS = {\n  treeAdapter\n};\n/**\n * Parse HTML into a mutable, serializable DOM Document.\n * The DOM implementation is an htmlparser2 DOM enhanced with basic DOM mutation methods.\n * @param {String} html   HTML to parse into a Document instance\n */\n\nfunction createDocument(html) {\n  const document =\n  /** @type {HTMLDocument} */\n  parse5.parse(html, PARSE5_OPTS);\n  defineProperties(document, DocumentExtensions); // Extend Element.prototype with DOM manipulation methods.\n\n  const scratch = document.createElement('div'); // Get a reference to the base Node class - used by createTextNode()\n\n  document.$$Node = scratch.constructor;\n  const elementProto = Object.getPrototypeOf(scratch);\n  defineProperties(elementProto, ElementExtensions);\n  elementProto.ownerDocument = document;\n  return document;\n}\n/**\n * Serialize a Document to an HTML String\n * @param {HTMLDocument} document   A Document, such as one created via `createDocument()`\n */\n\nfunction serializeDocument(document) {\n  return parse5.serialize(document, PARSE5_OPTS);\n}\n/** @typedef {treeAdapter.Document & typeof ElementExtensions} HTMLDocument */\n\n/**\n * Methods and descriptors to mix into Element.prototype\n * @private\n */\n\nconst ElementExtensions = {\n  /** @extends treeAdapter.Element.prototype */\n  nodeName: {\n    get() {\n      return this.tagName.toUpperCase();\n    }\n\n  },\n  id: reflectedProperty('id'),\n  className: reflectedProperty('class'),\n\n  insertBefore(child, referenceNode) {\n    if (!referenceNode) return this.appendChild(child);\n    treeAdapter.insertBefore(this, child, referenceNode);\n    return child;\n  },\n\n  appendChild(child) {\n    treeAdapter.appendChild(this, child);\n    return child;\n  },\n\n  removeChild(child) {\n    treeAdapter.detachNode(child);\n  },\n\n  remove() {\n    treeAdapter.detachNode(this);\n  },\n\n  textContent: {\n    get() {\n      return getText(this);\n    },\n\n    set(text) {\n      this.children = [];\n      treeAdapter.insertText(this, text);\n    }\n\n  },\n\n  setAttribute(name, value) {\n    if (this.attribs == null) this.attribs = {};\n    if (value == null) value = '';\n    this.attribs[name] = value;\n  },\n\n  removeAttribute(name) {\n    if (this.attribs != null) {\n      delete this.attribs[name];\n    }\n  },\n\n  getAttribute(name) {\n    return this.attribs != null && this.attribs[name];\n  },\n\n  hasAttribute(name) {\n    return this.attribs != null && this.attribs[name] != null;\n  },\n\n  getAttributeNode(name) {\n    const value = this.getAttribute(name);\n    if (value != null) return {\n      specified: true,\n      value\n    };\n  }\n\n};\n/**\n * Methods and descriptors to mix into the global document instance\n * @private\n */\n\nconst DocumentExtensions = {\n  /** @extends treeAdapter.Document.prototype */\n  // document is just an Element in htmlparser2, giving it a nodeType of ELEMENT_NODE.\n  // TODO: verify if these are needed for css-select\n  nodeType: {\n    get() {\n      return 9;\n    }\n\n  },\n  contentType: {\n    get() {\n      return 'text/html';\n    }\n\n  },\n  nodeName: {\n    get() {\n      return '#document';\n    }\n\n  },\n  documentElement: {\n    get() {\n      // Find the first <html> element within the document\n      return this.childNodes.filter(child => String(child.tagName).toLowerCase() === 'html');\n    }\n\n  },\n  compatMode: {\n    get() {\n      const compatMode = {\n        'no-quirks': 'CSS1Compat',\n        quirks: 'BackCompat',\n        'limited-quirks': 'CSS1Compat'\n      };\n      return compatMode[treeAdapter.getDocumentMode(this)];\n    }\n\n  },\n  head: {\n    get() {\n      return this.querySelector('head');\n    }\n\n  },\n  body: {\n    get() {\n      return this.querySelector('body');\n    }\n\n  },\n\n  createElement(name) {\n    return treeAdapter.createElement(name, null, []);\n  },\n\n  createTextNode(text) {\n    // there is no dedicated createTextNode equivalent exposed in htmlparser2's DOM\n    const Node = this.$$Node;\n    return new Node({\n      type: 'text',\n      data: text,\n      parent: null,\n      prev: null,\n      next: null\n    });\n  },\n\n  querySelector(sel) {\n    return cssSelect.selectOne(sel, this.documentElement);\n  },\n\n  querySelectorAll(sel) {\n    if (sel === ':root') {\n      return this;\n    }\n\n    return cssSelect.selectAll(sel, this.documentElement);\n  }\n\n};\n/**\n * Essentially `Object.defineProperties()`, except function values are assigned as value descriptors for convenience.\n * @private\n */\n\nfunction defineProperties(obj, properties) {\n  for (const i in properties) {\n    const value = properties[i];\n    Object.defineProperty(obj, i, typeof value === 'function' ? {\n      value\n    } : value);\n  }\n}\n/**\n * Create a property descriptor defining a getter/setter pair alias for a named attribute.\n * @private\n */\n\n\nfunction reflectedProperty(attributeName) {\n  return {\n    get() {\n      return this.getAttribute(attributeName);\n    },\n\n    set(value) {\n      this.setAttribute(attributeName, value);\n    }\n\n  };\n}\n/**\n * Helper to get the text content of a node\n * https://github.com/fb55/domutils/blob/master/src/stringify.ts#L21\n * @private\n */\n\n\nfunction getText(node) {\n  if (Array.isArray(node)) return node.map(getText).join('');\n  if (treeAdapter.isElementNode(node)) return node.name === 'br' ? '\\n' : getText(node.children);\n  if (treeAdapter.isTextNode(node)) return node.data;\n  return '';\n}\n\n/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n/**\n * Parse a textual CSS Stylesheet into a Stylesheet instance.\n * Stylesheet is a mutable postcss AST with format similar to CSSOM.\n * @see https://github.com/postcss/postcss/\n * @private\n * @param {String} stylesheet\n * @returns {css.Stylesheet} ast\n */\n\nfunction parseStylesheet(stylesheet) {\n  return postcss.parse(stylesheet);\n}\n/**\n * Serialize a postcss Stylesheet to a String of CSS.\n * @private\n * @param {css.Stylesheet} ast          A Stylesheet to serialize, such as one returned from `parseStylesheet()`\n * @param {Object} options              Options used by the stringify logic\n * @param {Boolean} [options.compress]  Compress CSS output (removes comments, whitespace, etc)\n */\n\nfunction serializeStylesheet(ast, options) {\n  let cssStr = '';\n  postcss.stringify(ast, (result, node, type) => {\n    var _node$raws;\n\n    if (!options.compress) {\n      cssStr += result;\n      return;\n    } // Simple minification logic\n\n\n    if ((node == null ? void 0 : node.type) === 'comment') return;\n\n    if ((node == null ? void 0 : node.type) === 'decl') {\n      const prefix = node.prop + node.raws.between;\n      cssStr += result.replace(prefix, prefix.trim());\n      return;\n    }\n\n    if (type === 'start') {\n      if (node.type === 'rule' && node.selectors) {\n        cssStr += node.selectors.join(',') + '{';\n      } else {\n        cssStr += result.replace(/\\s\\{$/, '{');\n      }\n\n      return;\n    }\n\n    if (type === 'end' && result === '}' && node != null && (_node$raws = node.raws) != null && _node$raws.semicolon) {\n      cssStr = cssStr.slice(0, -1);\n    }\n\n    cssStr += result.trim();\n  });\n  return cssStr;\n}\n/**\n * Converts a walkStyleRules() iterator to mark nodes with `.$$remove=true` instead of actually removing them.\n * This means they can be removed in a second pass, allowing the first pass to be nondestructive (eg: to preserve mirrored sheets).\n * @private\n * @param {Function} iterator   Invoked on each node in the tree. Return `false` to remove that node.\n * @returns {(rule) => void} nonDestructiveIterator\n */\n\nfunction markOnly(predicate) {\n  return rule => {\n    const sel = rule.selectors;\n\n    if (predicate(rule) === false) {\n      rule.$$remove = true;\n    }\n\n    rule.$$markedSelectors = rule.selectors;\n\n    if (rule._other) {\n      rule._other.$$markedSelectors = rule._other.selectors;\n    }\n\n    rule.selectors = sel;\n  };\n}\n/**\n * Apply filtered selectors to a rule from a previous markOnly run.\n * @private\n * @param {css.Rule} rule The Rule to apply marked selectors to (if they exist).\n */\n\nfunction applyMarkedSelectors(rule) {\n  if (rule.$$markedSelectors) {\n    rule.selectors = rule.$$markedSelectors;\n  }\n\n  if (rule._other) {\n    applyMarkedSelectors(rule._other);\n  }\n}\n/**\n * Recursively walk all rules in a stylesheet.\n * @private\n * @param {css.Rule} node       A Stylesheet or Rule to descend into.\n * @param {Function} iterator   Invoked on each node in the tree. Return `false` to remove that node.\n */\n\nfunction walkStyleRules(node, iterator) {\n  node.nodes = node.nodes.filter(rule => {\n    if (hasNestedRules(rule)) {\n      walkStyleRules(rule, iterator);\n    }\n\n    rule._other = undefined;\n    rule.filterSelectors = filterSelectors;\n    return iterator(rule) !== false;\n  });\n}\n/**\n * Recursively walk all rules in two identical stylesheets, filtering nodes into one or the other based on a predicate.\n * @private\n * @param {css.Rule} node       A Stylesheet or Rule to descend into.\n * @param {css.Rule} node2      A second tree identical to `node`\n * @param {Function} iterator   Invoked on each node in the tree. Return `false` to remove that node from the first tree, true to remove it from the second.\n */\n\nfunction walkStyleRulesWithReverseMirror(node, node2, iterator) {\n  if (node2 === null) return walkStyleRules(node, iterator);\n  [node.nodes, node2.nodes] = splitFilter(node.nodes, node2.nodes, (rule, index, rules, rules2) => {\n    const rule2 = rules2[index];\n\n    if (hasNestedRules(rule)) {\n      walkStyleRulesWithReverseMirror(rule, rule2, iterator);\n    }\n\n    rule._other = rule2;\n    rule.filterSelectors = filterSelectors;\n    return iterator(rule) !== false;\n  });\n} // Checks if a node has nested rules, like @media\n// @keyframes are an exception since they are evaluated as a whole\n\nfunction hasNestedRules(rule) {\n  return rule.nodes && rule.nodes.length && rule.nodes.some(n => n.type === 'rule' || n.type === 'atrule') && rule.name !== 'keyframes' && rule.name !== '-webkit-keyframes';\n} // Like [].filter(), but applies the opposite filtering result to a second copy of the Array without a second pass.\n// This is just a quicker version of generating the compliment of the set returned from a filter operation.\n\n\nfunction splitFilter(a, b, predicate) {\n  const aOut = [];\n  const bOut = [];\n\n  for (let index = 0; index < a.length; index++) {\n    if (predicate(a[index], index, a, b)) {\n      aOut.push(a[index]);\n    } else {\n      bOut.push(a[index]);\n    }\n  }\n\n  return [aOut, bOut];\n} // can be invoked on a style rule to subset its selectors (with reverse mirroring)\n\n\nfunction filterSelectors(predicate) {\n  if (this._other) {\n    const [a, b] = splitFilter(this.selectors, this._other.selectors, predicate);\n    this.selectors = a;\n    this._other.selectors = b;\n  } else {\n    this.selectors = this.selectors.filter(predicate);\n  }\n}\n\nconst LOG_LEVELS = ['trace', 'debug', 'info', 'warn', 'error', 'silent'];\nconst defaultLogger = {\n  trace(msg) {\n    console.trace(msg);\n  },\n\n  debug(msg) {\n    console.debug(msg);\n  },\n\n  warn(msg) {\n    console.warn(chalk.yellow(msg));\n  },\n\n  error(msg) {\n    console.error(chalk.bold.red(msg));\n  },\n\n  info(msg) {\n    console.info(chalk.bold.blue(msg));\n  },\n\n  silent() {}\n\n};\nfunction createLogger(logLevel) {\n  const logLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  return LOG_LEVELS.reduce((logger, type, index) => {\n    if (index >= logLevelIdx) {\n      logger[type] = defaultLogger[type];\n    } else {\n      logger[type] = defaultLogger.silent;\n    }\n\n    return logger;\n  }, {});\n}\n\n/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n/**\n * The mechanism to use for lazy-loading stylesheets.\n *\n * Note: <kbd>JS</kbd> indicates a strategy requiring JavaScript (falls back to `<noscript>` unless disabled).\n *\n * - **default:** Move stylesheet links to the end of the document and insert preload meta tags in their place.\n * - **\"body\":** Move all external stylesheet links to the end of the document.\n * - **\"media\":** Load stylesheets asynchronously by adding `media=\"not x\"` and removing once loaded. <kbd>JS</kbd>\n * - **\"swap\":** Convert stylesheet links to preloads that swap to `rel=\"stylesheet\"` once loaded ([details](https://www.filamentgroup.com/lab/load-css-simpler/#the-code)). <kbd>JS</kbd>\n * - **\"swap-high\":** Use `<link rel=\"alternate stylesheet preload\">` and swap to `rel=\"stylesheet\"` once loaded ([details](http://filamentgroup.github.io/loadCSS/test/new-high.html)). <kbd>JS</kbd>\n * - **\"js\":** Inject an asynchronous CSS loader similar to [LoadCSS](https://github.com/filamentgroup/loadCSS) and use it to load stylesheets. <kbd>JS</kbd>\n * - **\"js-lazy\":** Like `\"js\"`, but the stylesheet is disabled until fully loaded.\n * - **false:** Disables adding preload tags.\n * @typedef {(default|'body'|'media'|'swap'|'swap-high'|'js'|'js-lazy')} PreloadStrategy\n * @public\n */\n\n/**\n * Controls which keyframes rules are inlined.\n *\n * - **\"critical\":** _(default)_ inline keyframes rules that are used by the critical CSS.\n * - **\"all\":** Inline all keyframes rules.\n * - **\"none\":** Remove all keyframes rules.\n * @typedef {('critical'|'all'|'none')} KeyframeStrategy\n * @private\n * @property {String} keyframes     Which {@link KeyframeStrategy keyframe strategy} to use (default: `critical`)_\n */\n\n/**\n * Controls log level of the plugin. Specifies the level the logger should use. A logger will\n * not produce output for any log level beneath the specified level. Available levels and order\n * are:\n *\n * - **\"info\"** _(default)_\n * - **\"warn\"**\n * - **\"error\"**\n * - **\"trace\"**\n * - **\"debug\"**\n * - **\"silent\"**\n * @typedef {('info'|'warn'|'error'|'trace'|'debug'|'silent')} LogLevel\n * @public\n */\n\n/**\n * Custom logger interface:\n * @typedef {object} Logger\n * @public\n * @property {function(String)} trace - Prints a trace message\n * @property {function(String)} debug - Prints a debug message\n * @property {function(String)} info - Prints an information message\n * @property {function(String)} warn - Prints a warning message\n * @property {function(String)} error - Prints an error message\n */\n\n/**\n * All optional. Pass them to `new Critters({ ... })`.\n * @public\n * @typedef Options\n * @property {String} path     Base path location of the CSS files _(default: `''`)_\n * @property {String} publicPath     Public path of the CSS resources. This prefix is removed from the href _(default: `''`)_\n * @property {Boolean} external     Inline styles from external stylesheets _(default: `true`)_\n * @property {Number} inlineThreshold Inline external stylesheets smaller than a given size _(default: `0`)_\n * @property {Number} minimumExternalSize If the non-critical external stylesheet would be below this size, just inline it _(default: `0`)_\n * @property {Boolean} pruneSource  Remove inlined rules from the external stylesheet _(default: `false`)_\n * @property {Boolean} mergeStylesheets Merged inlined stylesheets into a single `<style>` tag _(default: `true`)_\n * @property {String[]} additionalStylesheets Glob for matching other stylesheets to be used while looking for critical CSS.\n * @property {String} preload       Which {@link PreloadStrategy preload strategy} to use\n * @property {Boolean} noscriptFallback Add `<noscript>` fallback to JS-based strategies\n * @property {Boolean} inlineFonts  Inline critical font-face rules _(default: `false`)_\n * @property {Boolean} preloadFonts Preloads critical fonts _(default: `true`)_\n * @property {Boolean} fonts        Shorthand for setting `inlineFonts` + `preloadFonts`\n *  - Values:\n *  - `true` to inline critical font-face rules and preload the fonts\n *  - `false` to don't inline any font-face rules and don't preload fonts\n * @property {String} keyframes     Controls which keyframes rules are inlined.\n *  - Values:\n *  - `\"critical\"`: _(default)_ inline keyframes rules used by the critical CSS\n *  - `\"all\"` inline all keyframes rules\n *  - `\"none\"` remove all keyframes rules\n * @property {Boolean} compress     Compress resulting critical CSS _(default: `true`)_\n * @property {String} logLevel      Controls {@link LogLevel log level} of the plugin _(default: `\"info\"`)_\n * @property {object} logger        Provide a custom logger interface {@link Logger logger}\n */\n\nclass Critters {\n  /** @private */\n  constructor(options) {\n    this.options = Object.assign({\n      logLevel: 'info',\n      path: '',\n      publicPath: '',\n      reduceInlineStyles: true,\n      pruneSource: false,\n      additionalStylesheets: []\n    }, options || {});\n    this.urlFilter = this.options.filter;\n\n    if (this.urlFilter instanceof RegExp) {\n      this.urlFilter = this.urlFilter.test.bind(this.urlFilter);\n    }\n\n    this.logger = this.options.logger || createLogger(this.options.logLevel);\n  }\n  /**\n   * Read the contents of a file from the specified filesystem or disk\n   */\n\n\n  readFile(filename) {\n    const fs$1 = this.fs;\n    return new Promise((resolve, reject) => {\n      const callback = (err, data) => {\n        if (err) reject(err);else resolve(data);\n      };\n\n      if (fs$1 && fs$1.readFile) {\n        fs$1.readFile(filename, callback);\n      } else {\n        fs.readFile(filename, 'utf8', callback);\n      }\n    });\n  }\n  /**\n   * Apply critical CSS processing to the html\n   */\n\n\n  async process(html) {\n    const start = process.hrtime.bigint(); // Parse the generated HTML in a DOM we can mutate\n\n    const document = createDocument(html);\n\n    if (this.options.additionalStylesheets.length > 0) {\n      this.embedAdditionalStylesheet(document);\n    } // `external:false` skips processing of external sheets\n\n\n    if (this.options.external !== false) {\n      const externalSheets = [].slice.call(document.querySelectorAll('link[rel=\"stylesheet\"]'));\n      await Promise.all(externalSheets.map(link => this.embedLinkedStylesheet(link, document)));\n    } // go through all the style tags in the document and reduce them to only critical CSS\n\n\n    const styles = this.getAffectedStyleTags(document);\n    await Promise.all(styles.map(style => this.processStyle(style, document)));\n\n    if (this.options.mergeStylesheets !== false && styles.length !== 0) {\n      await this.mergeStylesheets(document);\n    } // serialize the document back to HTML and we're done\n\n\n    const output = serializeDocument(document);\n    const end = process.hrtime.bigint();\n    this.logger.info('Time ' + parseFloat(end - start) / 1000000.0);\n    return output;\n  }\n  /**\n   * Get the style tags that need processing\n   */\n\n\n  getAffectedStyleTags(document) {\n    const styles = [].slice.call(document.querySelectorAll('style')); // `inline:false` skips processing of inline stylesheets\n\n    if (this.options.reduceInlineStyles === false) {\n      return styles.filter(style => style.$$external);\n    }\n\n    return styles;\n  }\n\n  async mergeStylesheets(document) {\n    const styles = this.getAffectedStyleTags(document);\n\n    if (styles.length === 0) {\n      this.logger.warn('Merging inline stylesheets into a single <style> tag skipped, no inline stylesheets to merge');\n      return;\n    }\n\n    const first = styles[0];\n    let sheet = first.textContent;\n\n    for (let i = 1; i < styles.length; i++) {\n      const node = styles[i];\n      sheet += node.textContent;\n      node.remove();\n    }\n\n    first.textContent = sheet;\n  }\n  /**\n   * Given href, find the corresponding CSS asset\n   */\n\n\n  async getCssAsset(href) {\n    const outputPath = this.options.path;\n    const publicPath = this.options.publicPath; // CHECK - the output path\n    // path on disk (with output.publicPath removed)\n\n    let normalizedPath = href.replace(/^\\//, '');\n    const pathPrefix = (publicPath || '').replace(/(^\\/|\\/$)/g, '') + '/';\n\n    if (normalizedPath.indexOf(pathPrefix) === 0) {\n      normalizedPath = normalizedPath.substring(pathPrefix.length).replace(/^\\//, '');\n    } // Ignore remote stylesheets\n\n\n    if (/^https?:\\/\\//.test(normalizedPath) || href.startsWith('//')) {\n      return undefined;\n    }\n\n    const filename = path.resolve(outputPath, normalizedPath);\n    let sheet;\n\n    try {\n      sheet = await this.readFile(filename);\n    } catch (e) {\n      this.logger.warn(`Unable to locate stylesheet: ${filename}`);\n    }\n\n    return sheet;\n  }\n\n  checkInlineThreshold(link, style, sheet) {\n    if (this.options.inlineThreshold && sheet.length < this.options.inlineThreshold) {\n      const href = style.$$name;\n      style.$$reduce = false;\n      this.logger.info(`\\u001b[32mInlined all of ${href} (${sheet.length} was below the threshold of ${this.options.inlineThreshold})\\u001b[39m`);\n      link.remove();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Inline the stylesheets from options.additionalStylesheets (assuming it passes `options.filter`)\n   */\n\n\n  async embedAdditionalStylesheet(document) {\n    const styleSheetsIncluded = [];\n    const sources = await Promise.all(this.options.additionalStylesheets.map(cssFile => {\n      if (styleSheetsIncluded.includes(cssFile)) {\n        return;\n      }\n\n      styleSheetsIncluded.push(cssFile);\n      const style = document.createElement('style');\n      style.$$external = true;\n      return this.getCssAsset(cssFile, style).then(sheet => [sheet, style]);\n    }));\n    sources.forEach(([sheet, style]) => {\n      if (!sheet) return;\n      style.textContent = sheet;\n      document.head.appendChild(style);\n    });\n  }\n  /**\n   * Inline the target stylesheet referred to by a <link rel=\"stylesheet\"> (assuming it passes `options.filter`)\n   */\n\n\n  async embedLinkedStylesheet(link, document) {\n    const href = link.getAttribute('href');\n    const media = link.getAttribute('media');\n    const preloadMode = this.options.preload; // skip filtered resources, or network resources if no filter is provided\n\n    if (this.urlFilter ? this.urlFilter(href) : !(href || '').match(/\\.css$/)) {\n      return Promise.resolve();\n    } // the reduced critical CSS gets injected into a new <style> tag\n\n\n    const style = document.createElement('style');\n    style.$$external = true;\n    const sheet = await this.getCssAsset(href, style);\n\n    if (!sheet) {\n      return;\n    }\n\n    style.textContent = sheet;\n    style.$$name = href;\n    style.$$links = [link];\n    link.parentNode.insertBefore(style, link);\n\n    if (this.checkInlineThreshold(link, style, sheet)) {\n      return;\n    } // CSS loader is only injected for the first sheet, then this becomes an empty string\n\n\n    let cssLoaderPreamble = \"function $loadcss(u,m,l){(l=document.createElement('link')).rel='stylesheet';l.href=u;document.head.appendChild(l)}\";\n    const lazy = preloadMode === 'js-lazy';\n\n    if (lazy) {\n      cssLoaderPreamble = cssLoaderPreamble.replace('l.href', \"l.media='print';l.onload=function(){l.media=m};l.href\");\n    } // Allow disabling any mutation of the stylesheet link:\n\n\n    if (preloadMode === false) return;\n    let noscriptFallback = false;\n\n    if (preloadMode === 'body') {\n      document.body.appendChild(link);\n    } else {\n      link.setAttribute('rel', 'preload');\n      link.setAttribute('as', 'style');\n\n      if (preloadMode === 'js' || preloadMode === 'js-lazy') {\n        const script = document.createElement('script');\n        const js = `${cssLoaderPreamble}$loadcss(${JSON.stringify(href)}${lazy ? ',' + JSON.stringify(media || 'all') : ''})`; // script.appendChild(document.createTextNode(js));\n\n        script.textContent = js;\n        link.parentNode.insertBefore(script, link.nextSibling);\n        style.$$links.push(script);\n        cssLoaderPreamble = '';\n        noscriptFallback = true;\n      } else if (preloadMode === 'media') {\n        // @see https://github.com/filamentgroup/loadCSS/blob/af1106cfe0bf70147e22185afa7ead96c01dec48/src/loadCSS.js#L26\n        link.setAttribute('rel', 'stylesheet');\n        link.removeAttribute('as');\n        link.setAttribute('media', 'print');\n        link.setAttribute('onload', `this.media='${media || 'all'}'`);\n        noscriptFallback = true;\n      } else if (preloadMode === 'swap-high') {\n        // @see http://filamentgroup.github.io/loadCSS/test/new-high.html\n        link.setAttribute('rel', 'alternate stylesheet preload');\n        link.setAttribute('title', 'styles');\n        link.setAttribute('onload', `this.title='';this.rel='stylesheet'`);\n        noscriptFallback = true;\n      } else if (preloadMode === 'swap') {\n        link.setAttribute('onload', \"this.rel='stylesheet'\");\n        noscriptFallback = true;\n      } else {\n        const bodyLink = document.createElement('link');\n        bodyLink.setAttribute('rel', 'stylesheet');\n        if (media) bodyLink.setAttribute('media', media);\n        bodyLink.setAttribute('href', href);\n        document.body.appendChild(bodyLink);\n        style.$$links.push(bodyLink);\n      }\n    }\n\n    if (this.options.noscriptFallback !== false && noscriptFallback) {\n      const noscript = document.createElement('noscript');\n      const noscriptLink = document.createElement('link');\n      noscriptLink.setAttribute('rel', 'stylesheet');\n      noscriptLink.setAttribute('href', href);\n      if (media) noscriptLink.setAttribute('media', media);\n      noscript.appendChild(noscriptLink);\n      link.parentNode.insertBefore(noscript, link.nextSibling);\n      style.$$links.push(noscript);\n    }\n  }\n  /**\n   * Prune the source CSS files\n   */\n\n\n  pruneSource(style, before, sheetInverse) {\n    // if external stylesheet would be below minimum size, just inline everything\n    const minSize = this.options.minimumExternalSize;\n    const name = style.$$name;\n\n    if (minSize && sheetInverse.length < minSize) {\n      this.logger.info(`\\u001b[32mInlined all of ${name} (non-critical external stylesheet would have been ${sheetInverse.length}b, which was below the threshold of ${minSize})\\u001b[39m`);\n      style.textContent = before; // remove any associated external resources/loaders:\n\n      if (style.$$links) {\n        for (const link of style.$$links) {\n          const parent = link.parentNode;\n          if (parent) parent.removeChild(link);\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Parse the stylesheet within a <style> element, then reduce it to contain only rules used by the document.\n   */\n\n\n  async processStyle(style, document) {\n    if (style.$$reduce === false) return;\n    const name = style.$$name ? style.$$name.replace(/^\\//, '') : 'inline CSS';\n    const options = this.options; // const document = style.ownerDocument;\n\n    let keyframesMode = options.keyframes || 'critical'; // we also accept a boolean value for options.keyframes\n\n    if (keyframesMode === true) keyframesMode = 'all';\n    if (keyframesMode === false) keyframesMode = 'none';\n    let sheet = style.textContent; // store a reference to the previous serialized stylesheet for reporting stats\n\n    const before = sheet; // Skip empty stylesheets\n\n    if (!sheet) return;\n    const ast = parseStylesheet(sheet);\n    const astInverse = options.pruneSource ? parseStylesheet(sheet) : null; // a string to search for font names (very loose)\n\n    let criticalFonts = '';\n    const failedSelectors = [];\n    const criticalKeyframeNames = []; // Walk all CSS rules, marking unused rules with `.$$remove=true` for removal in the second pass.\n    // This first pass is also used to collect font and keyframe usage used in the second pass.\n\n    walkStyleRules(ast, markOnly(rule => {\n      if (rule.type === 'rule') {\n        // Filter the selector list down to only those match\n        rule.filterSelectors(sel => {\n          // Strip pseudo-elements and pseudo-classes, since we only care that their associated elements exist.\n          // This means any selector for a pseudo-element or having a pseudo-class will be inlined if the rest of the selector matches.\n          if (sel === ':root' || sel.match(/^::?(before|after)$/)) {\n            return true;\n          }\n\n          sel = sel.replace(/(?<!\\\\)::?[a-z-]+(?![a-z-(])/gi, '').replace(/::?not\\(\\s*\\)/g, '').trim();\n          if (!sel) return false;\n\n          try {\n            return document.querySelector(sel) != null;\n          } catch (e) {\n            failedSelectors.push(sel + ' -> ' + e.message);\n            return false;\n          }\n        }); // If there are no matched selectors, remove the rule:\n\n        if (!rule.selector) {\n          return false;\n        }\n\n        if (rule.nodes) {\n          for (let i = 0; i < rule.nodes.length; i++) {\n            const decl = rule.nodes[i]; // detect used fonts\n\n            if (decl.prop && decl.prop.match(/\\bfont(-family)?\\b/i)) {\n              criticalFonts += ' ' + decl.value;\n            } // detect used keyframes\n\n\n            if (decl.prop === 'animation' || decl.prop === 'animation-name') {\n              // @todo: parse animation declarations and extract only the name. for now we'll do a lazy match.\n              const names = decl.value.split(/\\s+/);\n\n              for (let j = 0; j < names.length; j++) {\n                const name = names[j].trim();\n                if (name) criticalKeyframeNames.push(name);\n              }\n            }\n          }\n        }\n      } // keep font rules, they're handled in the second pass:\n\n\n      if (rule.type === 'atrule' && rule.name === 'font-face') return; // If there are no remaining rules, remove the whole rule:\n\n      const rules = rule.nodes && rule.nodes.filter(rule => !rule.$$remove);\n      return !rules || rules.length !== 0;\n    }));\n\n    if (failedSelectors.length !== 0) {\n      this.logger.warn(`${failedSelectors.length} rules skipped due to selector errors:\\n  ${failedSelectors.join('\\n  ')}`);\n    }\n\n    const shouldPreloadFonts = options.fonts === true || options.preloadFonts === true;\n    const shouldInlineFonts = options.fonts !== false && options.inlineFonts === true;\n    const preloadedFonts = []; // Second pass, using data picked up from the first\n\n    walkStyleRulesWithReverseMirror(ast, astInverse, rule => {\n      // remove any rules marked in the first pass\n      if (rule.$$remove === true) return false;\n      applyMarkedSelectors(rule); // prune @keyframes rules\n\n      if (rule.type === 'atrule' && rule.name === 'keyframes') {\n        if (keyframesMode === 'none') return false;\n        if (keyframesMode === 'all') return true;\n        return criticalKeyframeNames.indexOf(rule.params) !== -1;\n      } // prune @font-face rules\n\n\n      if (rule.type === 'atrule' && rule.name === 'font-face') {\n        let family, src;\n\n        for (let i = 0; i < rule.nodes.length; i++) {\n          const decl = rule.nodes[i];\n\n          if (decl.prop === 'src') {\n            // @todo parse this properly and generate multiple preloads with type=\"font/woff2\" etc\n            src = (decl.value.match(/url\\s*\\(\\s*(['\"]?)(.+?)\\1\\s*\\)/) || [])[2];\n          } else if (decl.prop === 'font-family') {\n            family = decl.value;\n          }\n        }\n\n        if (src && shouldPreloadFonts && preloadedFonts.indexOf(src) === -1) {\n          preloadedFonts.push(src);\n          const preload = document.createElement('link');\n          preload.setAttribute('rel', 'preload');\n          preload.setAttribute('as', 'font');\n          preload.setAttribute('crossorigin', 'anonymous');\n          preload.setAttribute('href', src.trim());\n          document.head.appendChild(preload);\n        } // if we're missing info, if the font is unused, or if critical font inlining is disabled, remove the rule:\n\n\n        if (!family || !src || criticalFonts.indexOf(family) === -1 || !shouldInlineFonts) {\n          return false;\n        }\n      }\n    });\n    sheet = serializeStylesheet(ast, {\n      compress: this.options.compress !== false\n    }); // If all rules were removed, get rid of the style element entirely\n\n    if (sheet.trim().length === 0) {\n      if (style.parentNode) {\n        style.remove();\n      }\n\n      return;\n    }\n\n    let afterText = '';\n    let styleInlinedCompletely = false;\n\n    if (options.pruneSource) {\n      const sheetInverse = serializeStylesheet(astInverse, {\n        compress: this.options.compress !== false\n      });\n      styleInlinedCompletely = this.pruneSource(style, before, sheetInverse);\n\n      if (styleInlinedCompletely) {\n        const percent = sheetInverse.length / before.length * 100;\n        afterText = `, reducing non-inlined size ${percent | 0}% to ${prettyBytes(sheetInverse.length)}`;\n      }\n    } // replace the inline stylesheet with its critical'd counterpart\n\n\n    if (!styleInlinedCompletely) {\n      style.textContent = sheet;\n    } // output stats\n\n\n    const percent = sheet.length / before.length * 100 | 0;\n    this.logger.info('\\u001b[32mInlined ' + prettyBytes(sheet.length) + ' (' + percent + '% of original ' + prettyBytes(before.length) + ') of ' + name + afterText + '.\\u001b[39m');\n  }\n\n}\n\nmodule.exports = Critters;\n"],"mappings":";AAAA,SAASA,eAAe,CAAEC,EAAE,EAAE;EAAE,OAAQA,EAAE,IAAK,OAAOA,EAAE,KAAK,QAAS,IAAI,SAAS,IAAIA,EAAE,GAAIA,EAAE,CAAC,SAAS,CAAC,GAAGA,EAAE;AAAE;AAEjH,IAAIC,IAAI,GAAGF,eAAe,CAACG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3C,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC;AACtB,IAAIE,WAAW,GAAGL,eAAe,CAACG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC1D,IAAIG,MAAM,GAAGN,eAAe,CAACG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/C,IAAII,SAAS,GAAGJ,OAAO,CAAC,YAAY,CAAC;AACrC,IAAIK,WAAW,GAAGR,eAAe,CAACG,OAAO,CAAC,iCAAiC,CAAC,CAAC;AAC7E,IAAIM,OAAO,GAAGN,OAAO,CAAC,SAAS,CAAC;AAChC,IAAIO,KAAK,GAAGV,eAAe,CAACG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMQ,WAAW,GAAG;EAClBH;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA,SAASI,cAAc,CAACC,IAAI,EAAE;EAC5B,MAAMC,QAAQ,GACd;EACAR,MAAM,CAACS,KAAK,CAACF,IAAI,EAAEF,WAAW,CAAC;EAC/BK,gBAAgB,CAACF,QAAQ,EAAEG,kBAAkB,CAAC,CAAC,CAAC;;EAEhD,MAAMC,OAAO,GAAGJ,QAAQ,CAACK,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/CL,QAAQ,CAACM,MAAM,GAAGF,OAAO,CAACG,WAAW;EACrC,MAAMC,YAAY,GAAGC,MAAM,CAACC,cAAc,CAACN,OAAO,CAAC;EACnDF,gBAAgB,CAACM,YAAY,EAAEG,iBAAiB,CAAC;EACjDH,YAAY,CAACI,aAAa,GAAGZ,QAAQ;EACrC,OAAOA,QAAQ;AACjB;AACA;AACA;AACA;AACA;;AAEA,SAASa,iBAAiB,CAACb,QAAQ,EAAE;EACnC,OAAOR,MAAM,CAACsB,SAAS,CAACd,QAAQ,EAAEH,WAAW,CAAC;AAChD;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAMc,iBAAiB,GAAG;EACxB;EACAI,QAAQ,EAAE;IACRC,GAAG,GAAG;MACJ,OAAO,IAAI,CAACC,OAAO,CAACC,WAAW,EAAE;IACnC;EAEF,CAAC;EACDC,EAAE,EAAEC,iBAAiB,CAAC,IAAI,CAAC;EAC3BC,SAAS,EAAED,iBAAiB,CAAC,OAAO,CAAC;EAErCE,YAAY,CAACC,KAAK,EAAEC,aAAa,EAAE;IACjC,IAAI,CAACA,aAAa,EAAE,OAAO,IAAI,CAACC,WAAW,CAACF,KAAK,CAAC;IAClD7B,WAAW,CAAC4B,YAAY,CAAC,IAAI,EAAEC,KAAK,EAAEC,aAAa,CAAC;IACpD,OAAOD,KAAK;EACd,CAAC;EAEDE,WAAW,CAACF,KAAK,EAAE;IACjB7B,WAAW,CAAC+B,WAAW,CAAC,IAAI,EAAEF,KAAK,CAAC;IACpC,OAAOA,KAAK;EACd,CAAC;EAEDG,WAAW,CAACH,KAAK,EAAE;IACjB7B,WAAW,CAACiC,UAAU,CAACJ,KAAK,CAAC;EAC/B,CAAC;EAEDK,MAAM,GAAG;IACPlC,WAAW,CAACiC,UAAU,CAAC,IAAI,CAAC;EAC9B,CAAC;EAEDE,WAAW,EAAE;IACXb,GAAG,GAAG;MACJ,OAAOc,OAAO,CAAC,IAAI,CAAC;IACtB,CAAC;IAEDC,GAAG,CAACC,IAAI,EAAE;MACR,IAAI,CAACC,QAAQ,GAAG,EAAE;MAClBvC,WAAW,CAACwC,UAAU,CAAC,IAAI,EAAEF,IAAI,CAAC;IACpC;EAEF,CAAC;EAEDG,YAAY,CAACC,IAAI,EAAEC,KAAK,EAAE;IACxB,IAAI,IAAI,CAACC,OAAO,IAAI,IAAI,EAAE,IAAI,CAACA,OAAO,GAAG,CAAC,CAAC;IAC3C,IAAID,KAAK,IAAI,IAAI,EAAEA,KAAK,GAAG,EAAE;IAC7B,IAAI,CAACC,OAAO,CAACF,IAAI,CAAC,GAAGC,KAAK;EAC5B,CAAC;EAEDE,eAAe,CAACH,IAAI,EAAE;IACpB,IAAI,IAAI,CAACE,OAAO,IAAI,IAAI,EAAE;MACxB,OAAO,IAAI,CAACA,OAAO,CAACF,IAAI,CAAC;IAC3B;EACF,CAAC;EAEDI,YAAY,CAACJ,IAAI,EAAE;IACjB,OAAO,IAAI,CAACE,OAAO,IAAI,IAAI,IAAI,IAAI,CAACA,OAAO,CAACF,IAAI,CAAC;EACnD,CAAC;EAEDK,YAAY,CAACL,IAAI,EAAE;IACjB,OAAO,IAAI,CAACE,OAAO,IAAI,IAAI,IAAI,IAAI,CAACA,OAAO,CAACF,IAAI,CAAC,IAAI,IAAI;EAC3D,CAAC;EAEDM,gBAAgB,CAACN,IAAI,EAAE;IACrB,MAAMC,KAAK,GAAG,IAAI,CAACG,YAAY,CAACJ,IAAI,CAAC;IACrC,IAAIC,KAAK,IAAI,IAAI,EAAE,OAAO;MACxBM,SAAS,EAAE,IAAI;MACfN;IACF,CAAC;EACH;AAEF,CAAC;AACD;AACA;AACA;AACA;;AAEA,MAAMlC,kBAAkB,GAAG;EACzB;EACA;EACA;EACAyC,QAAQ,EAAE;IACR5B,GAAG,GAAG;MACJ,OAAO,CAAC;IACV;EAEF,CAAC;EACD6B,WAAW,EAAE;IACX7B,GAAG,GAAG;MACJ,OAAO,WAAW;IACpB;EAEF,CAAC;EACDD,QAAQ,EAAE;IACRC,GAAG,GAAG;MACJ,OAAO,WAAW;IACpB;EAEF,CAAC;EACD8B,eAAe,EAAE;IACf9B,GAAG,GAAG;MACJ;MACA,OAAO,IAAI,CAAC+B,UAAU,CAACC,MAAM,CAACzB,KAAK,IAAI0B,MAAM,CAAC1B,KAAK,CAACN,OAAO,CAAC,CAACiC,WAAW,EAAE,KAAK,MAAM,CAAC;IACxF;EAEF,CAAC;EACDC,UAAU,EAAE;IACVnC,GAAG,GAAG;MACJ,MAAMmC,UAAU,GAAG;QACjB,WAAW,EAAE,YAAY;QACzBC,MAAM,EAAE,YAAY;QACpB,gBAAgB,EAAE;MACpB,CAAC;MACD,OAAOD,UAAU,CAACzD,WAAW,CAAC2D,eAAe,CAAC,IAAI,CAAC,CAAC;IACtD;EAEF,CAAC;EACDC,IAAI,EAAE;IACJtC,GAAG,GAAG;MACJ,OAAO,IAAI,CAACuC,aAAa,CAAC,MAAM,CAAC;IACnC;EAEF,CAAC;EACDC,IAAI,EAAE;IACJxC,GAAG,GAAG;MACJ,OAAO,IAAI,CAACuC,aAAa,CAAC,MAAM,CAAC;IACnC;EAEF,CAAC;EAEDlD,aAAa,CAAC+B,IAAI,EAAE;IAClB,OAAO1C,WAAW,CAACW,aAAa,CAAC+B,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC;EAClD,CAAC;EAEDqB,cAAc,CAACzB,IAAI,EAAE;IACnB;IACA,MAAM0B,IAAI,GAAG,IAAI,CAACpD,MAAM;IACxB,OAAO,IAAIoD,IAAI,CAAC;MACdC,IAAI,EAAE,MAAM;MACZC,IAAI,EAAE5B,IAAI;MACV6B,MAAM,EAAE,IAAI;MACZC,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC;EAEDR,aAAa,CAACS,GAAG,EAAE;IACjB,OAAOvE,SAAS,CAACwE,SAAS,CAACD,GAAG,EAAE,IAAI,CAAClB,eAAe,CAAC;EACvD,CAAC;EAEDoB,gBAAgB,CAACF,GAAG,EAAE;IACpB,IAAIA,GAAG,KAAK,OAAO,EAAE;MACnB,OAAO,IAAI;IACb;IAEA,OAAOvE,SAAS,CAAC0E,SAAS,CAACH,GAAG,EAAE,IAAI,CAAClB,eAAe,CAAC;EACvD;AAEF,CAAC;AACD;AACA;AACA;AACA;;AAEA,SAAS5C,gBAAgB,CAACkE,GAAG,EAAEC,UAAU,EAAE;EACzC,KAAK,MAAMC,CAAC,IAAID,UAAU,EAAE;IAC1B,MAAMhC,KAAK,GAAGgC,UAAU,CAACC,CAAC,CAAC;IAC3B7D,MAAM,CAAC8D,cAAc,CAACH,GAAG,EAAEE,CAAC,EAAE,OAAOjC,KAAK,KAAK,UAAU,GAAG;MAC1DA;IACF,CAAC,GAAGA,KAAK,CAAC;EACZ;AACF;AACA;AACA;AACA;AACA;;AAGA,SAASjB,iBAAiB,CAACoD,aAAa,EAAE;EACxC,OAAO;IACLxD,GAAG,GAAG;MACJ,OAAO,IAAI,CAACwB,YAAY,CAACgC,aAAa,CAAC;IACzC,CAAC;IAEDzC,GAAG,CAACM,KAAK,EAAE;MACT,IAAI,CAACF,YAAY,CAACqC,aAAa,EAAEnC,KAAK,CAAC;IACzC;EAEF,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASP,OAAO,CAAC2C,IAAI,EAAE;EACrB,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACG,GAAG,CAAC9C,OAAO,CAAC,CAAC+C,IAAI,CAAC,EAAE,CAAC;EAC1D,IAAInF,WAAW,CAACoF,aAAa,CAACL,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACrC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAGN,OAAO,CAAC2C,IAAI,CAACxC,QAAQ,CAAC;EAC9F,IAAIvC,WAAW,CAACqF,UAAU,CAACN,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACb,IAAI;EAClD,OAAO,EAAE;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASoB,eAAe,CAACC,UAAU,EAAE;EACnC,OAAOtF,OAAO,CAACM,KAAK,CAACgF,UAAU,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,mBAAmB,CAACC,GAAG,EAAEC,OAAO,EAAE;EACzC,IAAIC,MAAM,GAAG,EAAE;EACf1F,OAAO,CAAC2F,SAAS,CAACH,GAAG,EAAE,CAACI,MAAM,EAAEd,IAAI,EAAEd,IAAI,KAAK;IAC7C,IAAI6B,UAAU;IAEd,IAAI,CAACJ,OAAO,CAACK,QAAQ,EAAE;MACrBJ,MAAM,IAAIE,MAAM;MAChB;IACF,CAAC,CAAC;;IAGF,IAAI,CAACd,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACd,IAAI,MAAM,SAAS,EAAE;IAEvD,IAAI,CAACc,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACd,IAAI,MAAM,MAAM,EAAE;MAClD,MAAM+B,MAAM,GAAGjB,IAAI,CAACkB,IAAI,GAAGlB,IAAI,CAACmB,IAAI,CAACC,OAAO;MAC5CR,MAAM,IAAIE,MAAM,CAACO,OAAO,CAACJ,MAAM,EAAEA,MAAM,CAACK,IAAI,EAAE,CAAC;MAC/C;IACF;IAEA,IAAIpC,IAAI,KAAK,OAAO,EAAE;MACpB,IAAIc,IAAI,CAACd,IAAI,KAAK,MAAM,IAAIc,IAAI,CAACuB,SAAS,EAAE;QAC1CX,MAAM,IAAIZ,IAAI,CAACuB,SAAS,CAACnB,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;MAC1C,CAAC,MAAM;QACLQ,MAAM,IAAIE,MAAM,CAACO,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC;MACxC;MAEA;IACF;IAEA,IAAInC,IAAI,KAAK,KAAK,IAAI4B,MAAM,KAAK,GAAG,IAAId,IAAI,IAAI,IAAI,IAAI,CAACe,UAAU,GAAGf,IAAI,CAACmB,IAAI,KAAK,IAAI,IAAIJ,UAAU,CAACS,SAAS,EAAE;MAChHZ,MAAM,GAAGA,MAAM,CAACa,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B;IAEAb,MAAM,IAAIE,MAAM,CAACQ,IAAI,EAAE;EACzB,CAAC,CAAC;EACF,OAAOV,MAAM;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASc,QAAQ,CAACC,SAAS,EAAE;EAC3B,OAAOC,IAAI,IAAI;IACb,MAAMrC,GAAG,GAAGqC,IAAI,CAACL,SAAS;IAE1B,IAAII,SAAS,CAACC,IAAI,CAAC,KAAK,KAAK,EAAE;MAC7BA,IAAI,CAACC,QAAQ,GAAG,IAAI;IACtB;IAEAD,IAAI,CAACE,iBAAiB,GAAGF,IAAI,CAACL,SAAS;IAEvC,IAAIK,IAAI,CAACG,MAAM,EAAE;MACfH,IAAI,CAACG,MAAM,CAACD,iBAAiB,GAAGF,IAAI,CAACG,MAAM,CAACR,SAAS;IACvD;IAEAK,IAAI,CAACL,SAAS,GAAGhC,GAAG;EACtB,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASyC,oBAAoB,CAACJ,IAAI,EAAE;EAClC,IAAIA,IAAI,CAACE,iBAAiB,EAAE;IAC1BF,IAAI,CAACL,SAAS,GAAGK,IAAI,CAACE,iBAAiB;EACzC;EAEA,IAAIF,IAAI,CAACG,MAAM,EAAE;IACfC,oBAAoB,CAACJ,IAAI,CAACG,MAAM,CAAC;EACnC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASE,cAAc,CAACjC,IAAI,EAAEkC,QAAQ,EAAE;EACtClC,IAAI,CAACmC,KAAK,GAAGnC,IAAI,CAACmC,KAAK,CAAC5D,MAAM,CAACqD,IAAI,IAAI;IACrC,IAAIQ,cAAc,CAACR,IAAI,CAAC,EAAE;MACxBK,cAAc,CAACL,IAAI,EAAEM,QAAQ,CAAC;IAChC;IAEAN,IAAI,CAACG,MAAM,GAAGM,SAAS;IACvBT,IAAI,CAACU,eAAe,GAAGA,eAAe;IACtC,OAAOJ,QAAQ,CAACN,IAAI,CAAC,KAAK,KAAK;EACjC,CAAC,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASW,+BAA+B,CAACvC,IAAI,EAAEwC,KAAK,EAAEN,QAAQ,EAAE;EAC9D,IAAIM,KAAK,KAAK,IAAI,EAAE,OAAOP,cAAc,CAACjC,IAAI,EAAEkC,QAAQ,CAAC;EACzD,CAAClC,IAAI,CAACmC,KAAK,EAAEK,KAAK,CAACL,KAAK,CAAC,GAAGM,WAAW,CAACzC,IAAI,CAACmC,KAAK,EAAEK,KAAK,CAACL,KAAK,EAAE,CAACP,IAAI,EAAEc,KAAK,EAAEC,KAAK,EAAEC,MAAM,KAAK;IAC/F,MAAMC,KAAK,GAAGD,MAAM,CAACF,KAAK,CAAC;IAE3B,IAAIN,cAAc,CAACR,IAAI,CAAC,EAAE;MACxBW,+BAA+B,CAACX,IAAI,EAAEiB,KAAK,EAAEX,QAAQ,CAAC;IACxD;IAEAN,IAAI,CAACG,MAAM,GAAGc,KAAK;IACnBjB,IAAI,CAACU,eAAe,GAAGA,eAAe;IACtC,OAAOJ,QAAQ,CAACN,IAAI,CAAC,KAAK,KAAK;EACjC,CAAC,CAAC;AACJ,CAAC,CAAC;AACF;;AAEA,SAASQ,cAAc,CAACR,IAAI,EAAE;EAC5B,OAAOA,IAAI,CAACO,KAAK,IAAIP,IAAI,CAACO,KAAK,CAACW,MAAM,IAAIlB,IAAI,CAACO,KAAK,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC9D,IAAI,KAAK,MAAM,IAAI8D,CAAC,CAAC9D,IAAI,KAAK,QAAQ,CAAC,IAAI0C,IAAI,CAACjE,IAAI,KAAK,WAAW,IAAIiE,IAAI,CAACjE,IAAI,KAAK,mBAAmB;AAC5K,CAAC,CAAC;AACF;;AAGA,SAAS8E,WAAW,CAACQ,CAAC,EAAEC,CAAC,EAAEvB,SAAS,EAAE;EACpC,MAAMwB,IAAI,GAAG,EAAE;EACf,MAAMC,IAAI,GAAG,EAAE;EAEf,KAAK,IAAIV,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGO,CAAC,CAACH,MAAM,EAAEJ,KAAK,EAAE,EAAE;IAC7C,IAAIf,SAAS,CAACsB,CAAC,CAACP,KAAK,CAAC,EAAEA,KAAK,EAAEO,CAAC,EAAEC,CAAC,CAAC,EAAE;MACpCC,IAAI,CAACE,IAAI,CAACJ,CAAC,CAACP,KAAK,CAAC,CAAC;IACrB,CAAC,MAAM;MACLU,IAAI,CAACC,IAAI,CAACJ,CAAC,CAACP,KAAK,CAAC,CAAC;IACrB;EACF;EAEA,OAAO,CAACS,IAAI,EAAEC,IAAI,CAAC;AACrB,CAAC,CAAC;;AAGF,SAASd,eAAe,CAACX,SAAS,EAAE;EAClC,IAAI,IAAI,CAACI,MAAM,EAAE;IACf,MAAM,CAACkB,CAAC,EAAEC,CAAC,CAAC,GAAGT,WAAW,CAAC,IAAI,CAAClB,SAAS,EAAE,IAAI,CAACQ,MAAM,CAACR,SAAS,EAAEI,SAAS,CAAC;IAC5E,IAAI,CAACJ,SAAS,GAAG0B,CAAC;IAClB,IAAI,CAAClB,MAAM,CAACR,SAAS,GAAG2B,CAAC;EAC3B,CAAC,MAAM;IACL,IAAI,CAAC3B,SAAS,GAAG,IAAI,CAACA,SAAS,CAAChD,MAAM,CAACoD,SAAS,CAAC;EACnD;AACF;AAEA,MAAM2B,UAAU,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC;AACxE,MAAMC,aAAa,GAAG;EACpBC,KAAK,CAACC,GAAG,EAAE;IACTC,OAAO,CAACF,KAAK,CAACC,GAAG,CAAC;EACpB,CAAC;EAEDE,KAAK,CAACF,GAAG,EAAE;IACTC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;EACpB,CAAC;EAEDG,IAAI,CAACH,GAAG,EAAE;IACRC,OAAO,CAACE,IAAI,CAACzI,KAAK,CAAC0I,MAAM,CAACJ,GAAG,CAAC,CAAC;EACjC,CAAC;EAEDK,KAAK,CAACL,GAAG,EAAE;IACTC,OAAO,CAACI,KAAK,CAAC3I,KAAK,CAAC4I,IAAI,CAACC,GAAG,CAACP,GAAG,CAAC,CAAC;EACpC,CAAC;EAEDQ,IAAI,CAACR,GAAG,EAAE;IACRC,OAAO,CAACO,IAAI,CAAC9I,KAAK,CAAC4I,IAAI,CAACG,IAAI,CAACT,GAAG,CAAC,CAAC;EACpC,CAAC;EAEDU,MAAM,GAAG,CAAC;AAEZ,CAAC;AACD,SAASC,YAAY,CAACC,QAAQ,EAAE;EAC9B,MAAMC,WAAW,GAAGhB,UAAU,CAACiB,OAAO,CAACF,QAAQ,CAAC;EAChD,OAAOf,UAAU,CAACkB,MAAM,CAAC,CAACC,MAAM,EAAEvF,IAAI,EAAEwD,KAAK,KAAK;IAChD,IAAIA,KAAK,IAAI4B,WAAW,EAAE;MACxBG,MAAM,CAACvF,IAAI,CAAC,GAAGqE,aAAa,CAACrE,IAAI,CAAC;IACpC,CAAC,MAAM;MACLuF,MAAM,CAACvF,IAAI,CAAC,GAAGqE,aAAa,CAACY,MAAM;IACrC;IAEA,OAAOM,MAAM;EACf,CAAC,EAAE,CAAC,CAAC,CAAC;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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"},"metadata":{},"sourceType":"script","externalDependencies":[]}