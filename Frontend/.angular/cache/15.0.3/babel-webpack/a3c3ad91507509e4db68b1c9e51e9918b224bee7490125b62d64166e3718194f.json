{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst url = require(\"url\");\nconst util = require(\"util\");\nconst fs = require(\"graceful-fs\");\nconst ipaddr = require(\"ipaddr.js\");\nconst defaultGateway = require(\"default-gateway\");\nconst express = require(\"express\");\nconst {\n  validate\n} = require(\"schema-utils\");\nconst schema = require(\"./options.json\");\n\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n/** @typedef {import(\"webpack\").MultiCompiler} MultiCompiler */\n/** @typedef {import(\"webpack\").Configuration} WebpackConfiguration */\n/** @typedef {import(\"webpack\").StatsOptions} StatsOptions */\n/** @typedef {import(\"webpack\").StatsCompilation} StatsCompilation */\n/** @typedef {import(\"webpack\").Stats} Stats */\n/** @typedef {import(\"webpack\").MultiStats} MultiStats */\n/** @typedef {import(\"os\").NetworkInterfaceInfo} NetworkInterfaceInfo */\n/** @typedef {import(\"express\").Request} Request */\n/** @typedef {import(\"express\").Response} Response */\n/** @typedef {import(\"express\").NextFunction} NextFunction */\n/** @typedef {import(\"express\").RequestHandler} ExpressRequestHandler */\n/** @typedef {import(\"express\").ErrorRequestHandler} ExpressErrorRequestHandler */\n/** @typedef {import(\"chokidar\").WatchOptions} WatchOptions */\n/** @typedef {import(\"chokidar\").FSWatcher} FSWatcher */\n/** @typedef {import(\"connect-history-api-fallback\").Options} ConnectHistoryApiFallbackOptions */\n/** @typedef {import(\"bonjour-service\").Bonjour} Bonjour */\n/** @typedef {import(\"bonjour-service\").Service} BonjourOptions */\n/** @typedef {import(\"http-proxy-middleware\").RequestHandler} RequestHandler */\n/** @typedef {import(\"http-proxy-middleware\").Options} HttpProxyMiddlewareOptions */\n/** @typedef {import(\"http-proxy-middleware\").Filter} HttpProxyMiddlewareOptionsFilter */\n/** @typedef {import(\"serve-index\").Options} ServeIndexOptions */\n/** @typedef {import(\"serve-static\").ServeStaticOptions} ServeStaticOptions */\n/** @typedef {import(\"ipaddr.js\").IPv4} IPv4 */\n/** @typedef {import(\"ipaddr.js\").IPv6} IPv6 */\n/** @typedef {import(\"net\").Socket} Socket */\n/** @typedef {import(\"http\").IncomingMessage} IncomingMessage */\n/** @typedef {import(\"open\").Options} OpenOptions */\n\n/** @typedef {import(\"https\").ServerOptions & { spdy?: { plain?: boolean | undefined, ssl?: boolean | undefined, 'x-forwarded-for'?: string | undefined, protocol?: string | undefined, protocols?: string[] | undefined }}} ServerOptions */\n\n/**\n * @template Request, Response\n * @typedef {import(\"webpack-dev-middleware\").Options<Request, Response>} DevMiddlewareOptions\n */\n\n/**\n * @template Request, Response\n * @typedef {import(\"webpack-dev-middleware\").Context<Request, Response>} DevMiddlewareContext\n */\n\n/**\n * @typedef {\"local-ip\" | \"local-ipv4\" | \"local-ipv6\" | string} Host\n */\n\n/**\n * @typedef {number | string | \"auto\"} Port\n */\n\n/**\n * @typedef {Object} WatchFiles\n * @property {string | string[]} paths\n * @property {WatchOptions & { aggregateTimeout?: number, ignored?: WatchOptions[\"ignored\"], poll?: number | boolean }} [options]\n */\n\n/**\n * @typedef {Object} Static\n * @property {string} [directory]\n * @property {string | string[]} [publicPath]\n * @property {boolean | ServeIndexOptions} [serveIndex]\n * @property {ServeStaticOptions} [staticOptions]\n * @property {boolean | WatchOptions & { aggregateTimeout?: number, ignored?: WatchOptions[\"ignored\"], poll?: number | boolean }} [watch]\n */\n\n/**\n * @typedef {Object} NormalizedStatic\n * @property {string} directory\n * @property {string[]} publicPath\n * @property {false | ServeIndexOptions} serveIndex\n * @property {ServeStaticOptions} staticOptions\n * @property {false | WatchOptions} watch\n */\n\n/**\n * @typedef {Object} ServerConfiguration\n * @property {\"http\" | \"https\" | \"spdy\" | string} [type]\n * @property {ServerOptions} [options]\n */\n\n/**\n * @typedef {Object} WebSocketServerConfiguration\n * @property {\"sockjs\" | \"ws\" | string | Function} [type]\n * @property {Record<string, any>} [options]\n */\n\n/**\n * @typedef {(import(\"ws\").WebSocket | import(\"sockjs\").Connection & { send: import(\"ws\").WebSocket[\"send\"], terminate: import(\"ws\").WebSocket[\"terminate\"], ping: import(\"ws\").WebSocket[\"ping\"] }) & { isAlive?: boolean }} ClientConnection\n */\n\n/**\n * @typedef {import(\"ws\").WebSocketServer | import(\"sockjs\").Server & { close: import(\"ws\").WebSocketServer[\"close\"] }} WebSocketServer\n */\n\n/**\n * @typedef {{ implementation: WebSocketServer, clients: ClientConnection[] }} WebSocketServerImplementation\n */\n\n/**\n * @callback ByPass\n * @param {Request} req\n * @param {Response} res\n * @param {ProxyConfigArrayItem} proxyConfig\n */\n\n/**\n * @typedef {{ path?: HttpProxyMiddlewareOptionsFilter | undefined, context?: HttpProxyMiddlewareOptionsFilter | undefined } & { bypass?: ByPass } & HttpProxyMiddlewareOptions } ProxyConfigArrayItem\n */\n\n/**\n * @typedef {(ProxyConfigArrayItem | ((req?: Request | undefined, res?: Response | undefined, next?: NextFunction | undefined) => ProxyConfigArrayItem))[]} ProxyConfigArray\n */\n\n/**\n * @typedef {{ [url: string]: string | ProxyConfigArrayItem }} ProxyConfigMap\n */\n\n/**\n * @typedef {Object} OpenApp\n * @property {string} [name]\n * @property {string[]} [arguments]\n */\n\n/**\n * @typedef {Object} Open\n * @property {string | string[] | OpenApp} [app]\n * @property {string | string[]} [target]\n */\n\n/**\n * @typedef {Object} NormalizedOpen\n * @property {string} target\n * @property {import(\"open\").Options} options\n */\n\n/**\n * @typedef {Object} WebSocketURL\n * @property {string} [hostname]\n * @property {string} [password]\n * @property {string} [pathname]\n * @property {number | string} [port]\n * @property {string} [protocol]\n * @property {string} [username]\n */\n\n/**\n * @typedef {Object} ClientConfiguration\n * @property {\"log\" | \"info\" | \"warn\" | \"error\" | \"none\" | \"verbose\"} [logging]\n * @property {boolean  | { warnings?: boolean, errors?: boolean }} [overlay]\n * @property {boolean} [progress]\n * @property {boolean | number} [reconnect]\n * @property {\"ws\" | \"sockjs\" | string} [webSocketTransport]\n * @property {string | WebSocketURL} [webSocketURL]\n */\n\n/**\n * @typedef {Array<{ key: string; value: string }> | Record<string, string | string[]>} Headers\n */\n\n/**\n * @typedef {{ name?: string, path?: string, middleware: ExpressRequestHandler | ExpressErrorRequestHandler } | ExpressRequestHandler | ExpressErrorRequestHandler} Middleware\n */\n\n/**\n * @typedef {Object} Configuration\n * @property {boolean | string} [ipc]\n * @property {Host} [host]\n * @property {Port} [port]\n * @property {boolean | \"only\"} [hot]\n * @property {boolean} [liveReload]\n * @property {DevMiddlewareOptions<Request, Response>} [devMiddleware]\n * @property {boolean} [compress]\n * @property {boolean} [magicHtml]\n * @property {\"auto\" | \"all\" | string | string[]} [allowedHosts]\n * @property {boolean | ConnectHistoryApiFallbackOptions} [historyApiFallback]\n * @property {boolean} [setupExitSignals]\n * @property {boolean | Record<string, never> | BonjourOptions} [bonjour]\n * @property {string | string[] | WatchFiles | Array<string | WatchFiles>} [watchFiles]\n * @property {boolean | string | Static | Array<string | Static>} [static]\n * @property {boolean | ServerOptions} [https]\n * @property {boolean} [http2]\n * @property {\"http\" | \"https\" | \"spdy\" | string | ServerConfiguration} [server]\n * @property {boolean | \"sockjs\" | \"ws\" | string | WebSocketServerConfiguration} [webSocketServer]\n * @property {ProxyConfigMap | ProxyConfigArrayItem | ProxyConfigArray} [proxy]\n * @property {boolean | string | Open | Array<string | Open>} [open]\n * @property {boolean} [setupExitSignals]\n * @property {boolean | ClientConfiguration} [client]\n * @property {Headers | ((req: Request, res: Response, context: DevMiddlewareContext<Request, Response>) => Headers)} [headers]\n * @property {(devServer: Server) => void} [onAfterSetupMiddleware]\n * @property {(devServer: Server) => void} [onBeforeSetupMiddleware]\n * @property {(devServer: Server) => void} [onListening]\n * @property {(middlewares: Middleware[], devServer: Server) => Middleware[]} [setupMiddlewares]\n */\n\nif (!process.env.WEBPACK_SERVE) {\n  // TODO fix me in the next major release\n  // @ts-ignore\n  process.env.WEBPACK_SERVE = true;\n}\nclass Server {\n  /**\n   * @param {Configuration | Compiler | MultiCompiler} options\n   * @param {Compiler | MultiCompiler | Configuration} compiler\n   */\n  constructor(options = {}, compiler) {\n    // TODO: remove this after plugin support is published\n    if ( /** @type {Compiler | MultiCompiler} */options.hooks) {\n      util.deprecate(() => {}, \"Using 'compiler' as the first argument is deprecated. Please use 'options' as the first argument and 'compiler' as the second argument.\", \"DEP_WEBPACK_DEV_SERVER_CONSTRUCTOR\")();\n      [options = {}, compiler] = [compiler, options];\n    }\n    validate( /** @type {Schema} */schema, options, {\n      name: \"Dev Server\",\n      baseDataPath: \"options\"\n    });\n    this.compiler = /** @type {Compiler | MultiCompiler} */compiler;\n    /**\n     * @type {ReturnType<Compiler[\"getInfrastructureLogger\"]>}\n     * */\n    this.logger = this.compiler.getInfrastructureLogger(\"webpack-dev-server\");\n    this.options = /** @type {Configuration} */options;\n    /**\n     * @type {FSWatcher[]}\n     */\n    this.staticWatchers = [];\n    /**\n     * @private\n     * @type {{ name: string | symbol, listener: (...args: any[]) => void}[] }}\n     */\n    this.listeners = [];\n    // Keep track of websocket proxies for external websocket upgrade.\n    /**\n     * @private\n     * @type {RequestHandler[]}\n     */\n    this.webSocketProxies = [];\n    /**\n     * @type {Socket[]}\n     */\n    this.sockets = [];\n    /**\n     * @private\n     * @type {string | undefined}\n     */\n    // eslint-disable-next-line no-undefined\n    this.currentHash = undefined;\n  }\n\n  // TODO compatibility with webpack v4, remove it after drop\n  static get cli() {\n    return {\n      get getArguments() {\n        return () => require(\"../bin/cli-flags\");\n      },\n      get processArguments() {\n        return require(\"../bin/process-arguments\");\n      }\n    };\n  }\n  static get schema() {\n    return schema;\n  }\n\n  /**\n   * @private\n   * @returns {StatsOptions}\n   * @constructor\n   */\n  static get DEFAULT_STATS() {\n    return {\n      all: false,\n      hash: true,\n      warnings: true,\n      errors: true,\n      errorDetails: false\n    };\n  }\n\n  /**\n   * @param {string} URL\n   * @returns {boolean}\n   */\n  static isAbsoluteURL(URL) {\n    // Don't match Windows paths `c:\\`\n    if (/^[a-zA-Z]:\\\\/.test(URL)) {\n      return false;\n    }\n\n    // Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n    // Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n    return /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(URL);\n  }\n\n  /**\n   * @param {string} gateway\n   * @returns {string | undefined}\n   */\n  static findIp(gateway) {\n    const gatewayIp = ipaddr.parse(gateway);\n\n    // Look for the matching interface in all local interfaces.\n    for (const addresses of Object.values(os.networkInterfaces())) {\n      for (const {\n        cidr\n      } of /** @type {NetworkInterfaceInfo[]} */\n      addresses) {\n        const net = ipaddr.parseCIDR( /** @type {string} */cidr);\n        if (net[0] && net[0].kind() === gatewayIp.kind() && gatewayIp.match(net)) {\n          return net[0].toString();\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {\"v4\" | \"v6\"} family\n   * @returns {Promise<string | undefined>}\n   */\n  static internalIP(family) {\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          gateway\n        } = yield defaultGateway[family]();\n        return Server.findIp(gateway);\n      } catch {\n        // ignore\n      }\n    })();\n  }\n\n  /**\n   * @param {\"v4\" | \"v6\"} family\n   * @returns {string | undefined}\n   */\n  static internalIPSync(family) {\n    try {\n      const {\n        gateway\n      } = defaultGateway[family].sync();\n      return Server.findIp(gateway);\n    } catch {\n      // ignore\n    }\n  }\n\n  /**\n   * @param {Host} hostname\n   * @returns {Promise<string>}\n   */\n  static getHostname(hostname) {\n    return _asyncToGenerator(function* () {\n      if (hostname === \"local-ip\") {\n        return (yield Server.internalIP(\"v4\")) || (yield Server.internalIP(\"v6\")) || \"0.0.0.0\";\n      } else if (hostname === \"local-ipv4\") {\n        return (yield Server.internalIP(\"v4\")) || \"0.0.0.0\";\n      } else if (hostname === \"local-ipv6\") {\n        return (yield Server.internalIP(\"v6\")) || \"::\";\n      }\n      return hostname;\n    })();\n  }\n\n  /**\n   * @param {Port} port\n   * @param {string} host\n   * @returns {Promise<number | string>}\n   */\n  static getFreePort(port, host) {\n    return _asyncToGenerator(function* () {\n      if (typeof port !== \"undefined\" && port !== null && port !== \"auto\") {\n        return port;\n      }\n      const pRetry = require(\"p-retry\");\n      const getPort = require(\"./getPort\");\n      const basePort = typeof process.env.WEBPACK_DEV_SERVER_BASE_PORT !== \"undefined\" ? parseInt(process.env.WEBPACK_DEV_SERVER_BASE_PORT, 10) : 8080;\n\n      // Try to find unused port and listen on it for 3 times,\n      // if port is not specified in options.\n      const defaultPortRetry = typeof process.env.WEBPACK_DEV_SERVER_PORT_RETRY !== \"undefined\" ? parseInt(process.env.WEBPACK_DEV_SERVER_PORT_RETRY, 10) : 3;\n      return pRetry(() => getPort(basePort, host), {\n        retries: defaultPortRetry\n      });\n    })();\n  }\n\n  /**\n   * @returns {string}\n   */\n  static findCacheDir() {\n    const cwd = process.cwd();\n\n    /**\n     * @type {string | undefined}\n     */\n    let dir = cwd;\n    for (;;) {\n      try {\n        if (fs.statSync(path.join(dir, \"package.json\")).isFile()) break;\n        // eslint-disable-next-line no-empty\n      } catch (e) {}\n      const parent = path.dirname(dir);\n      if (dir === parent) {\n        // eslint-disable-next-line no-undefined\n        dir = undefined;\n        break;\n      }\n      dir = parent;\n    }\n    if (!dir) {\n      return path.resolve(cwd, \".cache/webpack-dev-server\");\n    } else if (process.versions.pnp === \"1\") {\n      return path.resolve(dir, \".pnp/.cache/webpack-dev-server\");\n    } else if (process.versions.pnp === \"3\") {\n      return path.resolve(dir, \".yarn/.cache/webpack-dev-server\");\n    }\n    return path.resolve(dir, \"node_modules/.cache/webpack-dev-server\");\n  }\n\n  /**\n   * @private\n   * @param {Compiler} compiler\n   */\n  addAdditionalEntries(compiler) {\n    /**\n     * @type {string[]}\n     */\n    const additionalEntries = [];\n    const isWebTarget = compiler.options.externalsPresets ? compiler.options.externalsPresets.web : [\"web\", \"webworker\", \"electron-preload\", \"electron-renderer\", \"node-webkit\",\n    // eslint-disable-next-line no-undefined\n    undefined, null].includes( /** @type {string} */compiler.options.target);\n\n    // TODO maybe empty empty client\n    if (this.options.client && isWebTarget) {\n      let webSocketURLStr = \"\";\n      if (this.options.webSocketServer) {\n        const webSocketURL = /** @type {WebSocketURL} */\n\n        /** @type {ClientConfiguration} */\n        this.options.client.webSocketURL;\n        const webSocketServer = /** @type {{ type: WebSocketServerConfiguration[\"type\"], options: NonNullable<WebSocketServerConfiguration[\"options\"]> }} */\n        this.options.webSocketServer;\n        const searchParams = new URLSearchParams();\n\n        /** @type {string} */\n        let protocol;\n\n        // We are proxying dev server and need to specify custom `hostname`\n        if (typeof webSocketURL.protocol !== \"undefined\") {\n          protocol = webSocketURL.protocol;\n        } else {\n          protocol = /** @type {ServerConfiguration} */\n          this.options.server.type === \"http\" ? \"ws:\" : \"wss:\";\n        }\n        searchParams.set(\"protocol\", protocol);\n        if (typeof webSocketURL.username !== \"undefined\") {\n          searchParams.set(\"username\", webSocketURL.username);\n        }\n        if (typeof webSocketURL.password !== \"undefined\") {\n          searchParams.set(\"password\", webSocketURL.password);\n        }\n\n        /** @type {string} */\n        let hostname;\n\n        // SockJS is not supported server mode, so `hostname` and `port` can't specified, let's ignore them\n        // TODO show warning about this\n        const isSockJSType = webSocketServer.type === \"sockjs\";\n\n        // We are proxying dev server and need to specify custom `hostname`\n        if (typeof webSocketURL.hostname !== \"undefined\") {\n          hostname = webSocketURL.hostname;\n        }\n        // Web socket server works on custom `hostname`, only for `ws` because `sock-js` is not support custom `hostname`\n        else if (typeof webSocketServer.options.host !== \"undefined\" && !isSockJSType) {\n          hostname = webSocketServer.options.host;\n        }\n        // The `host` option is specified\n        else if (typeof this.options.host !== \"undefined\") {\n          hostname = this.options.host;\n        }\n        // The `port` option is not specified\n        else {\n          hostname = \"0.0.0.0\";\n        }\n        searchParams.set(\"hostname\", hostname);\n\n        /** @type {number | string} */\n        let port;\n\n        // We are proxying dev server and need to specify custom `port`\n        if (typeof webSocketURL.port !== \"undefined\") {\n          port = webSocketURL.port;\n        }\n        // Web socket server works on custom `port`, only for `ws` because `sock-js` is not support custom `port`\n        else if (typeof webSocketServer.options.port !== \"undefined\" && !isSockJSType) {\n          port = webSocketServer.options.port;\n        }\n        // The `port` option is specified\n        else if (typeof this.options.port === \"number\") {\n          port = this.options.port;\n        }\n        // The `port` option is specified using `string`\n        else if (typeof this.options.port === \"string\" && this.options.port !== \"auto\") {\n          port = Number(this.options.port);\n        }\n        // The `port` option is not specified or set to `auto`\n        else {\n          port = \"0\";\n        }\n        searchParams.set(\"port\", String(port));\n\n        /** @type {string} */\n        let pathname = \"\";\n\n        // We are proxying dev server and need to specify custom `pathname`\n        if (typeof webSocketURL.pathname !== \"undefined\") {\n          pathname = webSocketURL.pathname;\n        }\n        // Web socket server works on custom `path`\n        else if (typeof webSocketServer.options.prefix !== \"undefined\" || typeof webSocketServer.options.path !== \"undefined\") {\n          pathname = webSocketServer.options.prefix || webSocketServer.options.path;\n        }\n        searchParams.set(\"pathname\", pathname);\n        const client = /** @type {ClientConfiguration} */this.options.client;\n        if (typeof client.logging !== \"undefined\") {\n          searchParams.set(\"logging\", client.logging);\n        }\n        if (typeof client.progress !== \"undefined\") {\n          searchParams.set(\"progress\", String(client.progress));\n        }\n        if (typeof client.overlay !== \"undefined\") {\n          searchParams.set(\"overlay\", typeof client.overlay === \"boolean\" ? String(client.overlay) : JSON.stringify(client.overlay));\n        }\n        if (typeof client.reconnect !== \"undefined\") {\n          searchParams.set(\"reconnect\", typeof client.reconnect === \"number\" ? String(client.reconnect) : \"10\");\n        }\n        if (typeof this.options.hot !== \"undefined\") {\n          searchParams.set(\"hot\", String(this.options.hot));\n        }\n        if (typeof this.options.liveReload !== \"undefined\") {\n          searchParams.set(\"live-reload\", String(this.options.liveReload));\n        }\n        webSocketURLStr = searchParams.toString();\n      }\n      additionalEntries.push(`${require.resolve(\"../client/index.js\")}?${webSocketURLStr}`);\n    }\n    if (this.options.hot === \"only\") {\n      additionalEntries.push(require.resolve(\"webpack/hot/only-dev-server\"));\n    } else if (this.options.hot) {\n      additionalEntries.push(require.resolve(\"webpack/hot/dev-server\"));\n    }\n    const webpack = compiler.webpack || require(\"webpack\");\n\n    // use a hook to add entries if available\n    if (typeof webpack.EntryPlugin !== \"undefined\") {\n      for (const additionalEntry of additionalEntries) {\n        new webpack.EntryPlugin(compiler.context, additionalEntry, {\n          // eslint-disable-next-line no-undefined\n          name: undefined\n        }).apply(compiler);\n      }\n    }\n    // TODO remove after drop webpack v4 support\n    else {\n      /**\n       * prependEntry Method for webpack 4\n       * @param {any} originalEntry\n       * @param {any} newAdditionalEntries\n       * @returns {any}\n       */\n      const prependEntry = (originalEntry, newAdditionalEntries) => {\n        if (typeof originalEntry === \"function\") {\n          return () => Promise.resolve(originalEntry()).then(entry => prependEntry(entry, newAdditionalEntries));\n        }\n        if (typeof originalEntry === \"object\" && !Array.isArray(originalEntry)) {\n          /** @type {Object<string,string>} */\n          const clone = {};\n          Object.keys(originalEntry).forEach(key => {\n            // entry[key] should be a string here\n            const entryDescription = originalEntry[key];\n            clone[key] = prependEntry(entryDescription, newAdditionalEntries);\n          });\n          return clone;\n        }\n\n        // in this case, entry is a string or an array.\n        // make sure that we do not add duplicates.\n        /** @type {any} */\n        const entriesClone = additionalEntries.slice(0);\n        [].concat(originalEntry).forEach(newEntry => {\n          if (!entriesClone.includes(newEntry)) {\n            entriesClone.push(newEntry);\n          }\n        });\n        return entriesClone;\n      };\n      compiler.options.entry = prependEntry(compiler.options.entry || \"./src\", additionalEntries);\n      compiler.hooks.entryOption.call( /** @type {string} */compiler.options.context, compiler.options.entry);\n    }\n  }\n\n  /**\n   * @private\n   * @returns {Compiler[\"options\"]}\n   */\n  getCompilerOptions() {\n    if (typeof /** @type {MultiCompiler} */this.compiler.compilers !== \"undefined\") {\n      if ( /** @type {MultiCompiler} */this.compiler.compilers.length === 1) {\n        return (/** @type {MultiCompiler} */\n          this.compiler.compilers[0].options\n        );\n      }\n\n      // Configuration with the `devServer` options\n      const compilerWithDevServer = /** @type {MultiCompiler} */\n      this.compiler.compilers.find(config => config.options.devServer);\n      if (compilerWithDevServer) {\n        return compilerWithDevServer.options;\n      }\n\n      // Configuration with `web` preset\n      const compilerWithWebPreset = /** @type {MultiCompiler} */\n      this.compiler.compilers.find(config => config.options.externalsPresets && config.options.externalsPresets.web || [\"web\", \"webworker\", \"electron-preload\", \"electron-renderer\", \"node-webkit\",\n      // eslint-disable-next-line no-undefined\n      undefined, null].includes( /** @type {string} */config.options.target));\n      if (compilerWithWebPreset) {\n        return compilerWithWebPreset.options;\n      }\n\n      // Fallback\n      return (/** @type {MultiCompiler} */this.compiler.compilers[0].options\n      );\n    }\n    return (/** @type {Compiler} */this.compiler.options\n    );\n  }\n\n  /**\n   * @private\n   * @returns {Promise<void>}\n   */\n  normalizeOptions() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const {\n        options\n      } = _this;\n      const compilerOptions = _this.getCompilerOptions();\n      // TODO remove `{}` after drop webpack v4 support\n      const compilerWatchOptions = compilerOptions.watchOptions || {};\n      /**\n       * @param {WatchOptions & { aggregateTimeout?: number, ignored?: WatchOptions[\"ignored\"], poll?: number | boolean }} watchOptions\n       * @returns {WatchOptions}\n       */\n      const getWatchOptions = (watchOptions = {}) => {\n        const getPolling = () => {\n          if (typeof watchOptions.usePolling !== \"undefined\") {\n            return watchOptions.usePolling;\n          }\n          if (typeof watchOptions.poll !== \"undefined\") {\n            return Boolean(watchOptions.poll);\n          }\n          if (typeof compilerWatchOptions.poll !== \"undefined\") {\n            return Boolean(compilerWatchOptions.poll);\n          }\n          return false;\n        };\n        const getInterval = () => {\n          if (typeof watchOptions.interval !== \"undefined\") {\n            return watchOptions.interval;\n          }\n          if (typeof watchOptions.poll === \"number\") {\n            return watchOptions.poll;\n          }\n          if (typeof compilerWatchOptions.poll === \"number\") {\n            return compilerWatchOptions.poll;\n          }\n        };\n        const usePolling = getPolling();\n        const interval = getInterval();\n        const {\n          poll,\n          ...rest\n        } = watchOptions;\n        return {\n          ignoreInitial: true,\n          persistent: true,\n          followSymlinks: false,\n          atomic: false,\n          alwaysStat: true,\n          ignorePermissionErrors: true,\n          // Respect options from compiler watchOptions\n          usePolling,\n          interval,\n          ignored: watchOptions.ignored,\n          // TODO: we respect these options for all watch options and allow developers to pass them to chokidar, but chokidar doesn't have these options maybe we need revisit that in future\n          ...rest\n        };\n      };\n      /**\n       * @param {string | Static | undefined} [optionsForStatic]\n       * @returns {NormalizedStatic}\n       */\n      const getStaticItem = optionsForStatic => {\n        const getDefaultStaticOptions = () => {\n          return {\n            directory: path.join(process.cwd(), \"public\"),\n            staticOptions: {},\n            publicPath: [\"/\"],\n            serveIndex: {\n              icons: true\n            },\n            watch: getWatchOptions()\n          };\n        };\n\n        /** @type {NormalizedStatic} */\n        let item;\n        if (typeof optionsForStatic === \"undefined\") {\n          item = getDefaultStaticOptions();\n        } else if (typeof optionsForStatic === \"string\") {\n          item = {\n            ...getDefaultStaticOptions(),\n            directory: optionsForStatic\n          };\n        } else {\n          const def = getDefaultStaticOptions();\n          item = {\n            directory: typeof optionsForStatic.directory !== \"undefined\" ? optionsForStatic.directory : def.directory,\n            // TODO: do merge in the next major release\n            staticOptions: typeof optionsForStatic.staticOptions !== \"undefined\" ? optionsForStatic.staticOptions : def.staticOptions,\n            publicPath:\n            // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.publicPath !== \"undefined\" ? Array.isArray(optionsForStatic.publicPath) ? optionsForStatic.publicPath : [optionsForStatic.publicPath] : def.publicPath,\n            // TODO: do merge in the next major release\n            serveIndex:\n            // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.serveIndex !== \"undefined\" ? typeof optionsForStatic.serveIndex === \"boolean\" && optionsForStatic.serveIndex ? def.serveIndex : optionsForStatic.serveIndex : def.serveIndex,\n            watch:\n            // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.watch !== \"undefined\" ?\n            // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.watch === \"boolean\" ? optionsForStatic.watch ? def.watch : false : getWatchOptions(optionsForStatic.watch) : def.watch\n          };\n        }\n        if (Server.isAbsoluteURL(item.directory)) {\n          throw new Error(\"Using a URL as static.directory is not supported\");\n        }\n        return item;\n      };\n      if (typeof options.allowedHosts === \"undefined\") {\n        // AllowedHosts allows some default hosts picked from `options.host` or `webSocketURL.hostname` and `localhost`\n        options.allowedHosts = \"auto\";\n      }\n      // We store allowedHosts as array when supplied as string\n      else if (typeof options.allowedHosts === \"string\" && options.allowedHosts !== \"auto\" && options.allowedHosts !== \"all\") {\n        options.allowedHosts = [options.allowedHosts];\n      }\n      // CLI pass options as array, we should normalize them\n      else if (Array.isArray(options.allowedHosts) && options.allowedHosts.includes(\"all\")) {\n        options.allowedHosts = \"all\";\n      }\n      if (typeof options.bonjour === \"undefined\") {\n        options.bonjour = false;\n      } else if (typeof options.bonjour === \"boolean\") {\n        options.bonjour = options.bonjour ? {} : false;\n      }\n      if (typeof options.client === \"undefined\" || typeof options.client === \"object\" && options.client !== null) {\n        if (!options.client) {\n          options.client = {};\n        }\n        if (typeof options.client.webSocketURL === \"undefined\") {\n          options.client.webSocketURL = {};\n        } else if (typeof options.client.webSocketURL === \"string\") {\n          const parsedURL = new URL(options.client.webSocketURL);\n          options.client.webSocketURL = {\n            protocol: parsedURL.protocol,\n            hostname: parsedURL.hostname,\n            port: parsedURL.port.length > 0 ? Number(parsedURL.port) : \"\",\n            pathname: parsedURL.pathname,\n            username: parsedURL.username,\n            password: parsedURL.password\n          };\n        } else if (typeof options.client.webSocketURL.port === \"string\") {\n          options.client.webSocketURL.port = Number(options.client.webSocketURL.port);\n        }\n\n        // Enable client overlay by default\n        if (typeof options.client.overlay === \"undefined\") {\n          options.client.overlay = true;\n        } else if (typeof options.client.overlay !== \"boolean\") {\n          options.client.overlay = {\n            errors: true,\n            warnings: true,\n            ...options.client.overlay\n          };\n        }\n        if (typeof options.client.reconnect === \"undefined\") {\n          options.client.reconnect = 10;\n        } else if (options.client.reconnect === true) {\n          options.client.reconnect = Infinity;\n        } else if (options.client.reconnect === false) {\n          options.client.reconnect = 0;\n        }\n\n        // Respect infrastructureLogging.level\n        if (typeof options.client.logging === \"undefined\") {\n          options.client.logging = compilerOptions.infrastructureLogging ? compilerOptions.infrastructureLogging.level : \"info\";\n        }\n      }\n      if (typeof options.compress === \"undefined\") {\n        options.compress = true;\n      }\n      if (typeof options.devMiddleware === \"undefined\") {\n        options.devMiddleware = {};\n      }\n\n      // No need to normalize `headers`\n\n      if (typeof options.historyApiFallback === \"undefined\") {\n        options.historyApiFallback = false;\n      } else if (typeof options.historyApiFallback === \"boolean\" && options.historyApiFallback) {\n        options.historyApiFallback = {};\n      }\n\n      // No need to normalize `host`\n\n      options.hot = typeof options.hot === \"boolean\" || options.hot === \"only\" ? options.hot : true;\n      const isHTTPs = Boolean(options.https);\n      const isSPDY = Boolean(options.http2);\n      if (isHTTPs) {\n        // TODO: remove in the next major release\n        util.deprecate(() => {}, \"'https' option is deprecated. Please use the 'server' option.\", \"DEP_WEBPACK_DEV_SERVER_HTTPS\")();\n      }\n      if (isSPDY) {\n        // TODO: remove in the next major release\n        util.deprecate(() => {}, \"'http2' option is deprecated. Please use the 'server' option.\", \"DEP_WEBPACK_DEV_SERVER_HTTP2\")();\n      }\n      options.server = {\n        type:\n        // eslint-disable-next-line no-nested-ternary\n        typeof options.server === \"string\" ? options.server :\n        // eslint-disable-next-line no-nested-ternary\n        typeof (options.server || {}).type === \"string\" ? /** @type {ServerConfiguration} */options.server.type || \"http\" :\n        // eslint-disable-next-line no-nested-ternary\n        isSPDY ? \"spdy\" : isHTTPs ? \"https\" : \"http\",\n        options: {\n          ... /** @type {ServerOptions} */options.https,\n          ... /** @type {ServerConfiguration} */(options.server || {}).options\n        }\n      };\n      if (options.server.type === \"spdy\" && typeof /** @type {ServerOptions} */options.server.options.spdy === \"undefined\") {\n        /** @type {ServerOptions} */\n        options.server.options.spdy = {\n          protocols: [\"h2\", \"http/1.1\"]\n        };\n      }\n      if (options.server.type === \"https\" || options.server.type === \"spdy\") {\n        if (typeof /** @type {ServerOptions} */options.server.options.requestCert === \"undefined\") {\n          /** @type {ServerOptions} */\n          options.server.options.requestCert = false;\n        }\n        const httpsProperties = /** @type {Array<keyof ServerOptions>} */\n        [\"cacert\", \"ca\", \"cert\", \"crl\", \"key\", \"pfx\"];\n        for (const property of httpsProperties) {\n          if (typeof /** @type {ServerOptions} */options.server.options[property] === \"undefined\") {\n            // eslint-disable-next-line no-continue\n            continue;\n          }\n\n          // @ts-ignore\n          if (property === \"cacert\") {\n            // TODO remove the `cacert` option in favor `ca` in the next major release\n            util.deprecate(() => {}, \"The 'cacert' option is deprecated. Please use the 'ca' option.\", \"DEP_WEBPACK_DEV_SERVER_CACERT\")();\n          }\n\n          /** @type {any} */\n          const value = /** @type {ServerOptions} */\n          options.server.options[property];\n          /**\n           * @param {string | Buffer | undefined} item\n           * @returns {string | Buffer | undefined}\n           */\n          const readFile = item => {\n            if (Buffer.isBuffer(item) || typeof item === \"object\" && item !== null && !Array.isArray(item)) {\n              return item;\n            }\n            if (item) {\n              let stats = null;\n              try {\n                stats = fs.lstatSync(fs.realpathSync(item)).isFile();\n              } catch (error) {\n                // Ignore error\n              }\n\n              // It is file\n              return stats ? fs.readFileSync(item) : item;\n            }\n          };\n\n          /** @type {any} */\n          options.server.options[property] = Array.isArray(value) ? value.map(item => readFile(item)) : readFile(value);\n        }\n        let fakeCert;\n        if (! /** @type {ServerOptions} */options.server.options.key || /** @type {ServerOptions} */(!options.server.options).cert) {\n          const certificateDir = Server.findCacheDir();\n          const certificatePath = path.join(certificateDir, \"server.pem\");\n          let certificateExists;\n          try {\n            const certificate = yield fs.promises.stat(certificatePath);\n            certificateExists = certificate.isFile();\n          } catch {\n            certificateExists = false;\n          }\n          if (certificateExists) {\n            const certificateTtl = 1000 * 60 * 60 * 24;\n            const certificateStat = yield fs.promises.stat(certificatePath);\n            const now = Number(new Date());\n\n            // cert is more than 30 days old, kill it with fire\n            if ((now - Number(certificateStat.ctime)) / certificateTtl > 30) {\n              const {\n                promisify\n              } = require(\"util\");\n              const rimraf = require(\"rimraf\");\n              const del = promisify(rimraf);\n              _this.logger.info(\"SSL certificate is more than 30 days old. Removing...\");\n              yield del(certificatePath);\n              certificateExists = false;\n            }\n          }\n          if (!certificateExists) {\n            _this.logger.info(\"Generating SSL certificate...\");\n\n            // @ts-ignore\n            const selfsigned = require(\"selfsigned\");\n            const attributes = [{\n              name: \"commonName\",\n              value: \"localhost\"\n            }];\n            const pems = selfsigned.generate(attributes, {\n              algorithm: \"sha256\",\n              days: 30,\n              keySize: 2048,\n              extensions: [{\n                name: \"basicConstraints\",\n                cA: true\n              }, {\n                name: \"keyUsage\",\n                keyCertSign: true,\n                digitalSignature: true,\n                nonRepudiation: true,\n                keyEncipherment: true,\n                dataEncipherment: true\n              }, {\n                name: \"extKeyUsage\",\n                serverAuth: true,\n                clientAuth: true,\n                codeSigning: true,\n                timeStamping: true\n              }, {\n                name: \"subjectAltName\",\n                altNames: [{\n                  // type 2 is DNS\n                  type: 2,\n                  value: \"localhost\"\n                }, {\n                  type: 2,\n                  value: \"localhost.localdomain\"\n                }, {\n                  type: 2,\n                  value: \"lvh.me\"\n                }, {\n                  type: 2,\n                  value: \"*.lvh.me\"\n                }, {\n                  type: 2,\n                  value: \"[::1]\"\n                }, {\n                  // type 7 is IP\n                  type: 7,\n                  ip: \"127.0.0.1\"\n                }, {\n                  type: 7,\n                  ip: \"fe80::1\"\n                }]\n              }]\n            });\n            yield fs.promises.mkdir(certificateDir, {\n              recursive: true\n            });\n            yield fs.promises.writeFile(certificatePath, pems.private + pems.cert, {\n              encoding: \"utf8\"\n            });\n          }\n          fakeCert = yield fs.promises.readFile(certificatePath);\n          _this.logger.info(`SSL certificate: ${certificatePath}`);\n        }\n        if ( /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */options.server.options.cacert) {\n          if ( /** @type {ServerOptions} */options.server.options.ca) {\n            _this.logger.warn(\"Do not specify 'ca' and 'cacert' options together, the 'ca' option will be used.\");\n          } else {\n            /** @type {ServerOptions} */\n            options.server.options.ca = /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */\n            options.server.options.cacert;\n          }\n          delete /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */options.server.options.cacert;\n        }\n\n        /** @type {ServerOptions} */\n        options.server.options.key = /** @type {ServerOptions} */\n        options.server.options.key || fakeCert;\n        /** @type {ServerOptions} */\n        options.server.options.cert = /** @type {ServerOptions} */\n        options.server.options.cert || fakeCert;\n      }\n      if (typeof options.ipc === \"boolean\") {\n        const isWindows = process.platform === \"win32\";\n        const pipePrefix = isWindows ? \"\\\\\\\\.\\\\pipe\\\\\" : os.tmpdir();\n        const pipeName = \"webpack-dev-server.sock\";\n        options.ipc = path.join(pipePrefix, pipeName);\n      }\n      options.liveReload = typeof options.liveReload !== \"undefined\" ? options.liveReload : true;\n      options.magicHtml = typeof options.magicHtml !== \"undefined\" ? options.magicHtml : true;\n\n      // https://github.com/webpack/webpack-dev-server/issues/1990\n      const defaultOpenOptions = {\n        wait: false\n      };\n      /**\n       * @param {any} target\n       * @returns {NormalizedOpen[]}\n       */\n      // TODO: remove --open-app in favor of --open-app-name\n      const getOpenItemsFromObject = ({\n        target,\n        ...rest\n      }) => {\n        const normalizedOptions = {\n          ...defaultOpenOptions,\n          ...rest\n        };\n        if (typeof normalizedOptions.app === \"string\") {\n          normalizedOptions.app = {\n            name: normalizedOptions.app\n          };\n        }\n        const normalizedTarget = typeof target === \"undefined\" ? \"<url>\" : target;\n        if (Array.isArray(normalizedTarget)) {\n          return normalizedTarget.map(singleTarget => {\n            return {\n              target: singleTarget,\n              options: normalizedOptions\n            };\n          });\n        }\n        return [{\n          target: normalizedTarget,\n          options: normalizedOptions\n        }];\n      };\n      if (typeof options.open === \"undefined\") {\n        /** @type {NormalizedOpen[]} */\n        options.open = [];\n      } else if (typeof options.open === \"boolean\") {\n        /** @type {NormalizedOpen[]} */\n        options.open = options.open ? [{\n          target: \"<url>\",\n          options: /** @type {OpenOptions} */defaultOpenOptions\n        }] : [];\n      } else if (typeof options.open === \"string\") {\n        /** @type {NormalizedOpen[]} */\n        options.open = [{\n          target: options.open,\n          options: defaultOpenOptions\n        }];\n      } else if (Array.isArray(options.open)) {\n        /**\n         * @type {NormalizedOpen[]}\n         */\n        const result = [];\n        options.open.forEach(item => {\n          if (typeof item === \"string\") {\n            result.push({\n              target: item,\n              options: defaultOpenOptions\n            });\n            return;\n          }\n          result.push(...getOpenItemsFromObject(item));\n        });\n\n        /** @type {NormalizedOpen[]} */\n        options.open = result;\n      } else {\n        /** @type {NormalizedOpen[]} */\n        options.open = [...getOpenItemsFromObject(options.open)];\n      }\n      if (options.onAfterSetupMiddleware) {\n        // TODO: remove in the next major release\n        util.deprecate(() => {}, \"'onAfterSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\", `DEP_WEBPACK_DEV_SERVER_ON_AFTER_SETUP_MIDDLEWARE`)();\n      }\n      if (options.onBeforeSetupMiddleware) {\n        // TODO: remove in the next major release\n        util.deprecate(() => {}, \"'onBeforeSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\", `DEP_WEBPACK_DEV_SERVER_ON_BEFORE_SETUP_MIDDLEWARE`)();\n      }\n      if (typeof options.port === \"string\" && options.port !== \"auto\") {\n        options.port = Number(options.port);\n      }\n\n      /**\n       * Assume a proxy configuration specified as:\n       * proxy: {\n       *   'context': { options }\n       * }\n       * OR\n       * proxy: {\n       *   'context': 'target'\n       * }\n       */\n      if (typeof options.proxy !== \"undefined\") {\n        // TODO remove in the next major release, only accept `Array`\n        if (!Array.isArray(options.proxy)) {\n          if (Object.prototype.hasOwnProperty.call(options.proxy, \"target\") || Object.prototype.hasOwnProperty.call(options.proxy, \"router\")) {\n            /** @type {ProxyConfigArray} */\n            options.proxy = [/** @type {ProxyConfigMap} */options.proxy];\n          } else {\n            /** @type {ProxyConfigArray} */\n            options.proxy = Object.keys(options.proxy).map(\n            /**\n             * @param {string} context\n             * @returns {HttpProxyMiddlewareOptions}\n             */\n            context => {\n              let proxyOptions;\n              // For backwards compatibility reasons.\n              const correctedContext = context.replace(/^\\*$/, \"**\").replace(/\\/\\*$/, \"\");\n              if (typeof /** @type {ProxyConfigMap} */options.proxy[context] === \"string\") {\n                proxyOptions = {\n                  context: correctedContext,\n                  target: /** @type {ProxyConfigMap} */\n                  options.proxy[context]\n                };\n              } else {\n                proxyOptions = {\n                  // @ts-ignore\n                  ... /** @type {ProxyConfigMap} */options.proxy[context]\n                };\n                proxyOptions.context = correctedContext;\n              }\n              return proxyOptions;\n            });\n          }\n        }\n\n        /** @type {ProxyConfigArray} */\n        options.proxy = /** @type {ProxyConfigArray} */\n        options.proxy.map(item => {\n          if (typeof item === \"function\") {\n            return item;\n          }\n\n          /**\n           * @param {\"info\" | \"warn\" | \"error\" | \"debug\" | \"silent\" | undefined | \"none\" | \"log\" | \"verbose\"} level\n           * @returns {\"info\" | \"warn\" | \"error\" | \"debug\" | \"silent\" | undefined}\n           */\n          const getLogLevelForProxy = level => {\n            if (level === \"none\") {\n              return \"silent\";\n            }\n            if (level === \"log\") {\n              return \"info\";\n            }\n            if (level === \"verbose\") {\n              return \"debug\";\n            }\n            return level;\n          };\n          if (typeof item.logLevel === \"undefined\") {\n            item.logLevel = getLogLevelForProxy(compilerOptions.infrastructureLogging ? compilerOptions.infrastructureLogging.level : \"info\");\n          }\n          if (typeof item.logProvider === \"undefined\") {\n            item.logProvider = () => _this.logger;\n          }\n          return item;\n        });\n      }\n      if (typeof options.setupExitSignals === \"undefined\") {\n        options.setupExitSignals = true;\n      }\n      if (typeof options.static === \"undefined\") {\n        options.static = [getStaticItem()];\n      } else if (typeof options.static === \"boolean\") {\n        options.static = options.static ? [getStaticItem()] : false;\n      } else if (typeof options.static === \"string\") {\n        options.static = [getStaticItem(options.static)];\n      } else if (Array.isArray(options.static)) {\n        options.static = options.static.map(item => getStaticItem(item));\n      } else {\n        options.static = [getStaticItem(options.static)];\n      }\n      if (typeof options.watchFiles === \"string\") {\n        options.watchFiles = [{\n          paths: options.watchFiles,\n          options: getWatchOptions()\n        }];\n      } else if (typeof options.watchFiles === \"object\" && options.watchFiles !== null && !Array.isArray(options.watchFiles)) {\n        options.watchFiles = [{\n          paths: options.watchFiles.paths,\n          options: getWatchOptions(options.watchFiles.options || {})\n        }];\n      } else if (Array.isArray(options.watchFiles)) {\n        options.watchFiles = options.watchFiles.map(item => {\n          if (typeof item === \"string\") {\n            return {\n              paths: item,\n              options: getWatchOptions()\n            };\n          }\n          return {\n            paths: item.paths,\n            options: getWatchOptions(item.options || {})\n          };\n        });\n      } else {\n        options.watchFiles = [];\n      }\n      const defaultWebSocketServerType = \"ws\";\n      const defaultWebSocketServerOptions = {\n        path: \"/ws\"\n      };\n      if (typeof options.webSocketServer === \"undefined\") {\n        options.webSocketServer = {\n          type: defaultWebSocketServerType,\n          options: defaultWebSocketServerOptions\n        };\n      } else if (typeof options.webSocketServer === \"boolean\" && !options.webSocketServer) {\n        options.webSocketServer = false;\n      } else if (typeof options.webSocketServer === \"string\" || typeof options.webSocketServer === \"function\") {\n        options.webSocketServer = {\n          type: options.webSocketServer,\n          options: defaultWebSocketServerOptions\n        };\n      } else {\n        options.webSocketServer = {\n          type: /** @type {WebSocketServerConfiguration} */\n          options.webSocketServer.type || defaultWebSocketServerType,\n          options: {\n            ...defaultWebSocketServerOptions,\n            ... /** @type {WebSocketServerConfiguration} */\n            options.webSocketServer.options\n          }\n        };\n        const webSocketServer = /** @type {{ type: WebSocketServerConfiguration[\"type\"], options: NonNullable<WebSocketServerConfiguration[\"options\"]> }} */\n        options.webSocketServer;\n        if (typeof webSocketServer.options.port === \"string\") {\n          webSocketServer.options.port = Number(webSocketServer.options.port);\n        }\n      }\n    })();\n  }\n\n  /**\n   * @private\n   * @returns {string}\n   */\n  getClientTransport() {\n    let clientImplementation;\n    let clientImplementationFound = true;\n    const isKnownWebSocketServerImplementation = this.options.webSocketServer && typeof /** @type {WebSocketServerConfiguration} */\n    this.options.webSocketServer.type === \"string\" && (\n    // @ts-ignore\n    this.options.webSocketServer.type === \"ws\" || /** @type {WebSocketServerConfiguration} */\n    this.options.webSocketServer.type === \"sockjs\");\n    let clientTransport;\n    if (this.options.client) {\n      if (typeof /** @type {ClientConfiguration} */\n      this.options.client.webSocketTransport !== \"undefined\") {\n        clientTransport = /** @type {ClientConfiguration} */\n        this.options.client.webSocketTransport;\n      } else if (isKnownWebSocketServerImplementation) {\n        clientTransport = /** @type {WebSocketServerConfiguration} */\n        this.options.webSocketServer.type;\n      } else {\n        clientTransport = \"ws\";\n      }\n    } else {\n      clientTransport = \"ws\";\n    }\n    switch (typeof clientTransport) {\n      case \"string\":\n        // could be 'sockjs', 'ws', or a path that should be required\n        if (clientTransport === \"sockjs\") {\n          clientImplementation = require.resolve(\"../client/clients/SockJSClient\");\n        } else if (clientTransport === \"ws\") {\n          clientImplementation = require.resolve(\"../client/clients/WebSocketClient\");\n        } else {\n          try {\n            clientImplementation = require.resolve(clientTransport);\n          } catch (e) {\n            clientImplementationFound = false;\n          }\n        }\n        break;\n      default:\n        clientImplementationFound = false;\n    }\n    if (!clientImplementationFound) {\n      throw new Error(`${!isKnownWebSocketServerImplementation ? \"When you use custom web socket implementation you must explicitly specify client.webSocketTransport. \" : \"\"}client.webSocketTransport must be a string denoting a default implementation (e.g. 'sockjs', 'ws') or a full path to a JS file via require.resolve(...) which exports a class `);\n    }\n    return (/** @type {string} */clientImplementation\n    );\n  }\n\n  /**\n   * @private\n   * @returns {string}\n   */\n  getServerTransport() {\n    let implementation;\n    let implementationFound = true;\n    switch (typeof /** @type {WebSocketServerConfiguration} */\n    this.options.webSocketServer.type) {\n      case \"string\":\n        // Could be 'sockjs', in the future 'ws', or a path that should be required\n        if ( /** @type {WebSocketServerConfiguration} */this.options.webSocketServer.type === \"sockjs\") {\n          implementation = require(\"./servers/SockJSServer\");\n        } else if ( /** @type {WebSocketServerConfiguration} */this.options.webSocketServer.type === \"ws\") {\n          implementation = require(\"./servers/WebsocketServer\");\n        } else {\n          try {\n            // eslint-disable-next-line import/no-dynamic-require\n            implementation = require( /** @type {WebSocketServerConfiguration} */this.options.webSocketServer.type);\n          } catch (error) {\n            implementationFound = false;\n          }\n        }\n        break;\n      case \"function\":\n        implementation = /** @type {WebSocketServerConfiguration} */this.options.webSocketServer.type;\n        break;\n      default:\n        implementationFound = false;\n    }\n    if (!implementationFound) {\n      throw new Error(\"webSocketServer (webSocketServer.type) must be a string denoting a default implementation (e.g. 'ws', 'sockjs'), a full path to \" + \"a JS file which exports a class extending BaseServer (webpack-dev-server/lib/servers/BaseServer.js) \" + \"via require.resolve(...), or the class itself which extends BaseServer\");\n    }\n    return implementation;\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupProgressPlugin() {\n    const {\n      ProgressPlugin\n    } = /** @type {MultiCompiler}*/\n    this.compiler.compilers ? /** @type {MultiCompiler}*/this.compiler.compilers[0].webpack : /** @type {Compiler}*/this.compiler.webpack ||\n    // TODO remove me after drop webpack v4\n    require(\"webpack\");\n    new ProgressPlugin(\n    /**\n     * @param {number} percent\n     * @param {string} msg\n     * @param {string} addInfo\n     * @param {string} pluginName\n     */\n    (percent, msg, addInfo, pluginName) => {\n      percent = Math.floor(percent * 100);\n      if (percent === 100) {\n        msg = \"Compilation completed\";\n      }\n      if (addInfo) {\n        msg = `${msg} (${addInfo})`;\n      }\n      if (this.webSocketServer) {\n        this.sendMessage(this.webSocketServer.clients, \"progress-update\", {\n          percent,\n          msg,\n          pluginName\n        });\n      }\n      if (this.server) {\n        this.server.emit(\"progress-update\", {\n          percent,\n          msg,\n          pluginName\n        });\n      }\n    }).apply(this.compiler);\n  }\n\n  /**\n   * @private\n   * @returns {Promise<void>}\n   */\n  initialize() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (_this2.options.webSocketServer) {\n        const compilers = /** @type {MultiCompiler} */\n        _this2.compiler.compilers || [_this2.compiler];\n        compilers.forEach(compiler => {\n          _this2.addAdditionalEntries(compiler);\n          const webpack = compiler.webpack || require(\"webpack\");\n          new webpack.ProvidePlugin({\n            __webpack_dev_server_client__: _this2.getClientTransport()\n          }).apply(compiler);\n\n          // TODO remove after drop webpack v4 support\n          compiler.options.plugins = compiler.options.plugins || [];\n          if (_this2.options.hot) {\n            const HMRPluginExists = compiler.options.plugins.find(p => p.constructor === webpack.HotModuleReplacementPlugin);\n            if (HMRPluginExists) {\n              _this2.logger.warn(`\"hot: true\" automatically applies HMR plugin, you don't have to add it manually to your webpack configuration.`);\n            } else {\n              // Apply the HMR plugin\n              const plugin = new webpack.HotModuleReplacementPlugin();\n              plugin.apply(compiler);\n            }\n          }\n        });\n        if (_this2.options.client && /** @type {ClientConfiguration} */_this2.options.client.progress) {\n          _this2.setupProgressPlugin();\n        }\n      }\n      _this2.setupHooks();\n      _this2.setupApp();\n      _this2.setupHostHeaderCheck();\n      _this2.setupDevMiddleware();\n      // Should be after `webpack-dev-middleware`, otherwise other middlewares might rewrite response\n      _this2.setupBuiltInRoutes();\n      _this2.setupWatchFiles();\n      _this2.setupWatchStaticFiles();\n      _this2.setupMiddlewares();\n      _this2.createServer();\n      if (_this2.options.setupExitSignals) {\n        const signals = [\"SIGINT\", \"SIGTERM\"];\n        let needForceShutdown = false;\n        signals.forEach(signal => {\n          const listener = () => {\n            if (needForceShutdown) {\n              process.exit();\n            }\n            _this2.logger.info(\"Gracefully shutting down. To force exit, press ^C again. Please wait...\");\n            needForceShutdown = true;\n            _this2.stopCallback(() => {\n              if (typeof _this2.compiler.close === \"function\") {\n                _this2.compiler.close(() => {\n                  process.exit();\n                });\n              } else {\n                process.exit();\n              }\n            });\n          };\n          _this2.listeners.push({\n            name: signal,\n            listener\n          });\n          process.on(signal, listener);\n        });\n      }\n\n      // Proxy WebSocket without the initial http request\n      // https://github.com/chimurai/http-proxy-middleware#external-websocket-upgrade\n      /** @type {RequestHandler[]} */\n      _this2.webSocketProxies.forEach(webSocketProxy => {\n        /** @type {import(\"http\").Server} */\n        _this2.server.on(\"upgrade\", /** @type {RequestHandler & { upgrade: NonNullable<RequestHandler[\"upgrade\"]> }} */\n        webSocketProxy.upgrade);\n      }, _this2);\n    })();\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupApp() {\n    /** @type {import(\"express\").Application | undefined}*/\n    // eslint-disable-next-line new-cap\n    this.app = new /** @type {any} */express();\n  }\n\n  /**\n   * @private\n   * @param {Stats | MultiStats} statsObj\n   * @returns {StatsCompilation}\n   */\n  getStats(statsObj) {\n    const stats = Server.DEFAULT_STATS;\n    const compilerOptions = this.getCompilerOptions();\n\n    // @ts-ignore\n    if (compilerOptions.stats && compilerOptions.stats.warningsFilter) {\n      // @ts-ignore\n      stats.warningsFilter = compilerOptions.stats.warningsFilter;\n    }\n    return statsObj.toJson(stats);\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupHooks() {\n    this.compiler.hooks.invalid.tap(\"webpack-dev-server\", () => {\n      if (this.webSocketServer) {\n        this.sendMessage(this.webSocketServer.clients, \"invalid\");\n      }\n    });\n    this.compiler.hooks.done.tap(\"webpack-dev-server\",\n    /**\n     * @param {Stats | MultiStats} stats\n     */\n    stats => {\n      if (this.webSocketServer) {\n        this.sendStats(this.webSocketServer.clients, this.getStats(stats));\n      }\n\n      /**\n       * @private\n       * @type {Stats | MultiStats}\n       */\n      this.stats = stats;\n    });\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupHostHeaderCheck() {\n    /** @type {import(\"express\").Application} */\n    this.app.all(\"*\",\n    /**\n     * @param {Request} req\n     * @param {Response} res\n     * @param {NextFunction} next\n     * @returns {void}\n     */\n    (req, res, next) => {\n      if (this.checkHeader( /** @type {{ [key: string]: string | undefined }} */\n      req.headers, \"host\")) {\n        return next();\n      }\n      res.send(\"Invalid Host header\");\n    });\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupDevMiddleware() {\n    const webpackDevMiddleware = require(\"webpack-dev-middleware\");\n\n    // middleware for serving webpack bundle\n    this.middleware = webpackDevMiddleware(this.compiler, this.options.devMiddleware);\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupBuiltInRoutes() {\n    const {\n      app,\n      middleware\n    } = this;\n\n    /** @type {import(\"express\").Application} */\n    app.get(\"/__webpack_dev_server__/sockjs.bundle.js\",\n    /**\n     * @param {Request} req\n     * @param {Response} res\n     * @returns {void}\n     */\n    (req, res) => {\n      res.setHeader(\"Content-Type\", \"application/javascript\");\n      const clientPath = path.join(__dirname, \"..\", \"client\");\n      res.sendFile(path.join(clientPath, \"modules/sockjs-client/index.js\"));\n    });\n\n    /** @type {import(\"express\").Application} */\n    app.get(\"/webpack-dev-server/invalidate\",\n    /**\n     * @param {Request} _req\n     * @param {Response} res\n     * @returns {void}\n     */\n    (_req, res) => {\n      this.invalidate();\n      res.end();\n    });\n\n    /** @type {import(\"express\").Application} */\n    app.get(\"/webpack-dev-server\",\n    /**\n     * @param {Request} req\n     * @param {Response} res\n     * @returns {void}\n     */\n    (req, res) => {\n      /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n      middleware.waitUntilValid(stats => {\n        res.setHeader(\"Content-Type\", \"text/html\");\n        res.write('<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body>');\n        const statsForPrint = typeof /** @type {MultiStats} */stats.stats !== \"undefined\" ? /** @type {MultiStats} */stats.toJson().children : [/** @type {Stats} */stats.toJson()];\n        res.write(`<h1>Assets Report:</h1>`);\n\n        /**\n         * @type {StatsCompilation[]}\n         */\n        statsForPrint.forEach((item, index) => {\n          res.write(\"<div>\");\n          const name =\n          // eslint-disable-next-line no-nested-ternary\n          typeof item.name !== \"undefined\" ? item.name : /** @type {MultiStats} */stats.stats ? `unnamed[${index}]` : \"unnamed\";\n          res.write(`<h2>Compilation: ${name}</h2>`);\n          res.write(\"<ul>\");\n          const publicPath = item.publicPath === \"auto\" ? \"\" : item.publicPath;\n          for (const asset of /** @type {NonNullable<StatsCompilation[\"assets\"]>} */\n          item.assets) {\n            const assetName = asset.name;\n            const assetURL = `${publicPath}${assetName}`;\n            res.write(`<li>\n              <strong><a href=\"${assetURL}\" target=\"_blank\">${assetName}</a></strong>\n            </li>`);\n          }\n          res.write(\"</ul>\");\n          res.write(\"</div>\");\n        });\n        res.end(\"</body></html>\");\n      });\n    });\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupWatchStaticFiles() {\n    if ( /** @type {NormalizedStatic[]} */this.options.static.length > 0) {\n      /** @type {NormalizedStatic[]} */\n      this.options.static.forEach(staticOption => {\n        if (staticOption.watch) {\n          this.watchFiles(staticOption.directory, staticOption.watch);\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupWatchFiles() {\n    const {\n      watchFiles\n    } = this.options;\n    if ( /** @type {WatchFiles[]} */watchFiles.length > 0) {\n      /** @type {WatchFiles[]} */\n      watchFiles.forEach(item => {\n        this.watchFiles(item.paths, item.options);\n      });\n    }\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupMiddlewares() {\n    /**\n     * @type {Array<Middleware>}\n     */\n    let middlewares = [];\n\n    // compress is placed last and uses unshift so that it will be the first middleware used\n    if (this.options.compress) {\n      const compression = require(\"compression\");\n      middlewares.push({\n        name: \"compression\",\n        middleware: compression()\n      });\n    }\n    if (typeof this.options.onBeforeSetupMiddleware === \"function\") {\n      this.options.onBeforeSetupMiddleware(this);\n    }\n    if (typeof this.options.headers !== \"undefined\") {\n      middlewares.push({\n        name: \"set-headers\",\n        path: \"*\",\n        middleware: this.setHeaders.bind(this)\n      });\n    }\n    middlewares.push({\n      name: \"webpack-dev-middleware\",\n      middleware: /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n      this.middleware\n    });\n    if (this.options.proxy) {\n      const {\n        createProxyMiddleware\n      } = require(\"http-proxy-middleware\");\n\n      /**\n       * @param {ProxyConfigArrayItem} proxyConfig\n       * @returns {RequestHandler | undefined}\n       */\n      const getProxyMiddleware = proxyConfig => {\n        // It is possible to use the `bypass` method without a `target` or `router`.\n        // However, the proxy middleware has no use in this case, and will fail to instantiate.\n        if (proxyConfig.target) {\n          const context = proxyConfig.context || proxyConfig.path;\n          return createProxyMiddleware( /** @type {string} */context, proxyConfig);\n        }\n        if (proxyConfig.router) {\n          return createProxyMiddleware(proxyConfig);\n        }\n      };\n\n      /**\n       * Assume a proxy configuration specified as:\n       * proxy: [\n       *   {\n       *     context: \"value\",\n       *     ...options,\n       *   },\n       *   // or:\n       *   function() {\n       *     return {\n       *       context: \"context\",\n       *       ...options,\n       *     };\n       *   }\n       * ]\n       */\n      /** @type {ProxyConfigArray} */\n      this.options.proxy.forEach(proxyConfigOrCallback => {\n        /**\n         * @type {RequestHandler}\n         */\n        let proxyMiddleware;\n        let proxyConfig = typeof proxyConfigOrCallback === \"function\" ? proxyConfigOrCallback() : proxyConfigOrCallback;\n        proxyMiddleware = /** @type {RequestHandler} */\n        getProxyMiddleware(proxyConfig);\n        if (proxyConfig.ws) {\n          this.webSocketProxies.push(proxyMiddleware);\n        }\n\n        /**\n         * @param {Request} req\n         * @param {Response} res\n         * @param {NextFunction} next\n         * @returns {Promise<void>}\n         */\n        const handler = /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (req, res, next) {\n            if (typeof proxyConfigOrCallback === \"function\") {\n              const newProxyConfig = proxyConfigOrCallback(req, res, next);\n              if (newProxyConfig !== proxyConfig) {\n                proxyConfig = newProxyConfig;\n                proxyMiddleware = /** @type {RequestHandler} */\n                getProxyMiddleware(proxyConfig);\n              }\n            }\n\n            // - Check if we have a bypass function defined\n            // - In case the bypass function is defined we'll retrieve the\n            // bypassUrl from it otherwise bypassUrl would be null\n            // TODO remove in the next major in favor `context` and `router` options\n            const isByPassFuncDefined = typeof proxyConfig.bypass === \"function\";\n            const bypassUrl = isByPassFuncDefined ? yield (/** @type {ByPass} */proxyConfig.bypass(req, res, proxyConfig)\n            ) : null;\n            if (typeof bypassUrl === \"boolean\") {\n              // skip the proxy\n              // @ts-ignore\n              req.url = null;\n              next();\n            } else if (typeof bypassUrl === \"string\") {\n              // byPass to that url\n              req.url = bypassUrl;\n              next();\n            } else if (proxyMiddleware) {\n              return proxyMiddleware(req, res, next);\n            } else {\n              next();\n            }\n          });\n          return function handler(_x, _x2, _x3) {\n            return _ref.apply(this, arguments);\n          };\n        }();\n        middlewares.push({\n          name: \"http-proxy-middleware\",\n          middleware: handler\n        });\n        // Also forward error requests to the proxy so it can handle them.\n        middlewares.push({\n          name: \"http-proxy-middleware-error-handler\",\n          middleware:\n          /**\n           * @param {Error} error\n           * @param {Request} req\n           * @param {Response} res\n           * @param {NextFunction} next\n           * @returns {any}\n           */\n          (error, req, res, next) => handler(req, res, next)\n        });\n      });\n      middlewares.push({\n        name: \"webpack-dev-middleware\",\n        middleware: /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n        this.middleware\n      });\n    }\n    if ( /** @type {NormalizedStatic[]} */this.options.static.length > 0) {\n      /** @type {NormalizedStatic[]} */\n      this.options.static.forEach(staticOption => {\n        staticOption.publicPath.forEach(publicPath => {\n          middlewares.push({\n            name: \"express-static\",\n            path: publicPath,\n            middleware: express.static(staticOption.directory, staticOption.staticOptions)\n          });\n        });\n      });\n    }\n    if (this.options.historyApiFallback) {\n      const connectHistoryApiFallback = require(\"connect-history-api-fallback\");\n      const {\n        historyApiFallback\n      } = this.options;\n      if (typeof /** @type {ConnectHistoryApiFallbackOptions} */\n      historyApiFallback.logger === \"undefined\" && ! /** @type {ConnectHistoryApiFallbackOptions} */\n      historyApiFallback.verbose) {\n        // @ts-ignore\n        historyApiFallback.logger = this.logger.log.bind(this.logger, \"[connect-history-api-fallback]\");\n      }\n\n      // Fall back to /index.html if nothing else matches.\n      middlewares.push({\n        name: \"connect-history-api-fallback\",\n        middleware: connectHistoryApiFallback( /** @type {ConnectHistoryApiFallbackOptions} */\n        historyApiFallback)\n      });\n\n      // include our middleware to ensure\n      // it is able to handle '/index.html' request after redirect\n      middlewares.push({\n        name: \"webpack-dev-middleware\",\n        middleware: /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n        this.middleware\n      });\n      if ( /** @type {NormalizedStatic[]} */this.options.static.length > 0) {\n        /** @type {NormalizedStatic[]} */\n        this.options.static.forEach(staticOption => {\n          staticOption.publicPath.forEach(publicPath => {\n            middlewares.push({\n              name: \"express-static\",\n              path: publicPath,\n              middleware: express.static(staticOption.directory, staticOption.staticOptions)\n            });\n          });\n        });\n      }\n    }\n    if ( /** @type {NormalizedStatic[]} */this.options.static.length > 0) {\n      const serveIndex = require(\"serve-index\");\n\n      /** @type {NormalizedStatic[]} */\n      this.options.static.forEach(staticOption => {\n        staticOption.publicPath.forEach(publicPath => {\n          if (staticOption.serveIndex) {\n            middlewares.push({\n              name: \"serve-index\",\n              path: publicPath,\n              /**\n               * @param {Request} req\n               * @param {Response} res\n               * @param {NextFunction} next\n               * @returns {void}\n               */\n              middleware: (req, res, next) => {\n                // serve-index doesn't fallthrough non-get/head request to next middleware\n                if (req.method !== \"GET\" && req.method !== \"HEAD\") {\n                  return next();\n                }\n                serveIndex(staticOption.directory, /** @type {ServeIndexOptions} */\n                staticOption.serveIndex)(req, res, next);\n              }\n            });\n          }\n        });\n      });\n    }\n    if (this.options.magicHtml) {\n      middlewares.push({\n        name: \"serve-magic-html\",\n        middleware: this.serveMagicHtml.bind(this)\n      });\n    }\n\n    // Register this middleware always as the last one so that it's only used as a\n    // fallback when no other middleware responses.\n    middlewares.push({\n      name: \"options-middleware\",\n      path: \"*\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @param {NextFunction} next\n       * @returns {void}\n       */\n      middleware: (req, res, next) => {\n        if (req.method === \"OPTIONS\") {\n          res.statusCode = 204;\n          res.setHeader(\"Content-Length\", \"0\");\n          res.end();\n          return;\n        }\n        next();\n      }\n    });\n    if (typeof this.options.setupMiddlewares === \"function\") {\n      middlewares = this.options.setupMiddlewares(middlewares, this);\n    }\n    middlewares.forEach(middleware => {\n      if (typeof middleware === \"function\") {\n        /** @type {import(\"express\").Application} */\n        this.app.use(middleware);\n      } else if (typeof middleware.path !== \"undefined\") {\n        /** @type {import(\"express\").Application} */\n        this.app.use(middleware.path, middleware.middleware);\n      } else {\n        /** @type {import(\"express\").Application} */\n        this.app.use(middleware.middleware);\n      }\n    });\n    if (typeof this.options.onAfterSetupMiddleware === \"function\") {\n      this.options.onAfterSetupMiddleware(this);\n    }\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  createServer() {\n    const {\n      type,\n      options\n    } = /** @type {ServerConfiguration} */\n    this.options.server;\n\n    /** @type {import(\"http\").Server | undefined | null} */\n    // eslint-disable-next-line import/no-dynamic-require\n    this.server = require( /** @type {string} */type).createServer(options, this.app);\n\n    /** @type {import(\"http\").Server} */\n    this.server.on(\"connection\",\n    /**\n     * @param {Socket} socket\n     */\n    socket => {\n      // Add socket to list\n      this.sockets.push(socket);\n      socket.once(\"close\", () => {\n        // Remove socket from list\n        this.sockets.splice(this.sockets.indexOf(socket), 1);\n      });\n    });\n\n    /** @type {import(\"http\").Server} */\n    this.server.on(\"error\",\n    /**\n     * @param {Error} error\n     */\n    error => {\n      throw error;\n    });\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  // TODO: remove `--web-socket-server` in favor of `--web-socket-server-type`\n  createWebSocketServer() {\n    /** @type {WebSocketServerImplementation | undefined | null} */\n    this.webSocketServer = new ( /** @type {any} */this.getServerTransport())(this);\n    /** @type {WebSocketServerImplementation} */\n    this.webSocketServer.implementation.on(\"connection\",\n    /**\n     * @param {ClientConnection} client\n     * @param {IncomingMessage} request\n     */\n    (client, request) => {\n      /** @type {{ [key: string]: string | undefined } | undefined} */\n      const headers =\n      // eslint-disable-next-line no-nested-ternary\n      typeof request !== \"undefined\" ? /** @type {{ [key: string]: string | undefined }} */\n      request.headers : typeof /** @type {import(\"sockjs\").Connection} */client.headers !== \"undefined\" ? /** @type {import(\"sockjs\").Connection} */client.headers :\n      // eslint-disable-next-line no-undefined\n      undefined;\n      if (!headers) {\n        this.logger.warn('webSocketServer implementation must pass headers for the \"connection\" event');\n      }\n      if (!headers || !this.checkHeader(headers, \"host\") || !this.checkHeader(headers, \"origin\")) {\n        this.sendMessage([client], \"error\", \"Invalid Host/Origin header\");\n\n        // With https enabled, the sendMessage above is encrypted asynchronously so not yet sent\n        // Terminate would prevent it sending, so use close to allow it to be sent\n        client.close();\n        return;\n      }\n      if (this.options.hot === true || this.options.hot === \"only\") {\n        this.sendMessage([client], \"hot\");\n      }\n      if (this.options.liveReload) {\n        this.sendMessage([client], \"liveReload\");\n      }\n      if (this.options.client && /** @type {ClientConfiguration} */\n      this.options.client.progress) {\n        this.sendMessage([client], \"progress\", /** @type {ClientConfiguration} */\n        this.options.client.progress);\n      }\n      if (this.options.client && /** @type {ClientConfiguration} */this.options.client.reconnect) {\n        this.sendMessage([client], \"reconnect\", /** @type {ClientConfiguration} */\n        this.options.client.reconnect);\n      }\n      if (this.options.client && /** @type {ClientConfiguration} */\n      this.options.client.overlay) {\n        this.sendMessage([client], \"overlay\", /** @type {ClientConfiguration} */\n        this.options.client.overlay);\n      }\n      if (!this.stats) {\n        return;\n      }\n      this.sendStats([client], this.getStats(this.stats), true);\n    });\n  }\n\n  /**\n   * @private\n   * @param {string} defaultOpenTarget\n   * @returns {void}\n   */\n  openBrowser(defaultOpenTarget) {\n    const open = require(\"open\");\n    Promise.all( /** @type {NormalizedOpen[]} */\n    this.options.open.map(item => {\n      /**\n       * @type {string}\n       */\n      let openTarget;\n      if (item.target === \"<url>\") {\n        openTarget = defaultOpenTarget;\n      } else {\n        openTarget = Server.isAbsoluteURL(item.target) ? item.target : new URL(item.target, defaultOpenTarget).toString();\n      }\n      return open(openTarget, item.options).catch(() => {\n        this.logger.warn(`Unable to open \"${openTarget}\" page${item.options.app ? ` in \"${\n        /** @type {import(\"open\").App} */item.options.app.name}\" app${\n        /** @type {import(\"open\").App} */item.options.app.arguments ? ` with \"${\n        /** @type {import(\"open\").App} */item.options.app.arguments.join(\" \")}\" arguments` : \"\"}` : \"\"}. If you are running in a headless environment, please do not use the \"open\" option or related flags like \"--open\", \"--open-target\", and \"--open-app\".`);\n      });\n    }));\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  runBonjour() {\n    const {\n      Bonjour\n    } = require(\"bonjour-service\");\n    /**\n     * @private\n     * @type {Bonjour | undefined}\n     */\n    this.bonjour = new Bonjour();\n    this.bonjour.publish({\n      // @ts-expect-error\n      name: `Webpack Dev Server ${os.hostname()}:${this.options.port}`,\n      // @ts-expect-error\n      port: /** @type {number} */this.options.port,\n      // @ts-expect-error\n      type: /** @type {ServerConfiguration} */\n      this.options.server.type === \"http\" ? \"http\" : \"https\",\n      subtypes: [\"webpack\"],\n      ... /** @type {BonjourOptions} */this.options.bonjour\n    });\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  stopBonjour(callback = () => {}) {\n    /** @type {Bonjour} */\n    this.bonjour.unpublishAll(() => {\n      /** @type {Bonjour} */\n      this.bonjour.destroy();\n      if (callback) {\n        callback();\n      }\n    });\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  logStatus() {\n    const {\n      isColorSupported,\n      cyan,\n      red\n    } = require(\"colorette\");\n\n    /**\n     * @param {Compiler[\"options\"]} compilerOptions\n     * @returns {boolean}\n     */\n    const getColorsOption = compilerOptions => {\n      /**\n       * @type {boolean}\n       */\n      let colorsEnabled;\n      if (compilerOptions.stats && typeof /** @type {StatsOptions} */compilerOptions.stats.colors !== \"undefined\") {\n        colorsEnabled = /** @type {boolean} */\n        /** @type {StatsOptions} */compilerOptions.stats.colors;\n      } else {\n        colorsEnabled = isColorSupported;\n      }\n      return colorsEnabled;\n    };\n    const colors = {\n      /**\n       * @param {boolean} useColor\n       * @param {string} msg\n       * @returns {string}\n       */\n      info(useColor, msg) {\n        if (useColor) {\n          return cyan(msg);\n        }\n        return msg;\n      },\n      /**\n       * @param {boolean} useColor\n       * @param {string} msg\n       * @returns {string}\n       */\n      error(useColor, msg) {\n        if (useColor) {\n          return red(msg);\n        }\n        return msg;\n      }\n    };\n    const useColor = getColorsOption(this.getCompilerOptions());\n    if (this.options.ipc) {\n      this.logger.info(`Project is running at: \"${\n      /** @type {import(\"http\").Server} */this.server.address()}\"`);\n    } else {\n      const protocol = /** @type {ServerConfiguration} */\n      this.options.server.type === \"http\" ? \"http\" : \"https\";\n      const {\n        address,\n        port\n      } = /** @type {import(\"net\").AddressInfo} */\n\n      /** @type {import(\"http\").Server} */\n      this.server.address();\n      /**\n       * @param {string} newHostname\n       * @returns {string}\n       */\n      const prettyPrintURL = newHostname => url.format({\n        protocol,\n        hostname: newHostname,\n        port,\n        pathname: \"/\"\n      });\n      let server;\n      let localhost;\n      let loopbackIPv4;\n      let loopbackIPv6;\n      let networkUrlIPv4;\n      let networkUrlIPv6;\n      if (this.options.host) {\n        if (this.options.host === \"localhost\") {\n          localhost = prettyPrintURL(\"localhost\");\n        } else {\n          let isIP;\n          try {\n            isIP = ipaddr.parse(this.options.host);\n          } catch (error) {\n            // Ignore\n          }\n          if (!isIP) {\n            server = prettyPrintURL(this.options.host);\n          }\n        }\n      }\n      const parsedIP = ipaddr.parse(address);\n      if (parsedIP.range() === \"unspecified\") {\n        localhost = prettyPrintURL(\"localhost\");\n        const networkIPv4 = Server.internalIPSync(\"v4\");\n        if (networkIPv4) {\n          networkUrlIPv4 = prettyPrintURL(networkIPv4);\n        }\n        const networkIPv6 = Server.internalIPSync(\"v6\");\n        if (networkIPv6) {\n          networkUrlIPv6 = prettyPrintURL(networkIPv6);\n        }\n      } else if (parsedIP.range() === \"loopback\") {\n        if (parsedIP.kind() === \"ipv4\") {\n          loopbackIPv4 = prettyPrintURL(parsedIP.toString());\n        } else if (parsedIP.kind() === \"ipv6\") {\n          loopbackIPv6 = prettyPrintURL(parsedIP.toString());\n        }\n      } else {\n        networkUrlIPv4 = parsedIP.kind() === \"ipv6\" && /** @type {IPv6} */\n        parsedIP.isIPv4MappedAddress() ? prettyPrintURL( /** @type {IPv6} */\n        parsedIP.toIPv4Address().toString()) : prettyPrintURL(address);\n        if (parsedIP.kind() === \"ipv6\") {\n          networkUrlIPv6 = prettyPrintURL(address);\n        }\n      }\n      this.logger.info(\"Project is running at:\");\n      if (server) {\n        this.logger.info(`Server: ${colors.info(useColor, server)}`);\n      }\n      if (localhost || loopbackIPv4 || loopbackIPv6) {\n        const loopbacks = [];\n        if (localhost) {\n          loopbacks.push([colors.info(useColor, localhost)]);\n        }\n        if (loopbackIPv4) {\n          loopbacks.push([colors.info(useColor, loopbackIPv4)]);\n        }\n        if (loopbackIPv6) {\n          loopbacks.push([colors.info(useColor, loopbackIPv6)]);\n        }\n        this.logger.info(`Loopback: ${loopbacks.join(\", \")}`);\n      }\n      if (networkUrlIPv4) {\n        this.logger.info(`On Your Network (IPv4): ${colors.info(useColor, networkUrlIPv4)}`);\n      }\n      if (networkUrlIPv6) {\n        this.logger.info(`On Your Network (IPv6): ${colors.info(useColor, networkUrlIPv6)}`);\n      }\n      if ( /** @type {NormalizedOpen[]} */this.options.open.length > 0) {\n        const openTarget = prettyPrintURL(this.options.host || \"localhost\");\n        this.openBrowser(openTarget);\n      }\n    }\n    if ( /** @type {NormalizedStatic[]} */this.options.static.length > 0) {\n      this.logger.info(`Content not from webpack is served from '${colors.info(useColor, /** @type {NormalizedStatic[]} */\n      this.options.static.map(staticOption => staticOption.directory).join(\", \"))}' directory`);\n    }\n    if (this.options.historyApiFallback) {\n      this.logger.info(`404s will fallback to '${colors.info(useColor, /** @type {ConnectHistoryApiFallbackOptions} */this.options.historyApiFallback.index || \"/index.html\")}'`);\n    }\n    if (this.options.bonjour) {\n      const bonjourProtocol = /** @type {BonjourOptions} */\n      this.options.bonjour.type || /** @type {ServerConfiguration} */\n      this.options.server.type === \"http\" ? \"http\" : \"https\";\n      this.logger.info(`Broadcasting \"${bonjourProtocol}\" with subtype of \"webpack\" via ZeroConf DNS (Bonjour)`);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Request} req\n   * @param {Response} res\n   * @param {NextFunction} next\n   */\n  setHeaders(req, res, next) {\n    let {\n      headers\n    } = this.options;\n    if (headers) {\n      if (typeof headers === \"function\") {\n        headers = headers(req, res, /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n        this.middleware.context);\n      }\n\n      /**\n       * @type {{key: string, value: string}[]}\n       */\n      const allHeaders = [];\n      if (!Array.isArray(headers)) {\n        // eslint-disable-next-line guard-for-in\n        for (const name in headers) {\n          // @ts-ignore\n          allHeaders.push({\n            key: name,\n            value: headers[name]\n          });\n        }\n        headers = allHeaders;\n      }\n      headers.forEach(\n      /**\n       * @param {{key: string, value: any}} header\n       */\n      header => {\n        res.setHeader(header.key, header.value);\n      });\n    }\n    next();\n  }\n\n  /**\n   * @private\n   * @param {{ [key: string]: string | undefined }} headers\n   * @param {string} headerToCheck\n   * @returns {boolean}\n   */\n  checkHeader(headers, headerToCheck) {\n    // allow user to opt out of this security check, at their own risk\n    // by explicitly enabling allowedHosts\n    if (this.options.allowedHosts === \"all\") {\n      return true;\n    }\n\n    // get the Host header and extract hostname\n    // we don't care about port not matching\n    const hostHeader = headers[headerToCheck];\n    if (!hostHeader) {\n      return false;\n    }\n    if (/^(file|.+-extension):/i.test(hostHeader)) {\n      return true;\n    }\n\n    // use the node url-parser to retrieve the hostname from the host-header.\n    const hostname = url.parse(\n    // if hostHeader doesn't have scheme, add // for parsing.\n    /^(.+:)?\\/\\//.test(hostHeader) ? hostHeader : `//${hostHeader}`, false, true).hostname;\n\n    // always allow requests with explicit IPv4 or IPv6-address.\n    // A note on IPv6 addresses:\n    // hostHeader will always contain the brackets denoting\n    // an IPv6-address in URLs,\n    // these are removed from the hostname in url.parse(),\n    // so we have the pure IPv6-address in hostname.\n    // For convenience, always allow localhost (hostname === 'localhost')\n    // and its subdomains (hostname.endsWith(\".localhost\")).\n    // allow hostname of listening address  (hostname === this.options.host)\n    const isValidHostname = hostname !== null && ipaddr.IPv4.isValid(hostname) || hostname !== null && ipaddr.IPv6.isValid(hostname) || hostname === \"localhost\" || hostname !== null && hostname.endsWith(\".localhost\") || hostname === this.options.host;\n    if (isValidHostname) {\n      return true;\n    }\n    const {\n      allowedHosts\n    } = this.options;\n\n    // always allow localhost host, for convenience\n    // allow if hostname is in allowedHosts\n    if (Array.isArray(allowedHosts) && allowedHosts.length > 0) {\n      for (let hostIdx = 0; hostIdx < allowedHosts.length; hostIdx++) {\n        const allowedHost = allowedHosts[hostIdx];\n        if (allowedHost === hostname) {\n          return true;\n        }\n\n        // support \".\" as a subdomain wildcard\n        // e.g. \".example.com\" will allow \"example.com\", \"www.example.com\", \"subdomain.example.com\", etc\n        if (allowedHost[0] === \".\") {\n          // \"example.com\"  (hostname === allowedHost.substring(1))\n          // \"*.example.com\"  (hostname.endsWith(allowedHost))\n          if (hostname === allowedHost.substring(1) || /** @type {string} */hostname.endsWith(allowedHost)) {\n            return true;\n          }\n        }\n      }\n    }\n\n    // Also allow if `client.webSocketURL.hostname` provided\n    if (this.options.client && typeof /** @type {ClientConfiguration} */this.options.client.webSocketURL !== \"undefined\") {\n      return (/** @type {WebSocketURL} */\n        /** @type {ClientConfiguration} */this.options.client.webSocketURL.hostname === hostname\n      );\n    }\n\n    // disallow\n    return false;\n  }\n\n  /**\n   * @param {ClientConnection[]} clients\n   * @param {string} type\n   * @param {any} [data]\n   * @param {any} [params]\n   */\n  // eslint-disable-next-line class-methods-use-this\n  sendMessage(clients, type, data, params) {\n    for (const client of clients) {\n      // `sockjs` uses `1` to indicate client is ready to accept data\n      // `ws` uses `WebSocket.OPEN`, but it is mean `1` too\n      if (client.readyState === 1) {\n        client.send(JSON.stringify({\n          type,\n          data,\n          params\n        }));\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Request} req\n   * @param {Response} res\n   * @param {NextFunction} next\n   * @returns {void}\n   */\n  serveMagicHtml(req, res, next) {\n    if (req.method !== \"GET\" && req.method !== \"HEAD\") {\n      return next();\n    }\n\n    /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n    this.middleware.waitUntilValid(() => {\n      const _path = req.path;\n      try {\n        const filename = /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n        this.middleware.getFilenameFromUrl(`${_path}.js`);\n        const isFile = /** @type {Compiler[\"outputFileSystem\"] & { statSync: import(\"fs\").StatSyncFn }}*/\n        /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n        this.middleware.context.outputFileSystem.statSync( /** @type {import(\"fs\").PathLike} */filename).isFile();\n        if (!isFile) {\n          return next();\n        }\n\n        // Serve a page that executes the javascript\n        // @ts-ignore\n        const queries = req._parsedUrl.search || \"\";\n        const responsePage = `<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body><script type=\"text/javascript\" charset=\"utf-8\" src=\"${_path}.js${queries}\"></script></body></html>`;\n        res.send(responsePage);\n      } catch (error) {\n        return next();\n      }\n    });\n  }\n\n  // Send stats to a socket or multiple sockets\n  /**\n   * @private\n   * @param {ClientConnection[]} clients\n   * @param {StatsCompilation} stats\n   * @param {boolean} [force]\n   */\n  sendStats(clients, stats, force) {\n    const shouldEmit = !force && stats && (!stats.errors || stats.errors.length === 0) && (!stats.warnings || stats.warnings.length === 0) && this.currentHash === stats.hash;\n    if (shouldEmit) {\n      this.sendMessage(clients, \"still-ok\");\n      return;\n    }\n    this.currentHash = stats.hash;\n    this.sendMessage(clients, \"hash\", stats.hash);\n    if ( /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n    stats.errors.length > 0 || /** @type {NonNullable<StatsCompilation[\"warnings\"]>} */\n    stats.warnings.length > 0) {\n      const hasErrors = /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n      stats.errors.length > 0;\n      if ( /** @type {NonNullable<StatsCompilation[\"warnings\"]>} */\n      stats.warnings.length > 0) {\n        let params;\n        if (hasErrors) {\n          params = {\n            preventReloading: true\n          };\n        }\n        this.sendMessage(clients, \"warnings\", stats.warnings, params);\n      }\n      if ( /** @type {NonNullable<StatsCompilation[\"errors\"]>} */stats.errors.length > 0) {\n        this.sendMessage(clients, \"errors\", stats.errors);\n      }\n    } else {\n      this.sendMessage(clients, \"ok\");\n    }\n  }\n\n  /**\n   * @param {string | string[]} watchPath\n   * @param {WatchOptions} [watchOptions]\n   */\n  watchFiles(watchPath, watchOptions) {\n    const chokidar = require(\"chokidar\");\n    const watcher = chokidar.watch(watchPath, watchOptions);\n\n    // disabling refreshing on changing the content\n    if (this.options.liveReload) {\n      watcher.on(\"change\", item => {\n        if (this.webSocketServer) {\n          this.sendMessage(this.webSocketServer.clients, \"static-changed\", item);\n        }\n      });\n    }\n    this.staticWatchers.push(watcher);\n  }\n\n  /**\n   * @param {import(\"webpack-dev-middleware\").Callback} [callback]\n   */\n  invalidate(callback = () => {}) {\n    if (this.middleware) {\n      this.middleware.invalidate(callback);\n    }\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  start() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      yield _this3.normalizeOptions();\n      if (_this3.options.ipc) {\n        yield (/** @type {Promise<void>} */new Promise((resolve, reject) => {\n            const net = require(\"net\");\n            const socket = new net.Socket();\n            socket.on(\"error\",\n            /**\n             * @param {Error & { code?: string }} error\n             */\n            error => {\n              if (error.code === \"ECONNREFUSED\") {\n                // No other server listening on this socket so it can be safely removed\n                fs.unlinkSync( /** @type {string} */_this3.options.ipc);\n                resolve();\n                return;\n              } else if (error.code === \"ENOENT\") {\n                resolve();\n                return;\n              }\n              reject(error);\n            });\n            socket.connect({\n              path: /** @type {string} */_this3.options.ipc\n            }, () => {\n              throw new Error(`IPC \"${_this3.options.ipc}\" is already used`);\n            });\n          })\n        );\n      } else {\n        _this3.options.host = yield Server.getHostname( /** @type {Host} */_this3.options.host);\n        _this3.options.port = yield Server.getFreePort( /** @type {Port} */_this3.options.port, _this3.options.host);\n      }\n      yield _this3.initialize();\n      const listenOptions = _this3.options.ipc ? {\n        path: _this3.options.ipc\n      } : {\n        host: _this3.options.host,\n        port: _this3.options.port\n      };\n      yield (/** @type {Promise<void>} */new Promise(resolve => {\n          /** @type {import(\"http\").Server} */\n          _this3.server.listen(listenOptions, () => {\n            resolve();\n          });\n        })\n      );\n      if (_this3.options.ipc) {\n        // chmod 666 (rw rw rw)\n        const READ_WRITE = 438;\n        yield fs.promises.chmod( /** @type {string} */_this3.options.ipc, READ_WRITE);\n      }\n      if (_this3.options.webSocketServer) {\n        _this3.createWebSocketServer();\n      }\n      if (_this3.options.bonjour) {\n        _this3.runBonjour();\n      }\n      _this3.logStatus();\n      if (typeof _this3.options.onListening === \"function\") {\n        _this3.options.onListening(_this3);\n      }\n    })();\n  }\n\n  /**\n   * @param {(err?: Error) => void} [callback]\n   */\n  startCallback(callback = () => {}) {\n    this.start().then(() => callback(), callback).catch(callback);\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  stop() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (_this4.bonjour) {\n        yield (/** @type {Promise<void>} */new Promise(resolve => {\n            _this4.stopBonjour(() => {\n              resolve();\n            });\n          })\n        );\n      }\n      _this4.webSocketProxies = [];\n      yield Promise.all(_this4.staticWatchers.map(watcher => watcher.close()));\n      _this4.staticWatchers = [];\n      if (_this4.webSocketServer) {\n        yield (/** @type {Promise<void>} */new Promise(resolve => {\n            /** @type {WebSocketServerImplementation} */\n            _this4.webSocketServer.implementation.close(() => {\n              _this4.webSocketServer = null;\n              resolve();\n            });\n            for (const client of /** @type {WebSocketServerImplementation} */_this4.webSocketServer.clients) {\n              client.terminate();\n            }\n\n            /** @type {WebSocketServerImplementation} */\n            _this4.webSocketServer.clients = [];\n          })\n        );\n      }\n      if (_this4.server) {\n        yield (/** @type {Promise<void>} */new Promise(resolve => {\n            /** @type {import(\"http\").Server} */\n            _this4.server.close(() => {\n              _this4.server = null;\n              resolve();\n            });\n            for (const socket of _this4.sockets) {\n              socket.destroy();\n            }\n            _this4.sockets = [];\n          })\n        );\n        if (_this4.middleware) {\n          yield (/** @type {Promise<void>} */new Promise((resolve, reject) => {\n              /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n              _this4.middleware.close(error => {\n                if (error) {\n                  reject(error);\n                  return;\n                }\n                resolve();\n              });\n            })\n          );\n          _this4.middleware = null;\n        }\n      }\n\n      // We add listeners to signals when creating a new Server instance\n      // So ensure they are removed to prevent EventEmitter memory leak warnings\n      for (const item of _this4.listeners) {\n        process.removeListener(item.name, item.listener);\n      }\n    })();\n  }\n\n  /**\n   * @param {(err?: Error) => void} [callback]\n   */\n  stopCallback(callback = () => {}) {\n    this.stop().then(() => callback(), callback).catch(callback);\n  }\n\n  // TODO remove in the next major release\n  /**\n   * @param {Port} port\n   * @param {Host} hostname\n   * @param {(err?: Error) => void} fn\n   * @returns {void}\n   */\n  listen(port, hostname, fn) {\n    util.deprecate(() => {}, \"'listen' is deprecated. Please use the async 'start' or 'startCallback' method.\", \"DEP_WEBPACK_DEV_SERVER_LISTEN\")();\n    if (typeof port === \"function\") {\n      fn = port;\n    }\n    if (typeof port !== \"undefined\" && typeof this.options.port !== \"undefined\" && port !== this.options.port) {\n      this.options.port = port;\n      this.logger.warn('The \"port\" specified in options is different from the port passed as an argument. Will be used from arguments.');\n    }\n    if (!this.options.port) {\n      this.options.port = port;\n    }\n    if (typeof hostname !== \"undefined\" && typeof this.options.host !== \"undefined\" && hostname !== this.options.host) {\n      this.options.host = hostname;\n      this.logger.warn('The \"host\" specified in options is different from the host passed as an argument. Will be used from arguments.');\n    }\n    if (!this.options.host) {\n      this.options.host = hostname;\n    }\n    this.start().then(() => {\n      if (fn) {\n        fn.call(this.server);\n      }\n    }).catch(error => {\n      // Nothing\n      if (fn) {\n        fn.call(this.server, error);\n      }\n    });\n  }\n\n  /**\n   * @param {(err?: Error) => void} [callback]\n   * @returns {void}\n   */\n  // TODO remove in the next major release\n  close(callback) {\n    util.deprecate(() => {}, \"'close' is deprecated. Please use the async 'stop' or 'stopCallback' method.\", \"DEP_WEBPACK_DEV_SERVER_CLOSE\")();\n    this.stop().then(() => {\n      if (callback) {\n        callback();\n      }\n    }).catch(error => {\n      if (callback) {\n        callback(error);\n      }\n    });\n  }\n}\nmodule.exports = Server;","map":{"version":3,"names":["os","require","path","url","util","fs","ipaddr","defaultGateway","express","validate","schema","process","env","WEBPACK_SERVE","Server","constructor","options","compiler","hooks","deprecate","name","baseDataPath","logger","getInfrastructureLogger","staticWatchers","listeners","webSocketProxies","sockets","currentHash","undefined","cli","getArguments","processArguments","DEFAULT_STATS","all","hash","warnings","errors","errorDetails","isAbsoluteURL","URL","test","findIp","gateway","gatewayIp","parse","addresses","Object","values","networkInterfaces","cidr","net","parseCIDR","kind","match","toString","internalIP","family","internalIPSync","sync","getHostname","hostname","getFreePort","port","host","pRetry","getPort","basePort","WEBPACK_DEV_SERVER_BASE_PORT","parseInt","defaultPortRetry","WEBPACK_DEV_SERVER_PORT_RETRY","retries","findCacheDir","cwd","dir","statSync","join","isFile","e","parent","dirname","resolve","versions","pnp","addAdditionalEntries","additionalEntries","isWebTarget","externalsPresets","web","includes","target","client","webSocketURLStr","webSocketServer","webSocketURL","searchParams","URLSearchParams","protocol","server","type","set","username","password","isSockJSType","Number","String","pathname","prefix","logging","progress","overlay","JSON","stringify","reconnect","hot","liveReload","push","webpack","EntryPlugin","additionalEntry","context","apply","prependEntry","originalEntry","newAdditionalEntries","Promise","then","entry","Array","isArray","clone","keys","forEach","key","entryDescription","entriesClone","slice","concat","newEntry","entryOption","call","getCompilerOptions","compilers","length","compilerWithDevServer","find","config","devServer","compilerWithWebPreset","normalizeOptions","compilerOptions","compilerWatchOptions","watchOptions","getWatchOptions","getPolling","usePolling","poll","Boolean","getInterval","interval","rest","ignoreInitial","persistent","followSymlinks","atomic","alwaysStat","ignorePermissionErrors","ignored","getStaticItem","optionsForStatic","getDefaultStaticOptions","directory","staticOptions","publicPath","serveIndex","icons","watch","item","def","Error","allowedHosts","bonjour","parsedURL","Infinity","infrastructureLogging","level","compress","devMiddleware","historyApiFallback","isHTTPs","https","isSPDY","http2","spdy","protocols","requestCert","httpsProperties","property","value","readFile","Buffer","isBuffer","stats","lstatSync","realpathSync","error","readFileSync","map","fakeCert","cert","certificateDir","certificatePath","certificateExists","certificate","promises","stat","certificateTtl","certificateStat","now","Date","ctime","promisify","rimraf","del","info","selfsigned","attributes","pems","generate","algorithm","days","keySize","extensions","cA","keyCertSign","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","serverAuth","clientAuth","codeSigning","timeStamping","altNames","ip","mkdir","recursive","writeFile","private","encoding","cacert","ca","warn","ipc","isWindows","platform","pipePrefix","tmpdir","pipeName","magicHtml","defaultOpenOptions","wait","getOpenItemsFromObject","normalizedOptions","app","normalizedTarget","singleTarget","open","result","onAfterSetupMiddleware","onBeforeSetupMiddleware","proxy","prototype","hasOwnProperty","proxyOptions","correctedContext","replace","getLogLevelForProxy","logLevel","logProvider","setupExitSignals","static","watchFiles","paths","defaultWebSocketServerType","defaultWebSocketServerOptions","getClientTransport","clientImplementation","clientImplementationFound","isKnownWebSocketServerImplementation","clientTransport","webSocketTransport","getServerTransport","implementation","implementationFound","setupProgressPlugin","ProgressPlugin","percent","msg","addInfo","pluginName","Math","floor","sendMessage","clients","emit","initialize","ProvidePlugin","__webpack_dev_server_client__","plugins","HMRPluginExists","p","HotModuleReplacementPlugin","plugin","setupHooks","setupApp","setupHostHeaderCheck","setupDevMiddleware","setupBuiltInRoutes","setupWatchFiles","setupWatchStaticFiles","setupMiddlewares","createServer","signals","needForceShutdown","signal","listener","exit","stopCallback","close","on","webSocketProxy","upgrade","getStats","statsObj","warningsFilter","toJson","invalid","tap","done","sendStats","req","res","next","checkHeader","headers","send","webpackDevMiddleware","middleware","get","setHeader","clientPath","__dirname","sendFile","_req","invalidate","end","waitUntilValid","write","statsForPrint","children","index","asset","assets","assetName","assetURL","staticOption","middlewares","compression","setHeaders","bind","createProxyMiddleware","getProxyMiddleware","proxyConfig","router","proxyConfigOrCallback","proxyMiddleware","ws","handler","newProxyConfig","isByPassFuncDefined","bypass","bypassUrl","connectHistoryApiFallback","verbose","log","method","serveMagicHtml","statusCode","use","socket","once","splice","indexOf","createWebSocketServer","request","openBrowser","defaultOpenTarget","openTarget","catch","arguments","runBonjour","Bonjour","publish","subtypes","stopBonjour","callback","unpublishAll","destroy","logStatus","isColorSupported","cyan","red","getColorsOption","colorsEnabled","colors","useColor","address","prettyPrintURL","newHostname","format","localhost","loopbackIPv4","loopbackIPv6","networkUrlIPv4","networkUrlIPv6","isIP","parsedIP","range","networkIPv4","networkIPv6","isIPv4MappedAddress","toIPv4Address","loopbacks","bonjourProtocol","allHeaders","header","headerToCheck","hostHeader","isValidHostname","IPv4","isValid","IPv6","endsWith","hostIdx","allowedHost","substring","data","params","readyState","_path","filename","getFilenameFromUrl","outputFileSystem","queries","_parsedUrl","search","responsePage","force","shouldEmit","hasErrors","preventReloading","watchPath","chokidar","watcher","start","reject","Socket","code","unlinkSync","connect","listenOptions","listen","READ_WRITE","chmod","onListening","startCallback","stop","terminate","removeListener","fn","module","exports"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/webpack-dev-server/lib/Server.js"],"sourcesContent":["\"use strict\";\n\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst url = require(\"url\");\nconst util = require(\"util\");\nconst fs = require(\"graceful-fs\");\nconst ipaddr = require(\"ipaddr.js\");\nconst defaultGateway = require(\"default-gateway\");\nconst express = require(\"express\");\nconst { validate } = require(\"schema-utils\");\nconst schema = require(\"./options.json\");\n\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n/** @typedef {import(\"webpack\").MultiCompiler} MultiCompiler */\n/** @typedef {import(\"webpack\").Configuration} WebpackConfiguration */\n/** @typedef {import(\"webpack\").StatsOptions} StatsOptions */\n/** @typedef {import(\"webpack\").StatsCompilation} StatsCompilation */\n/** @typedef {import(\"webpack\").Stats} Stats */\n/** @typedef {import(\"webpack\").MultiStats} MultiStats */\n/** @typedef {import(\"os\").NetworkInterfaceInfo} NetworkInterfaceInfo */\n/** @typedef {import(\"express\").Request} Request */\n/** @typedef {import(\"express\").Response} Response */\n/** @typedef {import(\"express\").NextFunction} NextFunction */\n/** @typedef {import(\"express\").RequestHandler} ExpressRequestHandler */\n/** @typedef {import(\"express\").ErrorRequestHandler} ExpressErrorRequestHandler */\n/** @typedef {import(\"chokidar\").WatchOptions} WatchOptions */\n/** @typedef {import(\"chokidar\").FSWatcher} FSWatcher */\n/** @typedef {import(\"connect-history-api-fallback\").Options} ConnectHistoryApiFallbackOptions */\n/** @typedef {import(\"bonjour-service\").Bonjour} Bonjour */\n/** @typedef {import(\"bonjour-service\").Service} BonjourOptions */\n/** @typedef {import(\"http-proxy-middleware\").RequestHandler} RequestHandler */\n/** @typedef {import(\"http-proxy-middleware\").Options} HttpProxyMiddlewareOptions */\n/** @typedef {import(\"http-proxy-middleware\").Filter} HttpProxyMiddlewareOptionsFilter */\n/** @typedef {import(\"serve-index\").Options} ServeIndexOptions */\n/** @typedef {import(\"serve-static\").ServeStaticOptions} ServeStaticOptions */\n/** @typedef {import(\"ipaddr.js\").IPv4} IPv4 */\n/** @typedef {import(\"ipaddr.js\").IPv6} IPv6 */\n/** @typedef {import(\"net\").Socket} Socket */\n/** @typedef {import(\"http\").IncomingMessage} IncomingMessage */\n/** @typedef {import(\"open\").Options} OpenOptions */\n\n/** @typedef {import(\"https\").ServerOptions & { spdy?: { plain?: boolean | undefined, ssl?: boolean | undefined, 'x-forwarded-for'?: string | undefined, protocol?: string | undefined, protocols?: string[] | undefined }}} ServerOptions */\n\n/**\n * @template Request, Response\n * @typedef {import(\"webpack-dev-middleware\").Options<Request, Response>} DevMiddlewareOptions\n */\n\n/**\n * @template Request, Response\n * @typedef {import(\"webpack-dev-middleware\").Context<Request, Response>} DevMiddlewareContext\n */\n\n/**\n * @typedef {\"local-ip\" | \"local-ipv4\" | \"local-ipv6\" | string} Host\n */\n\n/**\n * @typedef {number | string | \"auto\"} Port\n */\n\n/**\n * @typedef {Object} WatchFiles\n * @property {string | string[]} paths\n * @property {WatchOptions & { aggregateTimeout?: number, ignored?: WatchOptions[\"ignored\"], poll?: number | boolean }} [options]\n */\n\n/**\n * @typedef {Object} Static\n * @property {string} [directory]\n * @property {string | string[]} [publicPath]\n * @property {boolean | ServeIndexOptions} [serveIndex]\n * @property {ServeStaticOptions} [staticOptions]\n * @property {boolean | WatchOptions & { aggregateTimeout?: number, ignored?: WatchOptions[\"ignored\"], poll?: number | boolean }} [watch]\n */\n\n/**\n * @typedef {Object} NormalizedStatic\n * @property {string} directory\n * @property {string[]} publicPath\n * @property {false | ServeIndexOptions} serveIndex\n * @property {ServeStaticOptions} staticOptions\n * @property {false | WatchOptions} watch\n */\n\n/**\n * @typedef {Object} ServerConfiguration\n * @property {\"http\" | \"https\" | \"spdy\" | string} [type]\n * @property {ServerOptions} [options]\n */\n\n/**\n * @typedef {Object} WebSocketServerConfiguration\n * @property {\"sockjs\" | \"ws\" | string | Function} [type]\n * @property {Record<string, any>} [options]\n */\n\n/**\n * @typedef {(import(\"ws\").WebSocket | import(\"sockjs\").Connection & { send: import(\"ws\").WebSocket[\"send\"], terminate: import(\"ws\").WebSocket[\"terminate\"], ping: import(\"ws\").WebSocket[\"ping\"] }) & { isAlive?: boolean }} ClientConnection\n */\n\n/**\n * @typedef {import(\"ws\").WebSocketServer | import(\"sockjs\").Server & { close: import(\"ws\").WebSocketServer[\"close\"] }} WebSocketServer\n */\n\n/**\n * @typedef {{ implementation: WebSocketServer, clients: ClientConnection[] }} WebSocketServerImplementation\n */\n\n/**\n * @callback ByPass\n * @param {Request} req\n * @param {Response} res\n * @param {ProxyConfigArrayItem} proxyConfig\n */\n\n/**\n * @typedef {{ path?: HttpProxyMiddlewareOptionsFilter | undefined, context?: HttpProxyMiddlewareOptionsFilter | undefined } & { bypass?: ByPass } & HttpProxyMiddlewareOptions } ProxyConfigArrayItem\n */\n\n/**\n * @typedef {(ProxyConfigArrayItem | ((req?: Request | undefined, res?: Response | undefined, next?: NextFunction | undefined) => ProxyConfigArrayItem))[]} ProxyConfigArray\n */\n\n/**\n * @typedef {{ [url: string]: string | ProxyConfigArrayItem }} ProxyConfigMap\n */\n\n/**\n * @typedef {Object} OpenApp\n * @property {string} [name]\n * @property {string[]} [arguments]\n */\n\n/**\n * @typedef {Object} Open\n * @property {string | string[] | OpenApp} [app]\n * @property {string | string[]} [target]\n */\n\n/**\n * @typedef {Object} NormalizedOpen\n * @property {string} target\n * @property {import(\"open\").Options} options\n */\n\n/**\n * @typedef {Object} WebSocketURL\n * @property {string} [hostname]\n * @property {string} [password]\n * @property {string} [pathname]\n * @property {number | string} [port]\n * @property {string} [protocol]\n * @property {string} [username]\n */\n\n/**\n * @typedef {Object} ClientConfiguration\n * @property {\"log\" | \"info\" | \"warn\" | \"error\" | \"none\" | \"verbose\"} [logging]\n * @property {boolean  | { warnings?: boolean, errors?: boolean }} [overlay]\n * @property {boolean} [progress]\n * @property {boolean | number} [reconnect]\n * @property {\"ws\" | \"sockjs\" | string} [webSocketTransport]\n * @property {string | WebSocketURL} [webSocketURL]\n */\n\n/**\n * @typedef {Array<{ key: string; value: string }> | Record<string, string | string[]>} Headers\n */\n\n/**\n * @typedef {{ name?: string, path?: string, middleware: ExpressRequestHandler | ExpressErrorRequestHandler } | ExpressRequestHandler | ExpressErrorRequestHandler} Middleware\n */\n\n/**\n * @typedef {Object} Configuration\n * @property {boolean | string} [ipc]\n * @property {Host} [host]\n * @property {Port} [port]\n * @property {boolean | \"only\"} [hot]\n * @property {boolean} [liveReload]\n * @property {DevMiddlewareOptions<Request, Response>} [devMiddleware]\n * @property {boolean} [compress]\n * @property {boolean} [magicHtml]\n * @property {\"auto\" | \"all\" | string | string[]} [allowedHosts]\n * @property {boolean | ConnectHistoryApiFallbackOptions} [historyApiFallback]\n * @property {boolean} [setupExitSignals]\n * @property {boolean | Record<string, never> | BonjourOptions} [bonjour]\n * @property {string | string[] | WatchFiles | Array<string | WatchFiles>} [watchFiles]\n * @property {boolean | string | Static | Array<string | Static>} [static]\n * @property {boolean | ServerOptions} [https]\n * @property {boolean} [http2]\n * @property {\"http\" | \"https\" | \"spdy\" | string | ServerConfiguration} [server]\n * @property {boolean | \"sockjs\" | \"ws\" | string | WebSocketServerConfiguration} [webSocketServer]\n * @property {ProxyConfigMap | ProxyConfigArrayItem | ProxyConfigArray} [proxy]\n * @property {boolean | string | Open | Array<string | Open>} [open]\n * @property {boolean} [setupExitSignals]\n * @property {boolean | ClientConfiguration} [client]\n * @property {Headers | ((req: Request, res: Response, context: DevMiddlewareContext<Request, Response>) => Headers)} [headers]\n * @property {(devServer: Server) => void} [onAfterSetupMiddleware]\n * @property {(devServer: Server) => void} [onBeforeSetupMiddleware]\n * @property {(devServer: Server) => void} [onListening]\n * @property {(middlewares: Middleware[], devServer: Server) => Middleware[]} [setupMiddlewares]\n */\n\nif (!process.env.WEBPACK_SERVE) {\n  // TODO fix me in the next major release\n  // @ts-ignore\n  process.env.WEBPACK_SERVE = true;\n}\n\nclass Server {\n  /**\n   * @param {Configuration | Compiler | MultiCompiler} options\n   * @param {Compiler | MultiCompiler | Configuration} compiler\n   */\n  constructor(options = {}, compiler) {\n    // TODO: remove this after plugin support is published\n    if (/** @type {Compiler | MultiCompiler} */ (options).hooks) {\n      util.deprecate(\n        () => {},\n        \"Using 'compiler' as the first argument is deprecated. Please use 'options' as the first argument and 'compiler' as the second argument.\",\n        \"DEP_WEBPACK_DEV_SERVER_CONSTRUCTOR\"\n      )();\n\n      [options = {}, compiler] = [compiler, options];\n    }\n\n    validate(/** @type {Schema} */ (schema), options, {\n      name: \"Dev Server\",\n      baseDataPath: \"options\",\n    });\n\n    this.compiler = /** @type {Compiler | MultiCompiler} */ (compiler);\n    /**\n     * @type {ReturnType<Compiler[\"getInfrastructureLogger\"]>}\n     * */\n    this.logger = this.compiler.getInfrastructureLogger(\"webpack-dev-server\");\n    this.options = /** @type {Configuration} */ (options);\n    /**\n     * @type {FSWatcher[]}\n     */\n    this.staticWatchers = [];\n    /**\n     * @private\n     * @type {{ name: string | symbol, listener: (...args: any[]) => void}[] }}\n     */\n    this.listeners = [];\n    // Keep track of websocket proxies for external websocket upgrade.\n    /**\n     * @private\n     * @type {RequestHandler[]}\n     */\n    this.webSocketProxies = [];\n    /**\n     * @type {Socket[]}\n     */\n    this.sockets = [];\n    /**\n     * @private\n     * @type {string | undefined}\n     */\n    // eslint-disable-next-line no-undefined\n    this.currentHash = undefined;\n  }\n\n  // TODO compatibility with webpack v4, remove it after drop\n  static get cli() {\n    return {\n      get getArguments() {\n        return () => require(\"../bin/cli-flags\");\n      },\n      get processArguments() {\n        return require(\"../bin/process-arguments\");\n      },\n    };\n  }\n\n  static get schema() {\n    return schema;\n  }\n\n  /**\n   * @private\n   * @returns {StatsOptions}\n   * @constructor\n   */\n  static get DEFAULT_STATS() {\n    return {\n      all: false,\n      hash: true,\n      warnings: true,\n      errors: true,\n      errorDetails: false,\n    };\n  }\n\n  /**\n   * @param {string} URL\n   * @returns {boolean}\n   */\n  static isAbsoluteURL(URL) {\n    // Don't match Windows paths `c:\\`\n    if (/^[a-zA-Z]:\\\\/.test(URL)) {\n      return false;\n    }\n\n    // Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n    // Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n    return /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(URL);\n  }\n\n  /**\n   * @param {string} gateway\n   * @returns {string | undefined}\n   */\n  static findIp(gateway) {\n    const gatewayIp = ipaddr.parse(gateway);\n\n    // Look for the matching interface in all local interfaces.\n    for (const addresses of Object.values(os.networkInterfaces())) {\n      for (const { cidr } of /** @type {NetworkInterfaceInfo[]} */ (\n        addresses\n      )) {\n        const net = ipaddr.parseCIDR(/** @type {string} */ (cidr));\n\n        if (\n          net[0] &&\n          net[0].kind() === gatewayIp.kind() &&\n          gatewayIp.match(net)\n        ) {\n          return net[0].toString();\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {\"v4\" | \"v6\"} family\n   * @returns {Promise<string | undefined>}\n   */\n  static async internalIP(family) {\n    try {\n      const { gateway } = await defaultGateway[family]();\n      return Server.findIp(gateway);\n    } catch {\n      // ignore\n    }\n  }\n\n  /**\n   * @param {\"v4\" | \"v6\"} family\n   * @returns {string | undefined}\n   */\n  static internalIPSync(family) {\n    try {\n      const { gateway } = defaultGateway[family].sync();\n      return Server.findIp(gateway);\n    } catch {\n      // ignore\n    }\n  }\n\n  /**\n   * @param {Host} hostname\n   * @returns {Promise<string>}\n   */\n  static async getHostname(hostname) {\n    if (hostname === \"local-ip\") {\n      return (\n        (await Server.internalIP(\"v4\")) ||\n        (await Server.internalIP(\"v6\")) ||\n        \"0.0.0.0\"\n      );\n    } else if (hostname === \"local-ipv4\") {\n      return (await Server.internalIP(\"v4\")) || \"0.0.0.0\";\n    } else if (hostname === \"local-ipv6\") {\n      return (await Server.internalIP(\"v6\")) || \"::\";\n    }\n\n    return hostname;\n  }\n\n  /**\n   * @param {Port} port\n   * @param {string} host\n   * @returns {Promise<number | string>}\n   */\n  static async getFreePort(port, host) {\n    if (typeof port !== \"undefined\" && port !== null && port !== \"auto\") {\n      return port;\n    }\n\n    const pRetry = require(\"p-retry\");\n    const getPort = require(\"./getPort\");\n    const basePort =\n      typeof process.env.WEBPACK_DEV_SERVER_BASE_PORT !== \"undefined\"\n        ? parseInt(process.env.WEBPACK_DEV_SERVER_BASE_PORT, 10)\n        : 8080;\n\n    // Try to find unused port and listen on it for 3 times,\n    // if port is not specified in options.\n    const defaultPortRetry =\n      typeof process.env.WEBPACK_DEV_SERVER_PORT_RETRY !== \"undefined\"\n        ? parseInt(process.env.WEBPACK_DEV_SERVER_PORT_RETRY, 10)\n        : 3;\n\n    return pRetry(() => getPort(basePort, host), {\n      retries: defaultPortRetry,\n    });\n  }\n\n  /**\n   * @returns {string}\n   */\n  static findCacheDir() {\n    const cwd = process.cwd();\n\n    /**\n     * @type {string | undefined}\n     */\n    let dir = cwd;\n\n    for (;;) {\n      try {\n        if (fs.statSync(path.join(dir, \"package.json\")).isFile()) break;\n        // eslint-disable-next-line no-empty\n      } catch (e) {}\n\n      const parent = path.dirname(dir);\n\n      if (dir === parent) {\n        // eslint-disable-next-line no-undefined\n        dir = undefined;\n        break;\n      }\n\n      dir = parent;\n    }\n\n    if (!dir) {\n      return path.resolve(cwd, \".cache/webpack-dev-server\");\n    } else if (process.versions.pnp === \"1\") {\n      return path.resolve(dir, \".pnp/.cache/webpack-dev-server\");\n    } else if (process.versions.pnp === \"3\") {\n      return path.resolve(dir, \".yarn/.cache/webpack-dev-server\");\n    }\n\n    return path.resolve(dir, \"node_modules/.cache/webpack-dev-server\");\n  }\n\n  /**\n   * @private\n   * @param {Compiler} compiler\n   */\n  addAdditionalEntries(compiler) {\n    /**\n     * @type {string[]}\n     */\n    const additionalEntries = [];\n\n    const isWebTarget = compiler.options.externalsPresets\n      ? compiler.options.externalsPresets.web\n      : [\n          \"web\",\n          \"webworker\",\n          \"electron-preload\",\n          \"electron-renderer\",\n          \"node-webkit\",\n          // eslint-disable-next-line no-undefined\n          undefined,\n          null,\n        ].includes(/** @type {string} */ (compiler.options.target));\n\n    // TODO maybe empty empty client\n    if (this.options.client && isWebTarget) {\n      let webSocketURLStr = \"\";\n\n      if (this.options.webSocketServer) {\n        const webSocketURL =\n          /** @type {WebSocketURL} */\n          (\n            /** @type {ClientConfiguration} */\n            (this.options.client).webSocketURL\n          );\n        const webSocketServer =\n          /** @type {{ type: WebSocketServerConfiguration[\"type\"], options: NonNullable<WebSocketServerConfiguration[\"options\"]> }} */\n          (this.options.webSocketServer);\n        const searchParams = new URLSearchParams();\n\n        /** @type {string} */\n        let protocol;\n\n        // We are proxying dev server and need to specify custom `hostname`\n        if (typeof webSocketURL.protocol !== \"undefined\") {\n          protocol = webSocketURL.protocol;\n        } else {\n          protocol =\n            /** @type {ServerConfiguration} */\n            (this.options.server).type === \"http\" ? \"ws:\" : \"wss:\";\n        }\n\n        searchParams.set(\"protocol\", protocol);\n\n        if (typeof webSocketURL.username !== \"undefined\") {\n          searchParams.set(\"username\", webSocketURL.username);\n        }\n\n        if (typeof webSocketURL.password !== \"undefined\") {\n          searchParams.set(\"password\", webSocketURL.password);\n        }\n\n        /** @type {string} */\n        let hostname;\n\n        // SockJS is not supported server mode, so `hostname` and `port` can't specified, let's ignore them\n        // TODO show warning about this\n        const isSockJSType = webSocketServer.type === \"sockjs\";\n\n        // We are proxying dev server and need to specify custom `hostname`\n        if (typeof webSocketURL.hostname !== \"undefined\") {\n          hostname = webSocketURL.hostname;\n        }\n        // Web socket server works on custom `hostname`, only for `ws` because `sock-js` is not support custom `hostname`\n        else if (\n          typeof webSocketServer.options.host !== \"undefined\" &&\n          !isSockJSType\n        ) {\n          hostname = webSocketServer.options.host;\n        }\n        // The `host` option is specified\n        else if (typeof this.options.host !== \"undefined\") {\n          hostname = this.options.host;\n        }\n        // The `port` option is not specified\n        else {\n          hostname = \"0.0.0.0\";\n        }\n\n        searchParams.set(\"hostname\", hostname);\n\n        /** @type {number | string} */\n        let port;\n\n        // We are proxying dev server and need to specify custom `port`\n        if (typeof webSocketURL.port !== \"undefined\") {\n          port = webSocketURL.port;\n        }\n        // Web socket server works on custom `port`, only for `ws` because `sock-js` is not support custom `port`\n        else if (\n          typeof webSocketServer.options.port !== \"undefined\" &&\n          !isSockJSType\n        ) {\n          port = webSocketServer.options.port;\n        }\n        // The `port` option is specified\n        else if (typeof this.options.port === \"number\") {\n          port = this.options.port;\n        }\n        // The `port` option is specified using `string`\n        else if (\n          typeof this.options.port === \"string\" &&\n          this.options.port !== \"auto\"\n        ) {\n          port = Number(this.options.port);\n        }\n        // The `port` option is not specified or set to `auto`\n        else {\n          port = \"0\";\n        }\n\n        searchParams.set(\"port\", String(port));\n\n        /** @type {string} */\n        let pathname = \"\";\n\n        // We are proxying dev server and need to specify custom `pathname`\n        if (typeof webSocketURL.pathname !== \"undefined\") {\n          pathname = webSocketURL.pathname;\n        }\n        // Web socket server works on custom `path`\n        else if (\n          typeof webSocketServer.options.prefix !== \"undefined\" ||\n          typeof webSocketServer.options.path !== \"undefined\"\n        ) {\n          pathname =\n            webSocketServer.options.prefix || webSocketServer.options.path;\n        }\n\n        searchParams.set(\"pathname\", pathname);\n\n        const client = /** @type {ClientConfiguration} */ (this.options.client);\n\n        if (typeof client.logging !== \"undefined\") {\n          searchParams.set(\"logging\", client.logging);\n        }\n\n        if (typeof client.progress !== \"undefined\") {\n          searchParams.set(\"progress\", String(client.progress));\n        }\n\n        if (typeof client.overlay !== \"undefined\") {\n          searchParams.set(\n            \"overlay\",\n            typeof client.overlay === \"boolean\"\n              ? String(client.overlay)\n              : JSON.stringify(client.overlay)\n          );\n        }\n\n        if (typeof client.reconnect !== \"undefined\") {\n          searchParams.set(\n            \"reconnect\",\n            typeof client.reconnect === \"number\"\n              ? String(client.reconnect)\n              : \"10\"\n          );\n        }\n\n        if (typeof this.options.hot !== \"undefined\") {\n          searchParams.set(\"hot\", String(this.options.hot));\n        }\n\n        if (typeof this.options.liveReload !== \"undefined\") {\n          searchParams.set(\"live-reload\", String(this.options.liveReload));\n        }\n\n        webSocketURLStr = searchParams.toString();\n      }\n\n      additionalEntries.push(\n        `${require.resolve(\"../client/index.js\")}?${webSocketURLStr}`\n      );\n    }\n\n    if (this.options.hot === \"only\") {\n      additionalEntries.push(require.resolve(\"webpack/hot/only-dev-server\"));\n    } else if (this.options.hot) {\n      additionalEntries.push(require.resolve(\"webpack/hot/dev-server\"));\n    }\n\n    const webpack = compiler.webpack || require(\"webpack\");\n\n    // use a hook to add entries if available\n    if (typeof webpack.EntryPlugin !== \"undefined\") {\n      for (const additionalEntry of additionalEntries) {\n        new webpack.EntryPlugin(compiler.context, additionalEntry, {\n          // eslint-disable-next-line no-undefined\n          name: undefined,\n        }).apply(compiler);\n      }\n    }\n    // TODO remove after drop webpack v4 support\n    else {\n      /**\n       * prependEntry Method for webpack 4\n       * @param {any} originalEntry\n       * @param {any} newAdditionalEntries\n       * @returns {any}\n       */\n      const prependEntry = (originalEntry, newAdditionalEntries) => {\n        if (typeof originalEntry === \"function\") {\n          return () =>\n            Promise.resolve(originalEntry()).then((entry) =>\n              prependEntry(entry, newAdditionalEntries)\n            );\n        }\n\n        if (\n          typeof originalEntry === \"object\" &&\n          !Array.isArray(originalEntry)\n        ) {\n          /** @type {Object<string,string>} */\n          const clone = {};\n\n          Object.keys(originalEntry).forEach((key) => {\n            // entry[key] should be a string here\n            const entryDescription = originalEntry[key];\n\n            clone[key] = prependEntry(entryDescription, newAdditionalEntries);\n          });\n\n          return clone;\n        }\n\n        // in this case, entry is a string or an array.\n        // make sure that we do not add duplicates.\n        /** @type {any} */\n        const entriesClone = additionalEntries.slice(0);\n\n        [].concat(originalEntry).forEach((newEntry) => {\n          if (!entriesClone.includes(newEntry)) {\n            entriesClone.push(newEntry);\n          }\n        });\n\n        return entriesClone;\n      };\n\n      compiler.options.entry = prependEntry(\n        compiler.options.entry || \"./src\",\n        additionalEntries\n      );\n      compiler.hooks.entryOption.call(\n        /** @type {string} */ (compiler.options.context),\n        compiler.options.entry\n      );\n    }\n  }\n\n  /**\n   * @private\n   * @returns {Compiler[\"options\"]}\n   */\n  getCompilerOptions() {\n    if (\n      typeof (/** @type {MultiCompiler} */ (this.compiler).compilers) !==\n      \"undefined\"\n    ) {\n      if (/** @type {MultiCompiler} */ (this.compiler).compilers.length === 1) {\n        return (\n          /** @type {MultiCompiler} */\n          (this.compiler).compilers[0].options\n        );\n      }\n\n      // Configuration with the `devServer` options\n      const compilerWithDevServer =\n        /** @type {MultiCompiler} */\n        (this.compiler).compilers.find((config) => config.options.devServer);\n\n      if (compilerWithDevServer) {\n        return compilerWithDevServer.options;\n      }\n\n      // Configuration with `web` preset\n      const compilerWithWebPreset =\n        /** @type {MultiCompiler} */\n        (this.compiler).compilers.find(\n          (config) =>\n            (config.options.externalsPresets &&\n              config.options.externalsPresets.web) ||\n            [\n              \"web\",\n              \"webworker\",\n              \"electron-preload\",\n              \"electron-renderer\",\n              \"node-webkit\",\n              // eslint-disable-next-line no-undefined\n              undefined,\n              null,\n            ].includes(/** @type {string} */ (config.options.target))\n        );\n\n      if (compilerWithWebPreset) {\n        return compilerWithWebPreset.options;\n      }\n\n      // Fallback\n      return /** @type {MultiCompiler} */ (this.compiler).compilers[0].options;\n    }\n\n    return /** @type {Compiler} */ (this.compiler).options;\n  }\n\n  /**\n   * @private\n   * @returns {Promise<void>}\n   */\n  async normalizeOptions() {\n    const { options } = this;\n    const compilerOptions = this.getCompilerOptions();\n    // TODO remove `{}` after drop webpack v4 support\n    const compilerWatchOptions = compilerOptions.watchOptions || {};\n    /**\n     * @param {WatchOptions & { aggregateTimeout?: number, ignored?: WatchOptions[\"ignored\"], poll?: number | boolean }} watchOptions\n     * @returns {WatchOptions}\n     */\n    const getWatchOptions = (watchOptions = {}) => {\n      const getPolling = () => {\n        if (typeof watchOptions.usePolling !== \"undefined\") {\n          return watchOptions.usePolling;\n        }\n\n        if (typeof watchOptions.poll !== \"undefined\") {\n          return Boolean(watchOptions.poll);\n        }\n\n        if (typeof compilerWatchOptions.poll !== \"undefined\") {\n          return Boolean(compilerWatchOptions.poll);\n        }\n\n        return false;\n      };\n      const getInterval = () => {\n        if (typeof watchOptions.interval !== \"undefined\") {\n          return watchOptions.interval;\n        }\n\n        if (typeof watchOptions.poll === \"number\") {\n          return watchOptions.poll;\n        }\n\n        if (typeof compilerWatchOptions.poll === \"number\") {\n          return compilerWatchOptions.poll;\n        }\n      };\n\n      const usePolling = getPolling();\n      const interval = getInterval();\n      const { poll, ...rest } = watchOptions;\n\n      return {\n        ignoreInitial: true,\n        persistent: true,\n        followSymlinks: false,\n        atomic: false,\n        alwaysStat: true,\n        ignorePermissionErrors: true,\n        // Respect options from compiler watchOptions\n        usePolling,\n        interval,\n        ignored: watchOptions.ignored,\n        // TODO: we respect these options for all watch options and allow developers to pass them to chokidar, but chokidar doesn't have these options maybe we need revisit that in future\n        ...rest,\n      };\n    };\n    /**\n     * @param {string | Static | undefined} [optionsForStatic]\n     * @returns {NormalizedStatic}\n     */\n    const getStaticItem = (optionsForStatic) => {\n      const getDefaultStaticOptions = () => {\n        return {\n          directory: path.join(process.cwd(), \"public\"),\n          staticOptions: {},\n          publicPath: [\"/\"],\n          serveIndex: { icons: true },\n          watch: getWatchOptions(),\n        };\n      };\n\n      /** @type {NormalizedStatic} */\n      let item;\n\n      if (typeof optionsForStatic === \"undefined\") {\n        item = getDefaultStaticOptions();\n      } else if (typeof optionsForStatic === \"string\") {\n        item = {\n          ...getDefaultStaticOptions(),\n          directory: optionsForStatic,\n        };\n      } else {\n        const def = getDefaultStaticOptions();\n\n        item = {\n          directory:\n            typeof optionsForStatic.directory !== \"undefined\"\n              ? optionsForStatic.directory\n              : def.directory,\n          // TODO: do merge in the next major release\n          staticOptions:\n            typeof optionsForStatic.staticOptions !== \"undefined\"\n              ? optionsForStatic.staticOptions\n              : def.staticOptions,\n          publicPath:\n            // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.publicPath !== \"undefined\"\n              ? Array.isArray(optionsForStatic.publicPath)\n                ? optionsForStatic.publicPath\n                : [optionsForStatic.publicPath]\n              : def.publicPath,\n          // TODO: do merge in the next major release\n          serveIndex:\n            // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.serveIndex !== \"undefined\"\n              ? typeof optionsForStatic.serveIndex === \"boolean\" &&\n                optionsForStatic.serveIndex\n                ? def.serveIndex\n                : optionsForStatic.serveIndex\n              : def.serveIndex,\n          watch:\n            // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.watch !== \"undefined\"\n              ? // eslint-disable-next-line no-nested-ternary\n                typeof optionsForStatic.watch === \"boolean\"\n                ? optionsForStatic.watch\n                  ? def.watch\n                  : false\n                : getWatchOptions(optionsForStatic.watch)\n              : def.watch,\n        };\n      }\n\n      if (Server.isAbsoluteURL(item.directory)) {\n        throw new Error(\"Using a URL as static.directory is not supported\");\n      }\n\n      return item;\n    };\n\n    if (typeof options.allowedHosts === \"undefined\") {\n      // AllowedHosts allows some default hosts picked from `options.host` or `webSocketURL.hostname` and `localhost`\n      options.allowedHosts = \"auto\";\n    }\n    // We store allowedHosts as array when supplied as string\n    else if (\n      typeof options.allowedHosts === \"string\" &&\n      options.allowedHosts !== \"auto\" &&\n      options.allowedHosts !== \"all\"\n    ) {\n      options.allowedHosts = [options.allowedHosts];\n    }\n    // CLI pass options as array, we should normalize them\n    else if (\n      Array.isArray(options.allowedHosts) &&\n      options.allowedHosts.includes(\"all\")\n    ) {\n      options.allowedHosts = \"all\";\n    }\n\n    if (typeof options.bonjour === \"undefined\") {\n      options.bonjour = false;\n    } else if (typeof options.bonjour === \"boolean\") {\n      options.bonjour = options.bonjour ? {} : false;\n    }\n\n    if (\n      typeof options.client === \"undefined\" ||\n      (typeof options.client === \"object\" && options.client !== null)\n    ) {\n      if (!options.client) {\n        options.client = {};\n      }\n\n      if (typeof options.client.webSocketURL === \"undefined\") {\n        options.client.webSocketURL = {};\n      } else if (typeof options.client.webSocketURL === \"string\") {\n        const parsedURL = new URL(options.client.webSocketURL);\n\n        options.client.webSocketURL = {\n          protocol: parsedURL.protocol,\n          hostname: parsedURL.hostname,\n          port: parsedURL.port.length > 0 ? Number(parsedURL.port) : \"\",\n          pathname: parsedURL.pathname,\n          username: parsedURL.username,\n          password: parsedURL.password,\n        };\n      } else if (typeof options.client.webSocketURL.port === \"string\") {\n        options.client.webSocketURL.port = Number(\n          options.client.webSocketURL.port\n        );\n      }\n\n      // Enable client overlay by default\n      if (typeof options.client.overlay === \"undefined\") {\n        options.client.overlay = true;\n      } else if (typeof options.client.overlay !== \"boolean\") {\n        options.client.overlay = {\n          errors: true,\n          warnings: true,\n          ...options.client.overlay,\n        };\n      }\n\n      if (typeof options.client.reconnect === \"undefined\") {\n        options.client.reconnect = 10;\n      } else if (options.client.reconnect === true) {\n        options.client.reconnect = Infinity;\n      } else if (options.client.reconnect === false) {\n        options.client.reconnect = 0;\n      }\n\n      // Respect infrastructureLogging.level\n      if (typeof options.client.logging === \"undefined\") {\n        options.client.logging = compilerOptions.infrastructureLogging\n          ? compilerOptions.infrastructureLogging.level\n          : \"info\";\n      }\n    }\n\n    if (typeof options.compress === \"undefined\") {\n      options.compress = true;\n    }\n\n    if (typeof options.devMiddleware === \"undefined\") {\n      options.devMiddleware = {};\n    }\n\n    // No need to normalize `headers`\n\n    if (typeof options.historyApiFallback === \"undefined\") {\n      options.historyApiFallback = false;\n    } else if (\n      typeof options.historyApiFallback === \"boolean\" &&\n      options.historyApiFallback\n    ) {\n      options.historyApiFallback = {};\n    }\n\n    // No need to normalize `host`\n\n    options.hot =\n      typeof options.hot === \"boolean\" || options.hot === \"only\"\n        ? options.hot\n        : true;\n\n    const isHTTPs = Boolean(options.https);\n    const isSPDY = Boolean(options.http2);\n\n    if (isHTTPs) {\n      // TODO: remove in the next major release\n      util.deprecate(\n        () => {},\n        \"'https' option is deprecated. Please use the 'server' option.\",\n        \"DEP_WEBPACK_DEV_SERVER_HTTPS\"\n      )();\n    }\n\n    if (isSPDY) {\n      // TODO: remove in the next major release\n      util.deprecate(\n        () => {},\n        \"'http2' option is deprecated. Please use the 'server' option.\",\n        \"DEP_WEBPACK_DEV_SERVER_HTTP2\"\n      )();\n    }\n\n    options.server = {\n      type:\n        // eslint-disable-next-line no-nested-ternary\n        typeof options.server === \"string\"\n          ? options.server\n          : // eslint-disable-next-line no-nested-ternary\n          typeof (options.server || {}).type === \"string\"\n          ? /** @type {ServerConfiguration} */ (options.server).type || \"http\"\n          : // eslint-disable-next-line no-nested-ternary\n          isSPDY\n          ? \"spdy\"\n          : isHTTPs\n          ? \"https\"\n          : \"http\",\n      options: {\n        .../** @type {ServerOptions} */ (options.https),\n        .../** @type {ServerConfiguration} */ (options.server || {}).options,\n      },\n    };\n\n    if (\n      options.server.type === \"spdy\" &&\n      typeof (/** @type {ServerOptions} */ (options.server.options).spdy) ===\n        \"undefined\"\n    ) {\n      /** @type {ServerOptions} */\n      (options.server.options).spdy = {\n        protocols: [\"h2\", \"http/1.1\"],\n      };\n    }\n\n    if (options.server.type === \"https\" || options.server.type === \"spdy\") {\n      if (\n        typeof (\n          /** @type {ServerOptions} */ (options.server.options).requestCert\n        ) === \"undefined\"\n      ) {\n        /** @type {ServerOptions} */\n        (options.server.options).requestCert = false;\n      }\n\n      const httpsProperties =\n        /** @type {Array<keyof ServerOptions>} */\n        ([\"cacert\", \"ca\", \"cert\", \"crl\", \"key\", \"pfx\"]);\n\n      for (const property of httpsProperties) {\n        if (\n          typeof (\n            /** @type {ServerOptions} */ (options.server.options)[property]\n          ) === \"undefined\"\n        ) {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n\n        // @ts-ignore\n        if (property === \"cacert\") {\n          // TODO remove the `cacert` option in favor `ca` in the next major release\n          util.deprecate(\n            () => {},\n            \"The 'cacert' option is deprecated. Please use the 'ca' option.\",\n            \"DEP_WEBPACK_DEV_SERVER_CACERT\"\n          )();\n        }\n\n        /** @type {any} */\n        const value =\n          /** @type {ServerOptions} */\n          (options.server.options)[property];\n        /**\n         * @param {string | Buffer | undefined} item\n         * @returns {string | Buffer | undefined}\n         */\n        const readFile = (item) => {\n          if (\n            Buffer.isBuffer(item) ||\n            (typeof item === \"object\" && item !== null && !Array.isArray(item))\n          ) {\n            return item;\n          }\n\n          if (item) {\n            let stats = null;\n\n            try {\n              stats = fs.lstatSync(fs.realpathSync(item)).isFile();\n            } catch (error) {\n              // Ignore error\n            }\n\n            // It is file\n            return stats ? fs.readFileSync(item) : item;\n          }\n        };\n\n        /** @type {any} */\n        (options.server.options)[property] = Array.isArray(value)\n          ? value.map((item) => readFile(item))\n          : readFile(value);\n      }\n\n      let fakeCert;\n\n      if (\n        !(/** @type {ServerOptions} */ (options.server.options).key) ||\n        /** @type {ServerOptions} */ (!options.server.options).cert\n      ) {\n        const certificateDir = Server.findCacheDir();\n        const certificatePath = path.join(certificateDir, \"server.pem\");\n        let certificateExists;\n\n        try {\n          const certificate = await fs.promises.stat(certificatePath);\n          certificateExists = certificate.isFile();\n        } catch {\n          certificateExists = false;\n        }\n\n        if (certificateExists) {\n          const certificateTtl = 1000 * 60 * 60 * 24;\n          const certificateStat = await fs.promises.stat(certificatePath);\n          const now = Number(new Date());\n\n          // cert is more than 30 days old, kill it with fire\n          if ((now - Number(certificateStat.ctime)) / certificateTtl > 30) {\n            const { promisify } = require(\"util\");\n            const rimraf = require(\"rimraf\");\n            const del = promisify(rimraf);\n\n            this.logger.info(\n              \"SSL certificate is more than 30 days old. Removing...\"\n            );\n\n            await del(certificatePath);\n\n            certificateExists = false;\n          }\n        }\n\n        if (!certificateExists) {\n          this.logger.info(\"Generating SSL certificate...\");\n\n          // @ts-ignore\n          const selfsigned = require(\"selfsigned\");\n          const attributes = [{ name: \"commonName\", value: \"localhost\" }];\n          const pems = selfsigned.generate(attributes, {\n            algorithm: \"sha256\",\n            days: 30,\n            keySize: 2048,\n            extensions: [\n              {\n                name: \"basicConstraints\",\n                cA: true,\n              },\n              {\n                name: \"keyUsage\",\n                keyCertSign: true,\n                digitalSignature: true,\n                nonRepudiation: true,\n                keyEncipherment: true,\n                dataEncipherment: true,\n              },\n              {\n                name: \"extKeyUsage\",\n                serverAuth: true,\n                clientAuth: true,\n                codeSigning: true,\n                timeStamping: true,\n              },\n              {\n                name: \"subjectAltName\",\n                altNames: [\n                  {\n                    // type 2 is DNS\n                    type: 2,\n                    value: \"localhost\",\n                  },\n                  {\n                    type: 2,\n                    value: \"localhost.localdomain\",\n                  },\n                  {\n                    type: 2,\n                    value: \"lvh.me\",\n                  },\n                  {\n                    type: 2,\n                    value: \"*.lvh.me\",\n                  },\n                  {\n                    type: 2,\n                    value: \"[::1]\",\n                  },\n                  {\n                    // type 7 is IP\n                    type: 7,\n                    ip: \"127.0.0.1\",\n                  },\n                  {\n                    type: 7,\n                    ip: \"fe80::1\",\n                  },\n                ],\n              },\n            ],\n          });\n\n          await fs.promises.mkdir(certificateDir, { recursive: true });\n\n          await fs.promises.writeFile(\n            certificatePath,\n            pems.private + pems.cert,\n            {\n              encoding: \"utf8\",\n            }\n          );\n        }\n\n        fakeCert = await fs.promises.readFile(certificatePath);\n\n        this.logger.info(`SSL certificate: ${certificatePath}`);\n      }\n\n      if (\n        /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */ (\n          options.server.options\n        ).cacert\n      ) {\n        if (/** @type {ServerOptions} */ (options.server.options).ca) {\n          this.logger.warn(\n            \"Do not specify 'ca' and 'cacert' options together, the 'ca' option will be used.\"\n          );\n        } else {\n          /** @type {ServerOptions} */\n          (options.server.options).ca =\n            /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */\n            (options.server.options).cacert;\n        }\n\n        delete (\n          /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */ (\n            options.server.options\n          ).cacert\n        );\n      }\n\n      /** @type {ServerOptions} */\n      (options.server.options).key =\n        /** @type {ServerOptions} */\n        (options.server.options).key || fakeCert;\n      /** @type {ServerOptions} */\n      (options.server.options).cert =\n        /** @type {ServerOptions} */\n        (options.server.options).cert || fakeCert;\n    }\n\n    if (typeof options.ipc === \"boolean\") {\n      const isWindows = process.platform === \"win32\";\n      const pipePrefix = isWindows ? \"\\\\\\\\.\\\\pipe\\\\\" : os.tmpdir();\n      const pipeName = \"webpack-dev-server.sock\";\n\n      options.ipc = path.join(pipePrefix, pipeName);\n    }\n\n    options.liveReload =\n      typeof options.liveReload !== \"undefined\" ? options.liveReload : true;\n\n    options.magicHtml =\n      typeof options.magicHtml !== \"undefined\" ? options.magicHtml : true;\n\n    // https://github.com/webpack/webpack-dev-server/issues/1990\n    const defaultOpenOptions = { wait: false };\n    /**\n     * @param {any} target\n     * @returns {NormalizedOpen[]}\n     */\n    // TODO: remove --open-app in favor of --open-app-name\n    const getOpenItemsFromObject = ({ target, ...rest }) => {\n      const normalizedOptions = { ...defaultOpenOptions, ...rest };\n\n      if (typeof normalizedOptions.app === \"string\") {\n        normalizedOptions.app = {\n          name: normalizedOptions.app,\n        };\n      }\n\n      const normalizedTarget = typeof target === \"undefined\" ? \"<url>\" : target;\n\n      if (Array.isArray(normalizedTarget)) {\n        return normalizedTarget.map((singleTarget) => {\n          return { target: singleTarget, options: normalizedOptions };\n        });\n      }\n\n      return [{ target: normalizedTarget, options: normalizedOptions }];\n    };\n\n    if (typeof options.open === \"undefined\") {\n      /** @type {NormalizedOpen[]} */\n      (options.open) = [];\n    } else if (typeof options.open === \"boolean\") {\n      /** @type {NormalizedOpen[]} */\n      (options.open) = options.open\n        ? [\n            {\n              target: \"<url>\",\n              options: /** @type {OpenOptions} */ (defaultOpenOptions),\n            },\n          ]\n        : [];\n    } else if (typeof options.open === \"string\") {\n      /** @type {NormalizedOpen[]} */\n      (options.open) = [{ target: options.open, options: defaultOpenOptions }];\n    } else if (Array.isArray(options.open)) {\n      /**\n       * @type {NormalizedOpen[]}\n       */\n      const result = [];\n\n      options.open.forEach((item) => {\n        if (typeof item === \"string\") {\n          result.push({ target: item, options: defaultOpenOptions });\n\n          return;\n        }\n\n        result.push(...getOpenItemsFromObject(item));\n      });\n\n      /** @type {NormalizedOpen[]} */\n      (options.open) = result;\n    } else {\n      /** @type {NormalizedOpen[]} */\n      (options.open) = [...getOpenItemsFromObject(options.open)];\n    }\n\n    if (options.onAfterSetupMiddleware) {\n      // TODO: remove in the next major release\n      util.deprecate(\n        () => {},\n        \"'onAfterSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\",\n        `DEP_WEBPACK_DEV_SERVER_ON_AFTER_SETUP_MIDDLEWARE`\n      )();\n    }\n\n    if (options.onBeforeSetupMiddleware) {\n      // TODO: remove in the next major release\n      util.deprecate(\n        () => {},\n        \"'onBeforeSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\",\n        `DEP_WEBPACK_DEV_SERVER_ON_BEFORE_SETUP_MIDDLEWARE`\n      )();\n    }\n\n    if (typeof options.port === \"string\" && options.port !== \"auto\") {\n      options.port = Number(options.port);\n    }\n\n    /**\n     * Assume a proxy configuration specified as:\n     * proxy: {\n     *   'context': { options }\n     * }\n     * OR\n     * proxy: {\n     *   'context': 'target'\n     * }\n     */\n    if (typeof options.proxy !== \"undefined\") {\n      // TODO remove in the next major release, only accept `Array`\n      if (!Array.isArray(options.proxy)) {\n        if (\n          Object.prototype.hasOwnProperty.call(options.proxy, \"target\") ||\n          Object.prototype.hasOwnProperty.call(options.proxy, \"router\")\n        ) {\n          /** @type {ProxyConfigArray} */\n          (options.proxy) = [/** @type {ProxyConfigMap} */ (options.proxy)];\n        } else {\n          /** @type {ProxyConfigArray} */\n          (options.proxy) = Object.keys(options.proxy).map(\n            /**\n             * @param {string} context\n             * @returns {HttpProxyMiddlewareOptions}\n             */\n            (context) => {\n              let proxyOptions;\n              // For backwards compatibility reasons.\n              const correctedContext = context\n                .replace(/^\\*$/, \"**\")\n                .replace(/\\/\\*$/, \"\");\n\n              if (\n                typeof (\n                  /** @type {ProxyConfigMap} */ (options.proxy)[context]\n                ) === \"string\"\n              ) {\n                proxyOptions = {\n                  context: correctedContext,\n                  target:\n                    /** @type {ProxyConfigMap} */\n                    (options.proxy)[context],\n                };\n              } else {\n                proxyOptions = {\n                  // @ts-ignore\n                  .../** @type {ProxyConfigMap} */ (options.proxy)[context],\n                };\n                proxyOptions.context = correctedContext;\n              }\n\n              return proxyOptions;\n            }\n          );\n        }\n      }\n\n      /** @type {ProxyConfigArray} */\n      (options.proxy) =\n        /** @type {ProxyConfigArray} */\n        (options.proxy).map((item) => {\n          if (typeof item === \"function\") {\n            return item;\n          }\n\n          /**\n           * @param {\"info\" | \"warn\" | \"error\" | \"debug\" | \"silent\" | undefined | \"none\" | \"log\" | \"verbose\"} level\n           * @returns {\"info\" | \"warn\" | \"error\" | \"debug\" | \"silent\" | undefined}\n           */\n          const getLogLevelForProxy = (level) => {\n            if (level === \"none\") {\n              return \"silent\";\n            }\n\n            if (level === \"log\") {\n              return \"info\";\n            }\n\n            if (level === \"verbose\") {\n              return \"debug\";\n            }\n\n            return level;\n          };\n\n          if (typeof item.logLevel === \"undefined\") {\n            item.logLevel = getLogLevelForProxy(\n              compilerOptions.infrastructureLogging\n                ? compilerOptions.infrastructureLogging.level\n                : \"info\"\n            );\n          }\n\n          if (typeof item.logProvider === \"undefined\") {\n            item.logProvider = () => this.logger;\n          }\n\n          return item;\n        });\n    }\n\n    if (typeof options.setupExitSignals === \"undefined\") {\n      options.setupExitSignals = true;\n    }\n\n    if (typeof options.static === \"undefined\") {\n      options.static = [getStaticItem()];\n    } else if (typeof options.static === \"boolean\") {\n      options.static = options.static ? [getStaticItem()] : false;\n    } else if (typeof options.static === \"string\") {\n      options.static = [getStaticItem(options.static)];\n    } else if (Array.isArray(options.static)) {\n      options.static = options.static.map((item) => getStaticItem(item));\n    } else {\n      options.static = [getStaticItem(options.static)];\n    }\n\n    if (typeof options.watchFiles === \"string\") {\n      options.watchFiles = [\n        { paths: options.watchFiles, options: getWatchOptions() },\n      ];\n    } else if (\n      typeof options.watchFiles === \"object\" &&\n      options.watchFiles !== null &&\n      !Array.isArray(options.watchFiles)\n    ) {\n      options.watchFiles = [\n        {\n          paths: options.watchFiles.paths,\n          options: getWatchOptions(options.watchFiles.options || {}),\n        },\n      ];\n    } else if (Array.isArray(options.watchFiles)) {\n      options.watchFiles = options.watchFiles.map((item) => {\n        if (typeof item === \"string\") {\n          return { paths: item, options: getWatchOptions() };\n        }\n\n        return {\n          paths: item.paths,\n          options: getWatchOptions(item.options || {}),\n        };\n      });\n    } else {\n      options.watchFiles = [];\n    }\n\n    const defaultWebSocketServerType = \"ws\";\n    const defaultWebSocketServerOptions = { path: \"/ws\" };\n\n    if (typeof options.webSocketServer === \"undefined\") {\n      options.webSocketServer = {\n        type: defaultWebSocketServerType,\n        options: defaultWebSocketServerOptions,\n      };\n    } else if (\n      typeof options.webSocketServer === \"boolean\" &&\n      !options.webSocketServer\n    ) {\n      options.webSocketServer = false;\n    } else if (\n      typeof options.webSocketServer === \"string\" ||\n      typeof options.webSocketServer === \"function\"\n    ) {\n      options.webSocketServer = {\n        type: options.webSocketServer,\n        options: defaultWebSocketServerOptions,\n      };\n    } else {\n      options.webSocketServer = {\n        type:\n          /** @type {WebSocketServerConfiguration} */\n          (options.webSocketServer).type || defaultWebSocketServerType,\n        options: {\n          ...defaultWebSocketServerOptions,\n          .../** @type {WebSocketServerConfiguration} */\n          (options.webSocketServer).options,\n        },\n      };\n\n      const webSocketServer =\n        /** @type {{ type: WebSocketServerConfiguration[\"type\"], options: NonNullable<WebSocketServerConfiguration[\"options\"]> }} */\n        (options.webSocketServer);\n\n      if (typeof webSocketServer.options.port === \"string\") {\n        webSocketServer.options.port = Number(webSocketServer.options.port);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @returns {string}\n   */\n  getClientTransport() {\n    let clientImplementation;\n    let clientImplementationFound = true;\n\n    const isKnownWebSocketServerImplementation =\n      this.options.webSocketServer &&\n      typeof (\n        /** @type {WebSocketServerConfiguration} */\n        (this.options.webSocketServer).type\n      ) === \"string\" &&\n      // @ts-ignore\n      (this.options.webSocketServer.type === \"ws\" ||\n        /** @type {WebSocketServerConfiguration} */\n        (this.options.webSocketServer).type === \"sockjs\");\n\n    let clientTransport;\n\n    if (this.options.client) {\n      if (\n        typeof (\n          /** @type {ClientConfiguration} */\n          (this.options.client).webSocketTransport\n        ) !== \"undefined\"\n      ) {\n        clientTransport =\n          /** @type {ClientConfiguration} */\n          (this.options.client).webSocketTransport;\n      } else if (isKnownWebSocketServerImplementation) {\n        clientTransport =\n          /** @type {WebSocketServerConfiguration} */\n          (this.options.webSocketServer).type;\n      } else {\n        clientTransport = \"ws\";\n      }\n    } else {\n      clientTransport = \"ws\";\n    }\n\n    switch (typeof clientTransport) {\n      case \"string\":\n        // could be 'sockjs', 'ws', or a path that should be required\n        if (clientTransport === \"sockjs\") {\n          clientImplementation = require.resolve(\n            \"../client/clients/SockJSClient\"\n          );\n        } else if (clientTransport === \"ws\") {\n          clientImplementation = require.resolve(\n            \"../client/clients/WebSocketClient\"\n          );\n        } else {\n          try {\n            clientImplementation = require.resolve(clientTransport);\n          } catch (e) {\n            clientImplementationFound = false;\n          }\n        }\n        break;\n      default:\n        clientImplementationFound = false;\n    }\n\n    if (!clientImplementationFound) {\n      throw new Error(\n        `${\n          !isKnownWebSocketServerImplementation\n            ? \"When you use custom web socket implementation you must explicitly specify client.webSocketTransport. \"\n            : \"\"\n        }client.webSocketTransport must be a string denoting a default implementation (e.g. 'sockjs', 'ws') or a full path to a JS file via require.resolve(...) which exports a class `\n      );\n    }\n\n    return /** @type {string} */ (clientImplementation);\n  }\n\n  /**\n   * @private\n   * @returns {string}\n   */\n  getServerTransport() {\n    let implementation;\n    let implementationFound = true;\n\n    switch (\n      typeof (\n        /** @type {WebSocketServerConfiguration} */\n        (this.options.webSocketServer).type\n      )\n    ) {\n      case \"string\":\n        // Could be 'sockjs', in the future 'ws', or a path that should be required\n        if (\n          /** @type {WebSocketServerConfiguration} */ (\n            this.options.webSocketServer\n          ).type === \"sockjs\"\n        ) {\n          implementation = require(\"./servers/SockJSServer\");\n        } else if (\n          /** @type {WebSocketServerConfiguration} */ (\n            this.options.webSocketServer\n          ).type === \"ws\"\n        ) {\n          implementation = require(\"./servers/WebsocketServer\");\n        } else {\n          try {\n            // eslint-disable-next-line import/no-dynamic-require\n            implementation = require(/** @type {WebSocketServerConfiguration} */ (\n              this.options.webSocketServer\n            ).type);\n          } catch (error) {\n            implementationFound = false;\n          }\n        }\n        break;\n      case \"function\":\n        implementation = /** @type {WebSocketServerConfiguration} */ (\n          this.options.webSocketServer\n        ).type;\n        break;\n      default:\n        implementationFound = false;\n    }\n\n    if (!implementationFound) {\n      throw new Error(\n        \"webSocketServer (webSocketServer.type) must be a string denoting a default implementation (e.g. 'ws', 'sockjs'), a full path to \" +\n          \"a JS file which exports a class extending BaseServer (webpack-dev-server/lib/servers/BaseServer.js) \" +\n          \"via require.resolve(...), or the class itself which extends BaseServer\"\n      );\n    }\n\n    return implementation;\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupProgressPlugin() {\n    const { ProgressPlugin } =\n      /** @type {MultiCompiler}*/\n      (this.compiler).compilers\n        ? /** @type {MultiCompiler}*/ (this.compiler).compilers[0].webpack\n        : /** @type {Compiler}*/ (this.compiler).webpack ||\n          // TODO remove me after drop webpack v4\n          require(\"webpack\");\n\n    new ProgressPlugin(\n      /**\n       * @param {number} percent\n       * @param {string} msg\n       * @param {string} addInfo\n       * @param {string} pluginName\n       */\n      (percent, msg, addInfo, pluginName) => {\n        percent = Math.floor(percent * 100);\n\n        if (percent === 100) {\n          msg = \"Compilation completed\";\n        }\n\n        if (addInfo) {\n          msg = `${msg} (${addInfo})`;\n        }\n\n        if (this.webSocketServer) {\n          this.sendMessage(this.webSocketServer.clients, \"progress-update\", {\n            percent,\n            msg,\n            pluginName,\n          });\n        }\n\n        if (this.server) {\n          this.server.emit(\"progress-update\", { percent, msg, pluginName });\n        }\n      }\n    ).apply(this.compiler);\n  }\n\n  /**\n   * @private\n   * @returns {Promise<void>}\n   */\n  async initialize() {\n    if (this.options.webSocketServer) {\n      const compilers =\n        /** @type {MultiCompiler} */\n        (this.compiler).compilers || [this.compiler];\n\n      compilers.forEach((compiler) => {\n        this.addAdditionalEntries(compiler);\n\n        const webpack = compiler.webpack || require(\"webpack\");\n\n        new webpack.ProvidePlugin({\n          __webpack_dev_server_client__: this.getClientTransport(),\n        }).apply(compiler);\n\n        // TODO remove after drop webpack v4 support\n        compiler.options.plugins = compiler.options.plugins || [];\n\n        if (this.options.hot) {\n          const HMRPluginExists = compiler.options.plugins.find(\n            (p) => p.constructor === webpack.HotModuleReplacementPlugin\n          );\n\n          if (HMRPluginExists) {\n            this.logger.warn(\n              `\"hot: true\" automatically applies HMR plugin, you don't have to add it manually to your webpack configuration.`\n            );\n          } else {\n            // Apply the HMR plugin\n            const plugin = new webpack.HotModuleReplacementPlugin();\n\n            plugin.apply(compiler);\n          }\n        }\n      });\n\n      if (\n        this.options.client &&\n        /** @type {ClientConfiguration} */ (this.options.client).progress\n      ) {\n        this.setupProgressPlugin();\n      }\n    }\n\n    this.setupHooks();\n    this.setupApp();\n    this.setupHostHeaderCheck();\n    this.setupDevMiddleware();\n    // Should be after `webpack-dev-middleware`, otherwise other middlewares might rewrite response\n    this.setupBuiltInRoutes();\n    this.setupWatchFiles();\n    this.setupWatchStaticFiles();\n    this.setupMiddlewares();\n    this.createServer();\n\n    if (this.options.setupExitSignals) {\n      const signals = [\"SIGINT\", \"SIGTERM\"];\n\n      let needForceShutdown = false;\n\n      signals.forEach((signal) => {\n        const listener = () => {\n          if (needForceShutdown) {\n            process.exit();\n          }\n\n          this.logger.info(\n            \"Gracefully shutting down. To force exit, press ^C again. Please wait...\"\n          );\n\n          needForceShutdown = true;\n\n          this.stopCallback(() => {\n            if (typeof this.compiler.close === \"function\") {\n              this.compiler.close(() => {\n                process.exit();\n              });\n            } else {\n              process.exit();\n            }\n          });\n        };\n\n        this.listeners.push({ name: signal, listener });\n\n        process.on(signal, listener);\n      });\n    }\n\n    // Proxy WebSocket without the initial http request\n    // https://github.com/chimurai/http-proxy-middleware#external-websocket-upgrade\n    /** @type {RequestHandler[]} */\n    (this.webSocketProxies).forEach((webSocketProxy) => {\n      /** @type {import(\"http\").Server} */\n      (this.server).on(\n        \"upgrade\",\n        /** @type {RequestHandler & { upgrade: NonNullable<RequestHandler[\"upgrade\"]> }} */\n        (webSocketProxy).upgrade\n      );\n    }, this);\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupApp() {\n    /** @type {import(\"express\").Application | undefined}*/\n    // eslint-disable-next-line new-cap\n    this.app = new /** @type {any} */ (express)();\n  }\n\n  /**\n   * @private\n   * @param {Stats | MultiStats} statsObj\n   * @returns {StatsCompilation}\n   */\n  getStats(statsObj) {\n    const stats = Server.DEFAULT_STATS;\n    const compilerOptions = this.getCompilerOptions();\n\n    // @ts-ignore\n    if (compilerOptions.stats && compilerOptions.stats.warningsFilter) {\n      // @ts-ignore\n      stats.warningsFilter = compilerOptions.stats.warningsFilter;\n    }\n\n    return statsObj.toJson(stats);\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupHooks() {\n    this.compiler.hooks.invalid.tap(\"webpack-dev-server\", () => {\n      if (this.webSocketServer) {\n        this.sendMessage(this.webSocketServer.clients, \"invalid\");\n      }\n    });\n    this.compiler.hooks.done.tap(\n      \"webpack-dev-server\",\n      /**\n       * @param {Stats | MultiStats} stats\n       */\n      (stats) => {\n        if (this.webSocketServer) {\n          this.sendStats(this.webSocketServer.clients, this.getStats(stats));\n        }\n\n        /**\n         * @private\n         * @type {Stats | MultiStats}\n         */\n        this.stats = stats;\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupHostHeaderCheck() {\n    /** @type {import(\"express\").Application} */\n    (this.app).all(\n      \"*\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @param {NextFunction} next\n       * @returns {void}\n       */\n      (req, res, next) => {\n        if (\n          this.checkHeader(\n            /** @type {{ [key: string]: string | undefined }} */\n            (req.headers),\n            \"host\"\n          )\n        ) {\n          return next();\n        }\n\n        res.send(\"Invalid Host header\");\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupDevMiddleware() {\n    const webpackDevMiddleware = require(\"webpack-dev-middleware\");\n\n    // middleware for serving webpack bundle\n    this.middleware = webpackDevMiddleware(\n      this.compiler,\n      this.options.devMiddleware\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupBuiltInRoutes() {\n    const { app, middleware } = this;\n\n    /** @type {import(\"express\").Application} */\n    (app).get(\n      \"/__webpack_dev_server__/sockjs.bundle.js\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @returns {void}\n       */\n      (req, res) => {\n        res.setHeader(\"Content-Type\", \"application/javascript\");\n\n        const clientPath = path.join(__dirname, \"..\", \"client\");\n\n        res.sendFile(path.join(clientPath, \"modules/sockjs-client/index.js\"));\n      }\n    );\n\n    /** @type {import(\"express\").Application} */\n    (app).get(\n      \"/webpack-dev-server/invalidate\",\n      /**\n       * @param {Request} _req\n       * @param {Response} res\n       * @returns {void}\n       */\n      (_req, res) => {\n        this.invalidate();\n\n        res.end();\n      }\n    );\n\n    /** @type {import(\"express\").Application} */\n    (app).get(\n      \"/webpack-dev-server\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @returns {void}\n       */\n      (req, res) => {\n        /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n        (middleware).waitUntilValid((stats) => {\n          res.setHeader(\"Content-Type\", \"text/html\");\n          res.write(\n            '<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body>'\n          );\n\n          const statsForPrint =\n            typeof (/** @type {MultiStats} */ (stats).stats) !== \"undefined\"\n              ? /** @type {MultiStats} */ (stats).toJson().children\n              : [/** @type {Stats} */ (stats).toJson()];\n\n          res.write(`<h1>Assets Report:</h1>`);\n\n          /**\n           * @type {StatsCompilation[]}\n           */\n          (statsForPrint).forEach((item, index) => {\n            res.write(\"<div>\");\n\n            const name =\n              // eslint-disable-next-line no-nested-ternary\n              typeof item.name !== \"undefined\"\n                ? item.name\n                : /** @type {MultiStats} */ (stats).stats\n                ? `unnamed[${index}]`\n                : \"unnamed\";\n\n            res.write(`<h2>Compilation: ${name}</h2>`);\n            res.write(\"<ul>\");\n\n            const publicPath =\n              item.publicPath === \"auto\" ? \"\" : item.publicPath;\n\n            for (const asset of /** @type {NonNullable<StatsCompilation[\"assets\"]>} */ (\n              item.assets\n            )) {\n              const assetName = asset.name;\n              const assetURL = `${publicPath}${assetName}`;\n\n              res.write(\n                `<li>\n              <strong><a href=\"${assetURL}\" target=\"_blank\">${assetName}</a></strong>\n            </li>`\n              );\n            }\n\n            res.write(\"</ul>\");\n            res.write(\"</div>\");\n          });\n\n          res.end(\"</body></html>\");\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupWatchStaticFiles() {\n    if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n      /** @type {NormalizedStatic[]} */\n      (this.options.static).forEach((staticOption) => {\n        if (staticOption.watch) {\n          this.watchFiles(staticOption.directory, staticOption.watch);\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupWatchFiles() {\n    const { watchFiles } = this.options;\n\n    if (/** @type {WatchFiles[]} */ (watchFiles).length > 0) {\n      /** @type {WatchFiles[]} */\n      (watchFiles).forEach((item) => {\n        this.watchFiles(item.paths, item.options);\n      });\n    }\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupMiddlewares() {\n    /**\n     * @type {Array<Middleware>}\n     */\n    let middlewares = [];\n\n    // compress is placed last and uses unshift so that it will be the first middleware used\n    if (this.options.compress) {\n      const compression = require(\"compression\");\n\n      middlewares.push({ name: \"compression\", middleware: compression() });\n    }\n\n    if (typeof this.options.onBeforeSetupMiddleware === \"function\") {\n      this.options.onBeforeSetupMiddleware(this);\n    }\n\n    if (typeof this.options.headers !== \"undefined\") {\n      middlewares.push({\n        name: \"set-headers\",\n        path: \"*\",\n        middleware: this.setHeaders.bind(this),\n      });\n    }\n\n    middlewares.push({\n      name: \"webpack-dev-middleware\",\n      middleware:\n        /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n        (this.middleware),\n    });\n\n    if (this.options.proxy) {\n      const { createProxyMiddleware } = require(\"http-proxy-middleware\");\n\n      /**\n       * @param {ProxyConfigArrayItem} proxyConfig\n       * @returns {RequestHandler | undefined}\n       */\n      const getProxyMiddleware = (proxyConfig) => {\n        // It is possible to use the `bypass` method without a `target` or `router`.\n        // However, the proxy middleware has no use in this case, and will fail to instantiate.\n        if (proxyConfig.target) {\n          const context = proxyConfig.context || proxyConfig.path;\n\n          return createProxyMiddleware(\n            /** @type {string} */ (context),\n            proxyConfig\n          );\n        }\n\n        if (proxyConfig.router) {\n          return createProxyMiddleware(proxyConfig);\n        }\n      };\n\n      /**\n       * Assume a proxy configuration specified as:\n       * proxy: [\n       *   {\n       *     context: \"value\",\n       *     ...options,\n       *   },\n       *   // or:\n       *   function() {\n       *     return {\n       *       context: \"context\",\n       *       ...options,\n       *     };\n       *   }\n       * ]\n       */\n      /** @type {ProxyConfigArray} */\n      (this.options.proxy).forEach((proxyConfigOrCallback) => {\n        /**\n         * @type {RequestHandler}\n         */\n        let proxyMiddleware;\n\n        let proxyConfig =\n          typeof proxyConfigOrCallback === \"function\"\n            ? proxyConfigOrCallback()\n            : proxyConfigOrCallback;\n\n        proxyMiddleware =\n          /** @type {RequestHandler} */\n          (getProxyMiddleware(proxyConfig));\n\n        if (proxyConfig.ws) {\n          this.webSocketProxies.push(proxyMiddleware);\n        }\n\n        /**\n         * @param {Request} req\n         * @param {Response} res\n         * @param {NextFunction} next\n         * @returns {Promise<void>}\n         */\n        const handler = async (req, res, next) => {\n          if (typeof proxyConfigOrCallback === \"function\") {\n            const newProxyConfig = proxyConfigOrCallback(req, res, next);\n\n            if (newProxyConfig !== proxyConfig) {\n              proxyConfig = newProxyConfig;\n              proxyMiddleware =\n                /** @type {RequestHandler} */\n                (getProxyMiddleware(proxyConfig));\n            }\n          }\n\n          // - Check if we have a bypass function defined\n          // - In case the bypass function is defined we'll retrieve the\n          // bypassUrl from it otherwise bypassUrl would be null\n          // TODO remove in the next major in favor `context` and `router` options\n          const isByPassFuncDefined = typeof proxyConfig.bypass === \"function\";\n          const bypassUrl = isByPassFuncDefined\n            ? await /** @type {ByPass} */ (proxyConfig.bypass)(\n                req,\n                res,\n                proxyConfig\n              )\n            : null;\n\n          if (typeof bypassUrl === \"boolean\") {\n            // skip the proxy\n            // @ts-ignore\n            req.url = null;\n            next();\n          } else if (typeof bypassUrl === \"string\") {\n            // byPass to that url\n            req.url = bypassUrl;\n            next();\n          } else if (proxyMiddleware) {\n            return proxyMiddleware(req, res, next);\n          } else {\n            next();\n          }\n        };\n\n        middlewares.push({\n          name: \"http-proxy-middleware\",\n          middleware: handler,\n        });\n        // Also forward error requests to the proxy so it can handle them.\n        middlewares.push({\n          name: \"http-proxy-middleware-error-handler\",\n          middleware:\n            /**\n             * @param {Error} error\n             * @param {Request} req\n             * @param {Response} res\n             * @param {NextFunction} next\n             * @returns {any}\n             */\n            (error, req, res, next) => handler(req, res, next),\n        });\n      });\n\n      middlewares.push({\n        name: \"webpack-dev-middleware\",\n        middleware:\n          /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n          (this.middleware),\n      });\n    }\n\n    if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n      /** @type {NormalizedStatic[]} */\n      (this.options.static).forEach((staticOption) => {\n        staticOption.publicPath.forEach((publicPath) => {\n          middlewares.push({\n            name: \"express-static\",\n            path: publicPath,\n            middleware: express.static(\n              staticOption.directory,\n              staticOption.staticOptions\n            ),\n          });\n        });\n      });\n    }\n\n    if (this.options.historyApiFallback) {\n      const connectHistoryApiFallback = require(\"connect-history-api-fallback\");\n      const { historyApiFallback } = this.options;\n\n      if (\n        typeof (\n          /** @type {ConnectHistoryApiFallbackOptions} */\n          (historyApiFallback).logger\n        ) === \"undefined\" &&\n        !(\n          /** @type {ConnectHistoryApiFallbackOptions} */\n          (historyApiFallback).verbose\n        )\n      ) {\n        // @ts-ignore\n        historyApiFallback.logger = this.logger.log.bind(\n          this.logger,\n          \"[connect-history-api-fallback]\"\n        );\n      }\n\n      // Fall back to /index.html if nothing else matches.\n      middlewares.push({\n        name: \"connect-history-api-fallback\",\n        middleware: connectHistoryApiFallback(\n          /** @type {ConnectHistoryApiFallbackOptions} */\n          (historyApiFallback)\n        ),\n      });\n\n      // include our middleware to ensure\n      // it is able to handle '/index.html' request after redirect\n      middlewares.push({\n        name: \"webpack-dev-middleware\",\n        middleware:\n          /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n          (this.middleware),\n      });\n\n      if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n        /** @type {NormalizedStatic[]} */\n        (this.options.static).forEach((staticOption) => {\n          staticOption.publicPath.forEach((publicPath) => {\n            middlewares.push({\n              name: \"express-static\",\n              path: publicPath,\n              middleware: express.static(\n                staticOption.directory,\n                staticOption.staticOptions\n              ),\n            });\n          });\n        });\n      }\n    }\n\n    if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n      const serveIndex = require(\"serve-index\");\n\n      /** @type {NormalizedStatic[]} */\n      (this.options.static).forEach((staticOption) => {\n        staticOption.publicPath.forEach((publicPath) => {\n          if (staticOption.serveIndex) {\n            middlewares.push({\n              name: \"serve-index\",\n              path: publicPath,\n              /**\n               * @param {Request} req\n               * @param {Response} res\n               * @param {NextFunction} next\n               * @returns {void}\n               */\n              middleware: (req, res, next) => {\n                // serve-index doesn't fallthrough non-get/head request to next middleware\n                if (req.method !== \"GET\" && req.method !== \"HEAD\") {\n                  return next();\n                }\n\n                serveIndex(\n                  staticOption.directory,\n                  /** @type {ServeIndexOptions} */\n                  (staticOption.serveIndex)\n                )(req, res, next);\n              },\n            });\n          }\n        });\n      });\n    }\n\n    if (this.options.magicHtml) {\n      middlewares.push({\n        name: \"serve-magic-html\",\n        middleware: this.serveMagicHtml.bind(this),\n      });\n    }\n\n    // Register this middleware always as the last one so that it's only used as a\n    // fallback when no other middleware responses.\n    middlewares.push({\n      name: \"options-middleware\",\n      path: \"*\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @param {NextFunction} next\n       * @returns {void}\n       */\n      middleware: (req, res, next) => {\n        if (req.method === \"OPTIONS\") {\n          res.statusCode = 204;\n          res.setHeader(\"Content-Length\", \"0\");\n          res.end();\n          return;\n        }\n        next();\n      },\n    });\n\n    if (typeof this.options.setupMiddlewares === \"function\") {\n      middlewares = this.options.setupMiddlewares(middlewares, this);\n    }\n\n    middlewares.forEach((middleware) => {\n      if (typeof middleware === \"function\") {\n        /** @type {import(\"express\").Application} */\n        (this.app).use(middleware);\n      } else if (typeof middleware.path !== \"undefined\") {\n        /** @type {import(\"express\").Application} */\n        (this.app).use(middleware.path, middleware.middleware);\n      } else {\n        /** @type {import(\"express\").Application} */\n        (this.app).use(middleware.middleware);\n      }\n    });\n\n    if (typeof this.options.onAfterSetupMiddleware === \"function\") {\n      this.options.onAfterSetupMiddleware(this);\n    }\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  createServer() {\n    const { type, options } = /** @type {ServerConfiguration} */ (\n      this.options.server\n    );\n\n    /** @type {import(\"http\").Server | undefined | null} */\n    // eslint-disable-next-line import/no-dynamic-require\n    this.server = require(/** @type {string} */ (type)).createServer(\n      options,\n      this.app\n    );\n\n    /** @type {import(\"http\").Server} */\n    (this.server).on(\n      \"connection\",\n      /**\n       * @param {Socket} socket\n       */\n      (socket) => {\n        // Add socket to list\n        this.sockets.push(socket);\n\n        socket.once(\"close\", () => {\n          // Remove socket from list\n          this.sockets.splice(this.sockets.indexOf(socket), 1);\n        });\n      }\n    );\n\n    /** @type {import(\"http\").Server} */\n    (this.server).on(\n      \"error\",\n      /**\n       * @param {Error} error\n       */\n      (error) => {\n        throw error;\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  // TODO: remove `--web-socket-server` in favor of `--web-socket-server-type`\n  createWebSocketServer() {\n    /** @type {WebSocketServerImplementation | undefined | null} */\n    this.webSocketServer = new /** @type {any} */ (this.getServerTransport())(\n      this\n    );\n    /** @type {WebSocketServerImplementation} */\n    (this.webSocketServer).implementation.on(\n      \"connection\",\n      /**\n       * @param {ClientConnection} client\n       * @param {IncomingMessage} request\n       */\n      (client, request) => {\n        /** @type {{ [key: string]: string | undefined } | undefined} */\n        const headers =\n          // eslint-disable-next-line no-nested-ternary\n          typeof request !== \"undefined\"\n            ? /** @type {{ [key: string]: string | undefined }} */\n              (request.headers)\n            : typeof (\n                /** @type {import(\"sockjs\").Connection} */ (client).headers\n              ) !== \"undefined\"\n            ? /** @type {import(\"sockjs\").Connection} */ (client).headers\n            : // eslint-disable-next-line no-undefined\n              undefined;\n\n        if (!headers) {\n          this.logger.warn(\n            'webSocketServer implementation must pass headers for the \"connection\" event'\n          );\n        }\n\n        if (\n          !headers ||\n          !this.checkHeader(headers, \"host\") ||\n          !this.checkHeader(headers, \"origin\")\n        ) {\n          this.sendMessage([client], \"error\", \"Invalid Host/Origin header\");\n\n          // With https enabled, the sendMessage above is encrypted asynchronously so not yet sent\n          // Terminate would prevent it sending, so use close to allow it to be sent\n          client.close();\n\n          return;\n        }\n\n        if (this.options.hot === true || this.options.hot === \"only\") {\n          this.sendMessage([client], \"hot\");\n        }\n\n        if (this.options.liveReload) {\n          this.sendMessage([client], \"liveReload\");\n        }\n\n        if (\n          this.options.client &&\n          /** @type {ClientConfiguration} */\n          (this.options.client).progress\n        ) {\n          this.sendMessage(\n            [client],\n            \"progress\",\n            /** @type {ClientConfiguration} */\n            (this.options.client).progress\n          );\n        }\n\n        if (\n          this.options.client &&\n          /** @type {ClientConfiguration} */ (this.options.client).reconnect\n        ) {\n          this.sendMessage(\n            [client],\n            \"reconnect\",\n            /** @type {ClientConfiguration} */\n            (this.options.client).reconnect\n          );\n        }\n\n        if (\n          this.options.client &&\n          /** @type {ClientConfiguration} */\n          (this.options.client).overlay\n        ) {\n          this.sendMessage(\n            [client],\n            \"overlay\",\n            /** @type {ClientConfiguration} */\n            (this.options.client).overlay\n          );\n        }\n\n        if (!this.stats) {\n          return;\n        }\n\n        this.sendStats([client], this.getStats(this.stats), true);\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @param {string} defaultOpenTarget\n   * @returns {void}\n   */\n  openBrowser(defaultOpenTarget) {\n    const open = require(\"open\");\n\n    Promise.all(\n      /** @type {NormalizedOpen[]} */\n      (this.options.open).map((item) => {\n        /**\n         * @type {string}\n         */\n        let openTarget;\n\n        if (item.target === \"<url>\") {\n          openTarget = defaultOpenTarget;\n        } else {\n          openTarget = Server.isAbsoluteURL(item.target)\n            ? item.target\n            : new URL(item.target, defaultOpenTarget).toString();\n        }\n\n        return open(openTarget, item.options).catch(() => {\n          this.logger.warn(\n            `Unable to open \"${openTarget}\" page${\n              item.options.app\n                ? ` in \"${\n                    /** @type {import(\"open\").App} */\n                    (item.options.app).name\n                  }\" app${\n                    /** @type {import(\"open\").App} */\n                    (item.options.app).arguments\n                      ? ` with \"${\n                          /** @type {import(\"open\").App} */\n                          (item.options.app).arguments.join(\" \")\n                        }\" arguments`\n                      : \"\"\n                  }`\n                : \"\"\n            }. If you are running in a headless environment, please do not use the \"open\" option or related flags like \"--open\", \"--open-target\", and \"--open-app\".`\n          );\n        });\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  runBonjour() {\n    const { Bonjour } = require(\"bonjour-service\");\n    /**\n     * @private\n     * @type {Bonjour | undefined}\n     */\n    this.bonjour = new Bonjour();\n    this.bonjour.publish({\n      // @ts-expect-error\n      name: `Webpack Dev Server ${os.hostname()}:${this.options.port}`,\n      // @ts-expect-error\n      port: /** @type {number} */ (this.options.port),\n      // @ts-expect-error\n      type:\n        /** @type {ServerConfiguration} */\n        (this.options.server).type === \"http\" ? \"http\" : \"https\",\n      subtypes: [\"webpack\"],\n      .../** @type {BonjourOptions} */ (this.options.bonjour),\n    });\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  stopBonjour(callback = () => {}) {\n    /** @type {Bonjour} */\n    (this.bonjour).unpublishAll(() => {\n      /** @type {Bonjour} */\n      (this.bonjour).destroy();\n\n      if (callback) {\n        callback();\n      }\n    });\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  logStatus() {\n    const { isColorSupported, cyan, red } = require(\"colorette\");\n\n    /**\n     * @param {Compiler[\"options\"]} compilerOptions\n     * @returns {boolean}\n     */\n    const getColorsOption = (compilerOptions) => {\n      /**\n       * @type {boolean}\n       */\n      let colorsEnabled;\n\n      if (\n        compilerOptions.stats &&\n        typeof (/** @type {StatsOptions} */ (compilerOptions.stats).colors) !==\n          \"undefined\"\n      ) {\n        colorsEnabled =\n          /** @type {boolean} */\n          (/** @type {StatsOptions} */ (compilerOptions.stats).colors);\n      } else {\n        colorsEnabled = isColorSupported;\n      }\n\n      return colorsEnabled;\n    };\n\n    const colors = {\n      /**\n       * @param {boolean} useColor\n       * @param {string} msg\n       * @returns {string}\n       */\n      info(useColor, msg) {\n        if (useColor) {\n          return cyan(msg);\n        }\n\n        return msg;\n      },\n      /**\n       * @param {boolean} useColor\n       * @param {string} msg\n       * @returns {string}\n       */\n      error(useColor, msg) {\n        if (useColor) {\n          return red(msg);\n        }\n\n        return msg;\n      },\n    };\n    const useColor = getColorsOption(this.getCompilerOptions());\n\n    if (this.options.ipc) {\n      this.logger.info(\n        `Project is running at: \"${\n          /** @type {import(\"http\").Server} */\n          (this.server).address()\n        }\"`\n      );\n    } else {\n      const protocol =\n        /** @type {ServerConfiguration} */\n        (this.options.server).type === \"http\" ? \"http\" : \"https\";\n      const { address, port } =\n        /** @type {import(\"net\").AddressInfo} */\n        (\n          /** @type {import(\"http\").Server} */\n          (this.server).address()\n        );\n      /**\n       * @param {string} newHostname\n       * @returns {string}\n       */\n      const prettyPrintURL = (newHostname) =>\n        url.format({ protocol, hostname: newHostname, port, pathname: \"/\" });\n\n      let server;\n      let localhost;\n      let loopbackIPv4;\n      let loopbackIPv6;\n      let networkUrlIPv4;\n      let networkUrlIPv6;\n\n      if (this.options.host) {\n        if (this.options.host === \"localhost\") {\n          localhost = prettyPrintURL(\"localhost\");\n        } else {\n          let isIP;\n\n          try {\n            isIP = ipaddr.parse(this.options.host);\n          } catch (error) {\n            // Ignore\n          }\n\n          if (!isIP) {\n            server = prettyPrintURL(this.options.host);\n          }\n        }\n      }\n\n      const parsedIP = ipaddr.parse(address);\n\n      if (parsedIP.range() === \"unspecified\") {\n        localhost = prettyPrintURL(\"localhost\");\n\n        const networkIPv4 = Server.internalIPSync(\"v4\");\n\n        if (networkIPv4) {\n          networkUrlIPv4 = prettyPrintURL(networkIPv4);\n        }\n\n        const networkIPv6 = Server.internalIPSync(\"v6\");\n\n        if (networkIPv6) {\n          networkUrlIPv6 = prettyPrintURL(networkIPv6);\n        }\n      } else if (parsedIP.range() === \"loopback\") {\n        if (parsedIP.kind() === \"ipv4\") {\n          loopbackIPv4 = prettyPrintURL(parsedIP.toString());\n        } else if (parsedIP.kind() === \"ipv6\") {\n          loopbackIPv6 = prettyPrintURL(parsedIP.toString());\n        }\n      } else {\n        networkUrlIPv4 =\n          parsedIP.kind() === \"ipv6\" &&\n          /** @type {IPv6} */\n          (parsedIP).isIPv4MappedAddress()\n            ? prettyPrintURL(\n                /** @type {IPv6} */\n                (parsedIP).toIPv4Address().toString()\n              )\n            : prettyPrintURL(address);\n\n        if (parsedIP.kind() === \"ipv6\") {\n          networkUrlIPv6 = prettyPrintURL(address);\n        }\n      }\n\n      this.logger.info(\"Project is running at:\");\n\n      if (server) {\n        this.logger.info(`Server: ${colors.info(useColor, server)}`);\n      }\n\n      if (localhost || loopbackIPv4 || loopbackIPv6) {\n        const loopbacks = [];\n\n        if (localhost) {\n          loopbacks.push([colors.info(useColor, localhost)]);\n        }\n\n        if (loopbackIPv4) {\n          loopbacks.push([colors.info(useColor, loopbackIPv4)]);\n        }\n\n        if (loopbackIPv6) {\n          loopbacks.push([colors.info(useColor, loopbackIPv6)]);\n        }\n\n        this.logger.info(`Loopback: ${loopbacks.join(\", \")}`);\n      }\n\n      if (networkUrlIPv4) {\n        this.logger.info(\n          `On Your Network (IPv4): ${colors.info(useColor, networkUrlIPv4)}`\n        );\n      }\n\n      if (networkUrlIPv6) {\n        this.logger.info(\n          `On Your Network (IPv6): ${colors.info(useColor, networkUrlIPv6)}`\n        );\n      }\n\n      if (/** @type {NormalizedOpen[]} */ (this.options.open).length > 0) {\n        const openTarget = prettyPrintURL(this.options.host || \"localhost\");\n\n        this.openBrowser(openTarget);\n      }\n    }\n\n    if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n      this.logger.info(\n        `Content not from webpack is served from '${colors.info(\n          useColor,\n          /** @type {NormalizedStatic[]} */\n          (this.options.static)\n            .map((staticOption) => staticOption.directory)\n            .join(\", \")\n        )}' directory`\n      );\n    }\n\n    if (this.options.historyApiFallback) {\n      this.logger.info(\n        `404s will fallback to '${colors.info(\n          useColor,\n          /** @type {ConnectHistoryApiFallbackOptions} */ (\n            this.options.historyApiFallback\n          ).index || \"/index.html\"\n        )}'`\n      );\n    }\n\n    if (this.options.bonjour) {\n      const bonjourProtocol =\n        /** @type {BonjourOptions} */\n        (this.options.bonjour).type ||\n        /** @type {ServerConfiguration} */\n        (this.options.server).type === \"http\"\n          ? \"http\"\n          : \"https\";\n\n      this.logger.info(\n        `Broadcasting \"${bonjourProtocol}\" with subtype of \"webpack\" via ZeroConf DNS (Bonjour)`\n      );\n    }\n  }\n\n  /**\n   * @private\n   * @param {Request} req\n   * @param {Response} res\n   * @param {NextFunction} next\n   */\n  setHeaders(req, res, next) {\n    let { headers } = this.options;\n\n    if (headers) {\n      if (typeof headers === \"function\") {\n        headers = headers(\n          req,\n          res,\n          /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n          (this.middleware).context\n        );\n      }\n\n      /**\n       * @type {{key: string, value: string}[]}\n       */\n      const allHeaders = [];\n\n      if (!Array.isArray(headers)) {\n        // eslint-disable-next-line guard-for-in\n        for (const name in headers) {\n          // @ts-ignore\n          allHeaders.push({ key: name, value: headers[name] });\n        }\n\n        headers = allHeaders;\n      }\n\n      headers.forEach(\n        /**\n         * @param {{key: string, value: any}} header\n         */\n        (header) => {\n          res.setHeader(header.key, header.value);\n        }\n      );\n    }\n\n    next();\n  }\n\n  /**\n   * @private\n   * @param {{ [key: string]: string | undefined }} headers\n   * @param {string} headerToCheck\n   * @returns {boolean}\n   */\n  checkHeader(headers, headerToCheck) {\n    // allow user to opt out of this security check, at their own risk\n    // by explicitly enabling allowedHosts\n    if (this.options.allowedHosts === \"all\") {\n      return true;\n    }\n\n    // get the Host header and extract hostname\n    // we don't care about port not matching\n    const hostHeader = headers[headerToCheck];\n\n    if (!hostHeader) {\n      return false;\n    }\n\n    if (/^(file|.+-extension):/i.test(hostHeader)) {\n      return true;\n    }\n\n    // use the node url-parser to retrieve the hostname from the host-header.\n    const hostname = url.parse(\n      // if hostHeader doesn't have scheme, add // for parsing.\n      /^(.+:)?\\/\\//.test(hostHeader) ? hostHeader : `//${hostHeader}`,\n      false,\n      true\n    ).hostname;\n\n    // always allow requests with explicit IPv4 or IPv6-address.\n    // A note on IPv6 addresses:\n    // hostHeader will always contain the brackets denoting\n    // an IPv6-address in URLs,\n    // these are removed from the hostname in url.parse(),\n    // so we have the pure IPv6-address in hostname.\n    // For convenience, always allow localhost (hostname === 'localhost')\n    // and its subdomains (hostname.endsWith(\".localhost\")).\n    // allow hostname of listening address  (hostname === this.options.host)\n    const isValidHostname =\n      (hostname !== null && ipaddr.IPv4.isValid(hostname)) ||\n      (hostname !== null && ipaddr.IPv6.isValid(hostname)) ||\n      hostname === \"localhost\" ||\n      (hostname !== null && hostname.endsWith(\".localhost\")) ||\n      hostname === this.options.host;\n\n    if (isValidHostname) {\n      return true;\n    }\n\n    const { allowedHosts } = this.options;\n\n    // always allow localhost host, for convenience\n    // allow if hostname is in allowedHosts\n    if (Array.isArray(allowedHosts) && allowedHosts.length > 0) {\n      for (let hostIdx = 0; hostIdx < allowedHosts.length; hostIdx++) {\n        const allowedHost = allowedHosts[hostIdx];\n\n        if (allowedHost === hostname) {\n          return true;\n        }\n\n        // support \".\" as a subdomain wildcard\n        // e.g. \".example.com\" will allow \"example.com\", \"www.example.com\", \"subdomain.example.com\", etc\n        if (allowedHost[0] === \".\") {\n          // \"example.com\"  (hostname === allowedHost.substring(1))\n          // \"*.example.com\"  (hostname.endsWith(allowedHost))\n          if (\n            hostname === allowedHost.substring(1) ||\n            /** @type {string} */ (hostname).endsWith(allowedHost)\n          ) {\n            return true;\n          }\n        }\n      }\n    }\n\n    // Also allow if `client.webSocketURL.hostname` provided\n    if (\n      this.options.client &&\n      typeof (\n        /** @type {ClientConfiguration} */ (this.options.client).webSocketURL\n      ) !== \"undefined\"\n    ) {\n      return (\n        /** @type {WebSocketURL} */\n        (/** @type {ClientConfiguration} */ (this.options.client).webSocketURL)\n          .hostname === hostname\n      );\n    }\n\n    // disallow\n    return false;\n  }\n\n  /**\n   * @param {ClientConnection[]} clients\n   * @param {string} type\n   * @param {any} [data]\n   * @param {any} [params]\n   */\n  // eslint-disable-next-line class-methods-use-this\n  sendMessage(clients, type, data, params) {\n    for (const client of clients) {\n      // `sockjs` uses `1` to indicate client is ready to accept data\n      // `ws` uses `WebSocket.OPEN`, but it is mean `1` too\n      if (client.readyState === 1) {\n        client.send(JSON.stringify({ type, data, params }));\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Request} req\n   * @param {Response} res\n   * @param {NextFunction} next\n   * @returns {void}\n   */\n  serveMagicHtml(req, res, next) {\n    if (req.method !== \"GET\" && req.method !== \"HEAD\") {\n      return next();\n    }\n\n    /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n    (this.middleware).waitUntilValid(() => {\n      const _path = req.path;\n\n      try {\n        const filename =\n          /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n          (this.middleware).getFilenameFromUrl(`${_path}.js`);\n        const isFile =\n          /** @type {Compiler[\"outputFileSystem\"] & { statSync: import(\"fs\").StatSyncFn }}*/\n          (\n            /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n            (this.middleware).context.outputFileSystem\n          )\n            .statSync(/** @type {import(\"fs\").PathLike} */ (filename))\n            .isFile();\n\n        if (!isFile) {\n          return next();\n        }\n\n        // Serve a page that executes the javascript\n        // @ts-ignore\n        const queries = req._parsedUrl.search || \"\";\n        const responsePage = `<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body><script type=\"text/javascript\" charset=\"utf-8\" src=\"${_path}.js${queries}\"></script></body></html>`;\n\n        res.send(responsePage);\n      } catch (error) {\n        return next();\n      }\n    });\n  }\n\n  // Send stats to a socket or multiple sockets\n  /**\n   * @private\n   * @param {ClientConnection[]} clients\n   * @param {StatsCompilation} stats\n   * @param {boolean} [force]\n   */\n  sendStats(clients, stats, force) {\n    const shouldEmit =\n      !force &&\n      stats &&\n      (!stats.errors || stats.errors.length === 0) &&\n      (!stats.warnings || stats.warnings.length === 0) &&\n      this.currentHash === stats.hash;\n\n    if (shouldEmit) {\n      this.sendMessage(clients, \"still-ok\");\n\n      return;\n    }\n\n    this.currentHash = stats.hash;\n    this.sendMessage(clients, \"hash\", stats.hash);\n\n    if (\n      /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n      (stats.errors).length > 0 ||\n      /** @type {NonNullable<StatsCompilation[\"warnings\"]>} */\n      (stats.warnings).length > 0\n    ) {\n      const hasErrors =\n        /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n        (stats.errors).length > 0;\n\n      if (\n        /** @type {NonNullable<StatsCompilation[\"warnings\"]>} */\n        (stats.warnings).length > 0\n      ) {\n        let params;\n\n        if (hasErrors) {\n          params = { preventReloading: true };\n        }\n\n        this.sendMessage(clients, \"warnings\", stats.warnings, params);\n      }\n\n      if (\n        /** @type {NonNullable<StatsCompilation[\"errors\"]>} */ (stats.errors)\n          .length > 0\n      ) {\n        this.sendMessage(clients, \"errors\", stats.errors);\n      }\n    } else {\n      this.sendMessage(clients, \"ok\");\n    }\n  }\n\n  /**\n   * @param {string | string[]} watchPath\n   * @param {WatchOptions} [watchOptions]\n   */\n  watchFiles(watchPath, watchOptions) {\n    const chokidar = require(\"chokidar\");\n    const watcher = chokidar.watch(watchPath, watchOptions);\n\n    // disabling refreshing on changing the content\n    if (this.options.liveReload) {\n      watcher.on(\"change\", (item) => {\n        if (this.webSocketServer) {\n          this.sendMessage(\n            this.webSocketServer.clients,\n            \"static-changed\",\n            item\n          );\n        }\n      });\n    }\n\n    this.staticWatchers.push(watcher);\n  }\n\n  /**\n   * @param {import(\"webpack-dev-middleware\").Callback} [callback]\n   */\n  invalidate(callback = () => {}) {\n    if (this.middleware) {\n      this.middleware.invalidate(callback);\n    }\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  async start() {\n    await this.normalizeOptions();\n\n    if (this.options.ipc) {\n      await /** @type {Promise<void>} */ (\n        new Promise((resolve, reject) => {\n          const net = require(\"net\");\n          const socket = new net.Socket();\n\n          socket.on(\n            \"error\",\n            /**\n             * @param {Error & { code?: string }} error\n             */\n            (error) => {\n              if (error.code === \"ECONNREFUSED\") {\n                // No other server listening on this socket so it can be safely removed\n                fs.unlinkSync(/** @type {string} */ (this.options.ipc));\n\n                resolve();\n\n                return;\n              } else if (error.code === \"ENOENT\") {\n                resolve();\n\n                return;\n              }\n\n              reject(error);\n            }\n          );\n\n          socket.connect(\n            { path: /** @type {string} */ (this.options.ipc) },\n            () => {\n              throw new Error(`IPC \"${this.options.ipc}\" is already used`);\n            }\n          );\n        })\n      );\n    } else {\n      this.options.host = await Server.getHostname(\n        /** @type {Host} */ (this.options.host)\n      );\n      this.options.port = await Server.getFreePort(\n        /** @type {Port} */ (this.options.port),\n        this.options.host\n      );\n    }\n\n    await this.initialize();\n\n    const listenOptions = this.options.ipc\n      ? { path: this.options.ipc }\n      : { host: this.options.host, port: this.options.port };\n\n    await /** @type {Promise<void>} */ (\n      new Promise((resolve) => {\n        /** @type {import(\"http\").Server} */\n        (this.server).listen(listenOptions, () => {\n          resolve();\n        });\n      })\n    );\n\n    if (this.options.ipc) {\n      // chmod 666 (rw rw rw)\n      const READ_WRITE = 438;\n\n      await fs.promises.chmod(\n        /** @type {string} */ (this.options.ipc),\n        READ_WRITE\n      );\n    }\n\n    if (this.options.webSocketServer) {\n      this.createWebSocketServer();\n    }\n\n    if (this.options.bonjour) {\n      this.runBonjour();\n    }\n\n    this.logStatus();\n\n    if (typeof this.options.onListening === \"function\") {\n      this.options.onListening(this);\n    }\n  }\n\n  /**\n   * @param {(err?: Error) => void} [callback]\n   */\n  startCallback(callback = () => {}) {\n    this.start()\n      .then(() => callback(), callback)\n      .catch(callback);\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  async stop() {\n    if (this.bonjour) {\n      await /** @type {Promise<void>} */ (\n        new Promise((resolve) => {\n          this.stopBonjour(() => {\n            resolve();\n          });\n        })\n      );\n    }\n\n    this.webSocketProxies = [];\n\n    await Promise.all(this.staticWatchers.map((watcher) => watcher.close()));\n\n    this.staticWatchers = [];\n\n    if (this.webSocketServer) {\n      await /** @type {Promise<void>} */ (\n        new Promise((resolve) => {\n          /** @type {WebSocketServerImplementation} */\n          (this.webSocketServer).implementation.close(() => {\n            this.webSocketServer = null;\n\n            resolve();\n          });\n\n          for (const client of /** @type {WebSocketServerImplementation} */ (\n            this.webSocketServer\n          ).clients) {\n            client.terminate();\n          }\n\n          /** @type {WebSocketServerImplementation} */\n          (this.webSocketServer).clients = [];\n        })\n      );\n    }\n\n    if (this.server) {\n      await /** @type {Promise<void>} */ (\n        new Promise((resolve) => {\n          /** @type {import(\"http\").Server} */\n          (this.server).close(() => {\n            this.server = null;\n\n            resolve();\n          });\n\n          for (const socket of this.sockets) {\n            socket.destroy();\n          }\n\n          this.sockets = [];\n        })\n      );\n\n      if (this.middleware) {\n        await /** @type {Promise<void>} */ (\n          new Promise((resolve, reject) => {\n            /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n            (this.middleware).close((error) => {\n              if (error) {\n                reject(error);\n\n                return;\n              }\n\n              resolve();\n            });\n          })\n        );\n\n        this.middleware = null;\n      }\n    }\n\n    // We add listeners to signals when creating a new Server instance\n    // So ensure they are removed to prevent EventEmitter memory leak warnings\n    for (const item of this.listeners) {\n      process.removeListener(item.name, item.listener);\n    }\n  }\n\n  /**\n   * @param {(err?: Error) => void} [callback]\n   */\n  stopCallback(callback = () => {}) {\n    this.stop()\n      .then(() => callback(), callback)\n      .catch(callback);\n  }\n\n  // TODO remove in the next major release\n  /**\n   * @param {Port} port\n   * @param {Host} hostname\n   * @param {(err?: Error) => void} fn\n   * @returns {void}\n   */\n  listen(port, hostname, fn) {\n    util.deprecate(\n      () => {},\n      \"'listen' is deprecated. Please use the async 'start' or 'startCallback' method.\",\n      \"DEP_WEBPACK_DEV_SERVER_LISTEN\"\n    )();\n\n    if (typeof port === \"function\") {\n      fn = port;\n    }\n\n    if (\n      typeof port !== \"undefined\" &&\n      typeof this.options.port !== \"undefined\" &&\n      port !== this.options.port\n    ) {\n      this.options.port = port;\n\n      this.logger.warn(\n        'The \"port\" specified in options is different from the port passed as an argument. Will be used from arguments.'\n      );\n    }\n\n    if (!this.options.port) {\n      this.options.port = port;\n    }\n\n    if (\n      typeof hostname !== \"undefined\" &&\n      typeof this.options.host !== \"undefined\" &&\n      hostname !== this.options.host\n    ) {\n      this.options.host = hostname;\n\n      this.logger.warn(\n        'The \"host\" specified in options is different from the host passed as an argument. Will be used from arguments.'\n      );\n    }\n\n    if (!this.options.host) {\n      this.options.host = hostname;\n    }\n\n    this.start()\n      .then(() => {\n        if (fn) {\n          fn.call(this.server);\n        }\n      })\n      .catch((error) => {\n        // Nothing\n        if (fn) {\n          fn.call(this.server, error);\n        }\n      });\n  }\n\n  /**\n   * @param {(err?: Error) => void} [callback]\n   * @returns {void}\n   */\n  // TODO remove in the next major release\n  close(callback) {\n    util.deprecate(\n      () => {},\n      \"'close' is deprecated. Please use the async 'stop' or 'stopCallback' method.\",\n      \"DEP_WEBPACK_DEV_SERVER_CLOSE\"\n    )();\n\n    this.stop()\n      .then(() => {\n        if (callback) {\n          callback();\n        }\n      })\n      .catch((error) => {\n        if (callback) {\n          callback(error);\n        }\n      });\n  }\n}\n\nmodule.exports = Server;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}