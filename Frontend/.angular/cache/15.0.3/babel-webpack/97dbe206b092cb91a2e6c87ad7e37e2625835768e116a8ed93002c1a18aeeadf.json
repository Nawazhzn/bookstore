{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getWebpackConfig = exports.getEmittedFiles = void 0;\nconst fs_1 = require(\"fs\");\nconst path = __importStar(require(\"path\"));\nconst url_1 = require(\"url\");\nfunction getEmittedFiles(compilation) {\n  var _a;\n  const files = [];\n  const chunkFileNames = new Set();\n  // adds all chunks to the list of emitted files such as lazy loaded modules\n  for (const chunk of compilation.chunks) {\n    for (const file of chunk.files) {\n      if (chunkFileNames.has(file)) {\n        continue;\n      }\n      chunkFileNames.add(file);\n      files.push({\n        id: (_a = chunk.id) === null || _a === void 0 ? void 0 : _a.toString(),\n        name: chunk.name,\n        file,\n        extension: path.extname(file),\n        initial: chunk.isOnlyInitial()\n      });\n    }\n  }\n  // add all other files\n  for (const file of Object.keys(compilation.assets)) {\n    // Chunk files have already been added to the files list above\n    if (chunkFileNames.has(file)) {\n      continue;\n    }\n    files.push({\n      file,\n      extension: path.extname(file),\n      initial: false,\n      asset: true\n    });\n  }\n  return files;\n}\nexports.getEmittedFiles = getEmittedFiles;\n/**\n * This uses a dynamic import to load a module which may be ESM.\n * CommonJS code can load ESM code via a dynamic import. Unfortunately, TypeScript\n * will currently, unconditionally downlevel dynamic import into a require call.\n * require calls cannot load ESM code and will result in a runtime error. To workaround\n * this, a Function constructor is used to prevent TypeScript from changing the dynamic import.\n * Once TypeScript provides support for keeping the dynamic import this workaround can\n * be dropped.\n *\n * @param modulePath The path of the module to load.\n * @returns A Promise that resolves to the dynamically imported module.\n */\nfunction loadEsmModule(modulePath) {\n  return new Function('modulePath', `return import(modulePath);`)(modulePath);\n}\nfunction getWebpackConfig(_x) {\n  return _getWebpackConfig.apply(this, arguments);\n}\nfunction _getWebpackConfig() {\n  _getWebpackConfig = _asyncToGenerator(function* (configPath) {\n    if (!(0, fs_1.existsSync)(configPath)) {\n      throw new Error(`Webpack configuration file ${configPath} does not exist.`);\n    }\n    switch (path.extname(configPath)) {\n      case '.mjs':\n        // Load the ESM configuration file using the TypeScript dynamic import workaround.\n        // Once TypeScript provides support for keeping the dynamic import this workaround can be\n        // changed to a direct dynamic import.\n        return (yield loadEsmModule((0, url_1.pathToFileURL)(configPath))).default;\n      case '.cjs':\n        return require(configPath);\n      default:\n        // The file could be either CommonJS or ESM.\n        // CommonJS is tried first then ESM if loading fails.\n        try {\n          return require(configPath);\n        } catch (e) {\n          if (e.code === 'ERR_REQUIRE_ESM') {\n            // Load the ESM configuration file using the TypeScript dynamic import workaround.\n            // Once TypeScript provides support for keeping the dynamic import this workaround can be\n            // changed to a direct dynamic import.\n            return (yield loadEsmModule((0, url_1.pathToFileURL)(configPath))).default;\n          }\n          throw e;\n        }\n    }\n  });\n  return _getWebpackConfig.apply(this, arguments);\n}\nexports.getWebpackConfig = getWebpackConfig;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","getWebpackConfig","getEmittedFiles","fs_1","require","path","url_1","compilation","_a","files","chunkFileNames","Set","chunk","chunks","file","has","add","push","id","toString","name","extension","extname","initial","isOnlyInitial","keys","assets","asset","loadEsmModule","modulePath","Function","configPath","existsSync","Error","pathToFileURL","default","e","code"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-webpack/src/utils.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getWebpackConfig = exports.getEmittedFiles = void 0;\nconst fs_1 = require(\"fs\");\nconst path = __importStar(require(\"path\"));\nconst url_1 = require(\"url\");\nfunction getEmittedFiles(compilation) {\n    var _a;\n    const files = [];\n    const chunkFileNames = new Set();\n    // adds all chunks to the list of emitted files such as lazy loaded modules\n    for (const chunk of compilation.chunks) {\n        for (const file of chunk.files) {\n            if (chunkFileNames.has(file)) {\n                continue;\n            }\n            chunkFileNames.add(file);\n            files.push({\n                id: (_a = chunk.id) === null || _a === void 0 ? void 0 : _a.toString(),\n                name: chunk.name,\n                file,\n                extension: path.extname(file),\n                initial: chunk.isOnlyInitial(),\n            });\n        }\n    }\n    // add all other files\n    for (const file of Object.keys(compilation.assets)) {\n        // Chunk files have already been added to the files list above\n        if (chunkFileNames.has(file)) {\n            continue;\n        }\n        files.push({ file, extension: path.extname(file), initial: false, asset: true });\n    }\n    return files;\n}\nexports.getEmittedFiles = getEmittedFiles;\n/**\n * This uses a dynamic import to load a module which may be ESM.\n * CommonJS code can load ESM code via a dynamic import. Unfortunately, TypeScript\n * will currently, unconditionally downlevel dynamic import into a require call.\n * require calls cannot load ESM code and will result in a runtime error. To workaround\n * this, a Function constructor is used to prevent TypeScript from changing the dynamic import.\n * Once TypeScript provides support for keeping the dynamic import this workaround can\n * be dropped.\n *\n * @param modulePath The path of the module to load.\n * @returns A Promise that resolves to the dynamically imported module.\n */\nfunction loadEsmModule(modulePath) {\n    return new Function('modulePath', `return import(modulePath);`)(modulePath);\n}\nasync function getWebpackConfig(configPath) {\n    if (!(0, fs_1.existsSync)(configPath)) {\n        throw new Error(`Webpack configuration file ${configPath} does not exist.`);\n    }\n    switch (path.extname(configPath)) {\n        case '.mjs':\n            // Load the ESM configuration file using the TypeScript dynamic import workaround.\n            // Once TypeScript provides support for keeping the dynamic import this workaround can be\n            // changed to a direct dynamic import.\n            return (await loadEsmModule((0, url_1.pathToFileURL)(configPath))).default;\n        case '.cjs':\n            return require(configPath);\n        default:\n            // The file could be either CommonJS or ESM.\n            // CommonJS is tried first then ESM if loading fails.\n            try {\n                return require(configPath);\n            }\n            catch (e) {\n                if (e.code === 'ERR_REQUIRE_ESM') {\n                    // Load the ESM configuration file using the TypeScript dynamic import workaround.\n                    // Once TypeScript provides support for keeping the dynamic import this workaround can be\n                    // changed to a direct dynamic import.\n                    return (await loadEsmModule((0, url_1.pathToFileURL)(configPath)))\n                        .default;\n                }\n                throw e;\n            }\n    }\n}\nexports.getWebpackConfig = getWebpackConfig;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}