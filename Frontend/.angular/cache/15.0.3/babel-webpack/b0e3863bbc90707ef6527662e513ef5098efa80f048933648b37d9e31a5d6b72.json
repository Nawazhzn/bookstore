{"ast":null,"code":"'use strict';\n\nconst Tokenizer = require('parse5/lib/tokenizer');\nconst foreignContent = require('parse5/lib/common/foreign-content');\nconst unicode = require('parse5/lib/common/unicode');\nconst HTML = require('parse5/lib/common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\n\n//ParserFeedbackSimulator\n//Simulates adjustment of the Tokenizer which performed by standard parser during tree construction.\nclass ParserFeedbackSimulator {\n  constructor(tokenizer) {\n    this.tokenizer = tokenizer;\n    this.namespaceStack = [];\n    this.namespaceStackTop = -1;\n    this._enterNamespace(NS.HTML);\n  }\n  getNextToken() {\n    const token = this.tokenizer.getNextToken();\n    if (token.type === Tokenizer.START_TAG_TOKEN) {\n      this._handleStartTagToken(token);\n    } else if (token.type === Tokenizer.END_TAG_TOKEN) {\n      this._handleEndTagToken(token);\n    } else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN && this.inForeignContent) {\n      token.type = Tokenizer.CHARACTER_TOKEN;\n      token.chars = unicode.REPLACEMENT_CHARACTER;\n    } else if (this.skipNextNewLine) {\n      if (token.type !== Tokenizer.HIBERNATION_TOKEN) {\n        this.skipNextNewLine = false;\n      }\n      if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === '\\n') {\n        if (token.chars.length === 1) {\n          return this.getNextToken();\n        }\n        token.chars = token.chars.substr(1);\n      }\n    }\n    return token;\n  }\n\n  //Namespace stack mutations\n  _enterNamespace(namespace) {\n    this.namespaceStackTop++;\n    this.namespaceStack.push(namespace);\n    this.inForeignContent = namespace !== NS.HTML;\n    this.currentNamespace = namespace;\n    this.tokenizer.allowCDATA = this.inForeignContent;\n  }\n  _leaveCurrentNamespace() {\n    this.namespaceStackTop--;\n    this.namespaceStack.pop();\n    this.currentNamespace = this.namespaceStack[this.namespaceStackTop];\n    this.inForeignContent = this.currentNamespace !== NS.HTML;\n    this.tokenizer.allowCDATA = this.inForeignContent;\n  }\n\n  //Token handlers\n  _ensureTokenizerMode(tn) {\n    if (tn === $.TEXTAREA || tn === $.TITLE) {\n      this.tokenizer.state = Tokenizer.MODE.RCDATA;\n    } else if (tn === $.PLAINTEXT) {\n      this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n    } else if (tn === $.SCRIPT) {\n      this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;\n    } else if (tn === $.STYLE || tn === $.IFRAME || tn === $.XMP || tn === $.NOEMBED || tn === $.NOFRAMES || tn === $.NOSCRIPT) {\n      this.tokenizer.state = Tokenizer.MODE.RAWTEXT;\n    }\n  }\n  _handleStartTagToken(token) {\n    let tn = token.tagName;\n    if (tn === $.SVG) {\n      this._enterNamespace(NS.SVG);\n    } else if (tn === $.MATH) {\n      this._enterNamespace(NS.MATHML);\n    }\n    if (this.inForeignContent) {\n      if (foreignContent.causesExit(token)) {\n        this._leaveCurrentNamespace();\n        return;\n      }\n      const currentNs = this.currentNamespace;\n      if (currentNs === NS.MATHML) {\n        foreignContent.adjustTokenMathMLAttrs(token);\n      } else if (currentNs === NS.SVG) {\n        foreignContent.adjustTokenSVGTagName(token);\n        foreignContent.adjustTokenSVGAttrs(token);\n      }\n      foreignContent.adjustTokenXMLAttrs(token);\n      tn = token.tagName;\n      if (!token.selfClosing && foreignContent.isIntegrationPoint(tn, currentNs, token.attrs)) {\n        this._enterNamespace(NS.HTML);\n      }\n    } else {\n      if (tn === $.PRE || tn === $.TEXTAREA || tn === $.LISTING) {\n        this.skipNextNewLine = true;\n      } else if (tn === $.IMAGE) {\n        token.tagName = $.IMG;\n      }\n      this._ensureTokenizerMode(tn);\n    }\n  }\n  _handleEndTagToken(token) {\n    let tn = token.tagName;\n    if (!this.inForeignContent) {\n      const previousNs = this.namespaceStack[this.namespaceStackTop - 1];\n      if (previousNs === NS.SVG && foreignContent.SVG_TAG_NAMES_ADJUSTMENT_MAP[tn]) {\n        tn = foreignContent.SVG_TAG_NAMES_ADJUSTMENT_MAP[tn];\n      }\n\n      //NOTE: check for exit from integration point\n      if (foreignContent.isIntegrationPoint(tn, previousNs, token.attrs)) {\n        this._leaveCurrentNamespace();\n      }\n    } else if (tn === $.SVG && this.currentNamespace === NS.SVG || tn === $.MATH && this.currentNamespace === NS.MATHML) {\n      this._leaveCurrentNamespace();\n    }\n\n    // NOTE: adjust end tag name as well for consistency\n    if (this.currentNamespace === NS.SVG) {\n      foreignContent.adjustTokenSVGTagName(token);\n    }\n  }\n}\nmodule.exports = ParserFeedbackSimulator;","map":{"version":3,"names":["Tokenizer","require","foreignContent","unicode","HTML","$","TAG_NAMES","NS","NAMESPACES","ParserFeedbackSimulator","constructor","tokenizer","namespaceStack","namespaceStackTop","_enterNamespace","getNextToken","token","type","START_TAG_TOKEN","_handleStartTagToken","END_TAG_TOKEN","_handleEndTagToken","NULL_CHARACTER_TOKEN","inForeignContent","CHARACTER_TOKEN","chars","REPLACEMENT_CHARACTER","skipNextNewLine","HIBERNATION_TOKEN","WHITESPACE_CHARACTER_TOKEN","length","substr","namespace","push","currentNamespace","allowCDATA","_leaveCurrentNamespace","pop","_ensureTokenizerMode","tn","TEXTAREA","TITLE","state","MODE","RCDATA","PLAINTEXT","SCRIPT","SCRIPT_DATA","STYLE","IFRAME","XMP","NOEMBED","NOFRAMES","NOSCRIPT","RAWTEXT","tagName","SVG","MATH","MATHML","causesExit","currentNs","adjustTokenMathMLAttrs","adjustTokenSVGTagName","adjustTokenSVGAttrs","adjustTokenXMLAttrs","selfClosing","isIntegrationPoint","attrs","PRE","LISTING","IMAGE","IMG","previousNs","SVG_TAG_NAMES_ADJUSTMENT_MAP","module","exports"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/parse5-sax-parser/lib/parser-feedback-simulator.js"],"sourcesContent":["'use strict';\n\nconst Tokenizer = require('parse5/lib/tokenizer');\nconst foreignContent = require('parse5/lib/common/foreign-content');\nconst unicode = require('parse5/lib/common/unicode');\nconst HTML = require('parse5/lib/common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\n\n//ParserFeedbackSimulator\n//Simulates adjustment of the Tokenizer which performed by standard parser during tree construction.\nclass ParserFeedbackSimulator {\n    constructor(tokenizer) {\n        this.tokenizer = tokenizer;\n\n        this.namespaceStack = [];\n        this.namespaceStackTop = -1;\n        this._enterNamespace(NS.HTML);\n    }\n\n    getNextToken() {\n        const token = this.tokenizer.getNextToken();\n\n        if (token.type === Tokenizer.START_TAG_TOKEN) {\n            this._handleStartTagToken(token);\n        } else if (token.type === Tokenizer.END_TAG_TOKEN) {\n            this._handleEndTagToken(token);\n        } else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN && this.inForeignContent) {\n            token.type = Tokenizer.CHARACTER_TOKEN;\n            token.chars = unicode.REPLACEMENT_CHARACTER;\n        } else if (this.skipNextNewLine) {\n            if (token.type !== Tokenizer.HIBERNATION_TOKEN) {\n                this.skipNextNewLine = false;\n            }\n\n            if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === '\\n') {\n                if (token.chars.length === 1) {\n                    return this.getNextToken();\n                }\n\n                token.chars = token.chars.substr(1);\n            }\n        }\n\n        return token;\n    }\n\n    //Namespace stack mutations\n    _enterNamespace(namespace) {\n        this.namespaceStackTop++;\n        this.namespaceStack.push(namespace);\n\n        this.inForeignContent = namespace !== NS.HTML;\n        this.currentNamespace = namespace;\n        this.tokenizer.allowCDATA = this.inForeignContent;\n    }\n\n    _leaveCurrentNamespace() {\n        this.namespaceStackTop--;\n        this.namespaceStack.pop();\n\n        this.currentNamespace = this.namespaceStack[this.namespaceStackTop];\n        this.inForeignContent = this.currentNamespace !== NS.HTML;\n        this.tokenizer.allowCDATA = this.inForeignContent;\n    }\n\n    //Token handlers\n    _ensureTokenizerMode(tn) {\n        if (tn === $.TEXTAREA || tn === $.TITLE) {\n            this.tokenizer.state = Tokenizer.MODE.RCDATA;\n        } else if (tn === $.PLAINTEXT) {\n            this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n        } else if (tn === $.SCRIPT) {\n            this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;\n        } else if (\n            tn === $.STYLE ||\n            tn === $.IFRAME ||\n            tn === $.XMP ||\n            tn === $.NOEMBED ||\n            tn === $.NOFRAMES ||\n            tn === $.NOSCRIPT\n        ) {\n            this.tokenizer.state = Tokenizer.MODE.RAWTEXT;\n        }\n    }\n\n    _handleStartTagToken(token) {\n        let tn = token.tagName;\n\n        if (tn === $.SVG) {\n            this._enterNamespace(NS.SVG);\n        } else if (tn === $.MATH) {\n            this._enterNamespace(NS.MATHML);\n        }\n\n        if (this.inForeignContent) {\n            if (foreignContent.causesExit(token)) {\n                this._leaveCurrentNamespace();\n                return;\n            }\n\n            const currentNs = this.currentNamespace;\n\n            if (currentNs === NS.MATHML) {\n                foreignContent.adjustTokenMathMLAttrs(token);\n            } else if (currentNs === NS.SVG) {\n                foreignContent.adjustTokenSVGTagName(token);\n                foreignContent.adjustTokenSVGAttrs(token);\n            }\n\n            foreignContent.adjustTokenXMLAttrs(token);\n\n            tn = token.tagName;\n\n            if (!token.selfClosing && foreignContent.isIntegrationPoint(tn, currentNs, token.attrs)) {\n                this._enterNamespace(NS.HTML);\n            }\n        } else {\n            if (tn === $.PRE || tn === $.TEXTAREA || tn === $.LISTING) {\n                this.skipNextNewLine = true;\n            } else if (tn === $.IMAGE) {\n                token.tagName = $.IMG;\n            }\n\n            this._ensureTokenizerMode(tn);\n        }\n    }\n\n    _handleEndTagToken(token) {\n        let tn = token.tagName;\n\n        if (!this.inForeignContent) {\n            const previousNs = this.namespaceStack[this.namespaceStackTop - 1];\n\n            if (previousNs === NS.SVG && foreignContent.SVG_TAG_NAMES_ADJUSTMENT_MAP[tn]) {\n                tn = foreignContent.SVG_TAG_NAMES_ADJUSTMENT_MAP[tn];\n            }\n\n            //NOTE: check for exit from integration point\n            if (foreignContent.isIntegrationPoint(tn, previousNs, token.attrs)) {\n                this._leaveCurrentNamespace();\n            }\n        } else if (\n            (tn === $.SVG && this.currentNamespace === NS.SVG) ||\n            (tn === $.MATH && this.currentNamespace === NS.MATHML)\n        ) {\n            this._leaveCurrentNamespace();\n        }\n\n        // NOTE: adjust end tag name as well for consistency\n        if (this.currentNamespace === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n        }\n    }\n}\n\nmodule.exports = ParserFeedbackSimulator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}