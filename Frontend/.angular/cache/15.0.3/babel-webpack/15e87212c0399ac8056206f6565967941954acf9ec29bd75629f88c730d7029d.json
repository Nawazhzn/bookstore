{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DnsTxt = void 0;\nclass DnsTxt {\n  constructor(opts = {}) {\n    this.binary = opts ? opts.binary : false;\n  }\n  encode(data = {}) {\n    return Object.entries(data).map(([key, value]) => {\n      let item = `${key}=${value}`;\n      return Buffer.from(item);\n    });\n  }\n  decode(buffer) {\n    var data = {};\n    try {\n      let format = buffer.toString();\n      let parts = format.split(/=(.+)/);\n      let key = parts[0];\n      let value = parts[1];\n      data[key] = value;\n    } catch (_) {}\n    return data;\n  }\n  decodeAll(buffer) {\n    return buffer.filter(i => i.length > 1).map(i => this.decode(i)).reduce((prev, curr) => {\n      var obj = prev;\n      let [key] = Object.keys(curr);\n      let [value] = Object.values(curr);\n      obj[key] = value;\n      return obj;\n    }, {});\n  }\n}\nexports.DnsTxt = DnsTxt;\nexports.default = DnsTxt;","map":{"version":3,"names":["Object","defineProperty","exports","value","DnsTxt","constructor","opts","binary","encode","data","entries","map","key","item","Buffer","from","decode","buffer","format","toString","parts","split","_","decodeAll","filter","i","length","reduce","prev","curr","obj","keys","values","default"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/bonjour-service/dist/lib/dns-txt.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DnsTxt = void 0;\nclass DnsTxt {\n    constructor(opts = {}) {\n        this.binary = opts ? opts.binary : false;\n    }\n    encode(data = {}) {\n        return Object.entries(data)\n            .map(([key, value]) => {\n            let item = `${key}=${value}`;\n            return Buffer.from(item);\n        });\n    }\n    decode(buffer) {\n        var data = {};\n        try {\n            let format = buffer.toString();\n            let parts = format.split(/=(.+)/);\n            let key = parts[0];\n            let value = parts[1];\n            data[key] = value;\n        }\n        catch (_) { }\n        return data;\n    }\n    decodeAll(buffer) {\n        return buffer\n            .filter(i => i.length > 1)\n            .map(i => this.decode(i))\n            .reduce((prev, curr) => {\n            var obj = prev;\n            let [key] = Object.keys(curr);\n            let [value] = Object.values(curr);\n            obj[key] = value;\n            return obj;\n        }, {});\n    }\n}\nexports.DnsTxt = DnsTxt;\nexports.default = DnsTxt;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,MAAM,GAAG,KAAK,CAAC;AACvB,MAAMA,MAAM,CAAC;EACTC,WAAW,CAACC,IAAI,GAAG,CAAC,CAAC,EAAE;IACnB,IAAI,CAACC,MAAM,GAAGD,IAAI,GAAGA,IAAI,CAACC,MAAM,GAAG,KAAK;EAC5C;EACAC,MAAM,CAACC,IAAI,GAAG,CAAC,CAAC,EAAE;IACd,OAAOT,MAAM,CAACU,OAAO,CAACD,IAAI,CAAC,CACtBE,GAAG,CAAC,CAAC,CAACC,GAAG,EAAET,KAAK,CAAC,KAAK;MACvB,IAAIU,IAAI,GAAI,GAAED,GAAI,IAAGT,KAAM,EAAC;MAC5B,OAAOW,MAAM,CAACC,IAAI,CAACF,IAAI,CAAC;IAC5B,CAAC,CAAC;EACN;EACAG,MAAM,CAACC,MAAM,EAAE;IACX,IAAIR,IAAI,GAAG,CAAC,CAAC;IACb,IAAI;MACA,IAAIS,MAAM,GAAGD,MAAM,CAACE,QAAQ,EAAE;MAC9B,IAAIC,KAAK,GAAGF,MAAM,CAACG,KAAK,CAAC,OAAO,CAAC;MACjC,IAAIT,GAAG,GAAGQ,KAAK,CAAC,CAAC,CAAC;MAClB,IAAIjB,KAAK,GAAGiB,KAAK,CAAC,CAAC,CAAC;MACpBX,IAAI,CAACG,GAAG,CAAC,GAAGT,KAAK;IACrB,CAAC,CACD,OAAOmB,CAAC,EAAE,CAAE;IACZ,OAAOb,IAAI;EACf;EACAc,SAAS,CAACN,MAAM,EAAE;IACd,OAAOA,MAAM,CACRO,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,GAAG,CAAC,CAAC,CACzBf,GAAG,CAACc,CAAC,IAAI,IAAI,CAACT,MAAM,CAACS,CAAC,CAAC,CAAC,CACxBE,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAK;MACxB,IAAIC,GAAG,GAAGF,IAAI;MACd,IAAI,CAAChB,GAAG,CAAC,GAAGZ,MAAM,CAAC+B,IAAI,CAACF,IAAI,CAAC;MAC7B,IAAI,CAAC1B,KAAK,CAAC,GAAGH,MAAM,CAACgC,MAAM,CAACH,IAAI,CAAC;MACjCC,GAAG,CAAClB,GAAG,CAAC,GAAGT,KAAK;MAChB,OAAO2B,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;EACV;AACJ;AACA5B,OAAO,CAACE,MAAM,GAAGA,MAAM;AACvBF,OAAO,CAAC+B,OAAO,GAAG7B,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}