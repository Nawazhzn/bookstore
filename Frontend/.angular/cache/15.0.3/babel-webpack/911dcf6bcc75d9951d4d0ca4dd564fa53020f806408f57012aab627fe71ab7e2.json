{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildServePath = exports.getDevServerConfig = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\nconst url_1 = require(\"url\");\nconst error_1 = require(\"../../utils/error\");\nconst load_esm_1 = require(\"../../utils/load-esm\");\nconst webpack_browser_config_1 = require(\"../../utils/webpack-browser-config\");\nconst hmr_loader_1 = require(\"../plugins/hmr/hmr-loader\");\nfunction getDevServerConfig(_x) {\n  return _getDevServerConfig.apply(this, arguments);\n}\nfunction _getDevServerConfig() {\n  _getDevServerConfig = _asyncToGenerator(function* (wco) {\n    const {\n      buildOptions: {\n        host,\n        port,\n        index,\n        headers,\n        watch,\n        hmr,\n        main,\n        liveReload,\n        proxyConfig\n      },\n      logger,\n      root\n    } = wco;\n    const servePath = buildServePath(wco.buildOptions, logger);\n    const extraRules = [];\n    if (hmr) {\n      extraRules.push({\n        loader: hmr_loader_1.HmrLoader,\n        include: [(0, path_1.resolve)(wco.root, main)]\n      });\n    }\n    const extraPlugins = [];\n    if (!watch) {\n      // There's no option to turn off file watching in webpack-dev-server, but\n      // we can override the file watcher instead.\n      extraPlugins.push({\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        apply: compiler => {\n          compiler.hooks.afterEnvironment.tap('angular-cli', () => {\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            compiler.watchFileSystem = {\n              watch: () => {}\n            };\n          });\n        }\n      });\n    }\n    return {\n      plugins: extraPlugins,\n      module: {\n        rules: extraRules\n      },\n      devServer: {\n        host,\n        port,\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          ...headers\n        },\n        historyApiFallback: !!index && {\n          index: path_1.posix.join(servePath, (0, webpack_browser_config_1.getIndexOutputFile)(index)),\n          disableDotRule: true,\n          htmlAcceptHeaders: ['text/html', 'application/xhtml+xml'],\n          rewrites: [{\n            from: new RegExp(`^(?!${servePath})/.*`),\n            to: context => context.parsedUrl.href\n          }]\n        },\n        // When setupExitSignals is enabled webpack-dev-server will shutdown gracefully which would\n        // require CTRL+C to be pressed multiple times to exit.\n        // See: https://github.com/webpack/webpack-dev-server/blob/c76b6d11a3821436c5e20207c8a38deb6ab7e33c/lib/Server.js#L1801-L1827\n        setupExitSignals: false,\n        compress: false,\n        static: false,\n        server: getServerConfig(root, wco.buildOptions),\n        allowedHosts: getAllowedHostsConfig(wco.buildOptions),\n        devMiddleware: {\n          publicPath: servePath,\n          stats: false\n        },\n        liveReload,\n        hot: hmr && !liveReload ? 'only' : hmr,\n        proxy: yield addProxyConfig(root, proxyConfig),\n        ...getWebSocketSettings(wco.buildOptions, servePath)\n      }\n    };\n  });\n  return _getDevServerConfig.apply(this, arguments);\n}\nexports.getDevServerConfig = getDevServerConfig;\n/**\n * Resolve and build a URL _path_ that will be the root of the server. This resolved base href and\n * deploy URL from the browser options and returns a path from the root.\n */\nfunction buildServePath(options, logger) {\n  let servePath = options.servePath;\n  if (servePath === undefined) {\n    const defaultPath = findDefaultServePath(options.baseHref, options.deployUrl);\n    if (defaultPath == null) {\n      logger.warn(core_1.tags.oneLine`\n        Warning: --deploy-url and/or --base-href contain unsupported values for ng serve. Default\n        serve path of '/' used. Use --serve-path to override.\n      `);\n    }\n    servePath = defaultPath || '';\n  }\n  if (servePath.endsWith('/')) {\n    servePath = servePath.slice(0, -1);\n  }\n  if (!servePath.startsWith('/')) {\n    servePath = `/${servePath}`;\n  }\n  return servePath;\n}\nexports.buildServePath = buildServePath;\n/**\n * Private method to enhance a webpack config with SSL configuration.\n * @private\n */\nfunction getServerConfig(root, options) {\n  const {\n    ssl,\n    sslCert,\n    sslKey\n  } = options;\n  if (!ssl) {\n    return 'http';\n  }\n  return {\n    type: 'https',\n    options: sslCert && sslKey ? {\n      key: (0, path_1.resolve)(root, sslKey),\n      cert: (0, path_1.resolve)(root, sslCert)\n    } : undefined\n  };\n}\n/**\n * Private method to enhance a webpack config with Proxy configuration.\n * @private\n */\nfunction addProxyConfig(_x2, _x3) {\n  return _addProxyConfig.apply(this, arguments);\n}\n/**\n * Calculates the line and column for an error offset in the content of a JSON file.\n * @param location The offset error location from the beginning of the content.\n * @param content The full content of the file containing the error.\n * @returns An object containing the line and column\n */\nfunction _addProxyConfig() {\n  _addProxyConfig = _asyncToGenerator(function* (root, proxyConfig) {\n    if (!proxyConfig) {\n      return undefined;\n    }\n    const proxyPath = (0, path_1.resolve)(root, proxyConfig);\n    if (!(0, fs_1.existsSync)(proxyPath)) {\n      throw new Error(`Proxy configuration file ${proxyPath} does not exist.`);\n    }\n    switch ((0, path_1.extname)(proxyPath)) {\n      case '.json':\n        {\n          const content = yield fs_1.promises.readFile(proxyPath, 'utf-8');\n          const {\n            parse,\n            printParseErrorCode\n          } = yield Promise.resolve().then(() => __importStar(require('jsonc-parser')));\n          const parseErrors = [];\n          const proxyConfiguration = parse(content, parseErrors, {\n            allowTrailingComma: true\n          });\n          if (parseErrors.length > 0) {\n            let errorMessage = `Proxy configuration file ${proxyPath} contains parse errors:`;\n            for (const parseError of parseErrors) {\n              const {\n                line,\n                column\n              } = getJsonErrorLineColumn(parseError.offset, content);\n              errorMessage += `\\n[${line}, ${column}] ${printParseErrorCode(parseError.error)}`;\n            }\n            throw new Error(errorMessage);\n          }\n          return proxyConfiguration;\n        }\n      case '.mjs':\n        // Load the ESM configuration file using the TypeScript dynamic import workaround.\n        // Once TypeScript provides support for keeping the dynamic import this workaround can be\n        // changed to a direct dynamic import.\n        return (yield (0, load_esm_1.loadEsmModule)((0, url_1.pathToFileURL)(proxyPath))).default;\n      case '.cjs':\n        return require(proxyPath);\n      default:\n        // The file could be either CommonJS or ESM.\n        // CommonJS is tried first then ESM if loading fails.\n        try {\n          return require(proxyPath);\n        } catch (e) {\n          (0, error_1.assertIsError)(e);\n          if (e.code === 'ERR_REQUIRE_ESM') {\n            // Load the ESM configuration file using the TypeScript dynamic import workaround.\n            // Once TypeScript provides support for keeping the dynamic import this workaround can be\n            // changed to a direct dynamic import.\n            return (yield (0, load_esm_1.loadEsmModule)((0, url_1.pathToFileURL)(proxyPath))).default;\n          }\n          throw e;\n        }\n    }\n  });\n  return _addProxyConfig.apply(this, arguments);\n}\nfunction getJsonErrorLineColumn(offset, content) {\n  if (offset === 0) {\n    return {\n      line: 1,\n      column: 1\n    };\n  }\n  let line = 0;\n  let position = 0;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    ++line;\n    const nextNewline = content.indexOf('\\n', position);\n    if (nextNewline === -1 || nextNewline > offset) {\n      break;\n    }\n    position = nextNewline + 1;\n  }\n  return {\n    line,\n    column: offset - position + 1\n  };\n}\n/**\n * Find the default server path. We don't want to expose baseHref and deployUrl as arguments, only\n * the browser options where needed. This method should stay private (people who want to resolve\n * baseHref and deployUrl should use the buildServePath exported function.\n * @private\n */\nfunction findDefaultServePath(baseHref, deployUrl) {\n  if (!baseHref && !deployUrl) {\n    return '';\n  }\n  if (/^(\\w+:)?\\/\\//.test(baseHref || '') || /^(\\w+:)?\\/\\//.test(deployUrl || '')) {\n    // If baseHref or deployUrl is absolute, unsupported by ng serve\n    return null;\n  }\n  // normalize baseHref\n  // for ng serve the starting base is always `/` so a relative\n  // and root relative value are identical\n  const baseHrefParts = (baseHref || '').split('/').filter(part => part !== '');\n  if (baseHref && !baseHref.endsWith('/')) {\n    baseHrefParts.pop();\n  }\n  const normalizedBaseHref = baseHrefParts.length === 0 ? '/' : `/${baseHrefParts.join('/')}/`;\n  if (deployUrl && deployUrl[0] === '/') {\n    if (baseHref && baseHref[0] === '/' && normalizedBaseHref !== deployUrl) {\n      // If baseHref and deployUrl are root relative and not equivalent, unsupported by ng serve\n      return null;\n    }\n    return deployUrl;\n  }\n  // Join together baseHref and deployUrl\n  return `${normalizedBaseHref}${deployUrl || ''}`;\n}\nfunction getAllowedHostsConfig(options) {\n  var _a;\n  if (options.disableHostCheck) {\n    return 'all';\n  } else if ((_a = options.allowedHosts) === null || _a === void 0 ? void 0 : _a.length) {\n    return options.allowedHosts;\n  }\n  return undefined;\n}\nfunction getWebSocketSettings(options, servePath) {\n  const {\n    hmr,\n    liveReload\n  } = options;\n  if (!hmr && !liveReload) {\n    return {\n      webSocketServer: false,\n      client: undefined\n    };\n  }\n  const webSocketPath = path_1.posix.join(servePath, 'ng-cli-ws');\n  return {\n    webSocketServer: {\n      options: {\n        path: webSocketPath\n      }\n    },\n    client: {\n      logging: 'info',\n      webSocketURL: getPublicHostOptions(options, webSocketPath),\n      overlay: {\n        errors: true,\n        warnings: false\n      }\n    }\n  };\n}\nfunction getPublicHostOptions(options, webSocketPath) {\n  let publicHost = options.publicHost;\n  if (publicHost) {\n    const hostWithProtocol = !/^\\w+:\\/\\//.test(publicHost) ? `https://${publicHost}` : publicHost;\n    publicHost = new url_1.URL(hostWithProtocol).host;\n  }\n  return `auto://${publicHost || '0.0.0.0:0'}${webSocketPath}`;\n}","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","buildServePath","getDevServerConfig","core_1","require","fs_1","path_1","url_1","error_1","load_esm_1","webpack_browser_config_1","hmr_loader_1","wco","buildOptions","host","port","index","headers","watch","hmr","main","liveReload","proxyConfig","logger","root","servePath","extraRules","push","loader","HmrLoader","include","resolve","extraPlugins","apply","compiler","hooks","afterEnvironment","tap","watchFileSystem","plugins","module","rules","devServer","historyApiFallback","posix","join","getIndexOutputFile","disableDotRule","htmlAcceptHeaders","rewrites","from","RegExp","to","context","parsedUrl","href","setupExitSignals","compress","static","server","getServerConfig","allowedHosts","getAllowedHostsConfig","devMiddleware","publicPath","stats","hot","proxy","addProxyConfig","getWebSocketSettings","options","defaultPath","findDefaultServePath","baseHref","deployUrl","warn","tags","oneLine","endsWith","slice","startsWith","ssl","sslCert","sslKey","type","key","cert","proxyPath","existsSync","Error","extname","content","promises","readFile","parse","printParseErrorCode","Promise","then","parseErrors","proxyConfiguration","allowTrailingComma","length","errorMessage","parseError","line","column","getJsonErrorLineColumn","offset","error","loadEsmModule","pathToFileURL","default","e","assertIsError","code","position","nextNewline","indexOf","test","baseHrefParts","split","filter","part","pop","normalizedBaseHref","_a","disableHostCheck","webSocketServer","client","webSocketPath","path","logging","webSocketURL","getPublicHostOptions","overlay","errors","warnings","publicHost","hostWithProtocol","URL"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/webpack/configs/dev-server.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildServePath = exports.getDevServerConfig = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\nconst url_1 = require(\"url\");\nconst error_1 = require(\"../../utils/error\");\nconst load_esm_1 = require(\"../../utils/load-esm\");\nconst webpack_browser_config_1 = require(\"../../utils/webpack-browser-config\");\nconst hmr_loader_1 = require(\"../plugins/hmr/hmr-loader\");\nasync function getDevServerConfig(wco) {\n    const { buildOptions: { host, port, index, headers, watch, hmr, main, liveReload, proxyConfig }, logger, root, } = wco;\n    const servePath = buildServePath(wco.buildOptions, logger);\n    const extraRules = [];\n    if (hmr) {\n        extraRules.push({\n            loader: hmr_loader_1.HmrLoader,\n            include: [(0, path_1.resolve)(wco.root, main)],\n        });\n    }\n    const extraPlugins = [];\n    if (!watch) {\n        // There's no option to turn off file watching in webpack-dev-server, but\n        // we can override the file watcher instead.\n        extraPlugins.push({\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            apply: (compiler) => {\n                compiler.hooks.afterEnvironment.tap('angular-cli', () => {\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                    compiler.watchFileSystem = { watch: () => { } };\n                });\n            },\n        });\n    }\n    return {\n        plugins: extraPlugins,\n        module: {\n            rules: extraRules,\n        },\n        devServer: {\n            host,\n            port,\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n                ...headers,\n            },\n            historyApiFallback: !!index && {\n                index: path_1.posix.join(servePath, (0, webpack_browser_config_1.getIndexOutputFile)(index)),\n                disableDotRule: true,\n                htmlAcceptHeaders: ['text/html', 'application/xhtml+xml'],\n                rewrites: [\n                    {\n                        from: new RegExp(`^(?!${servePath})/.*`),\n                        to: (context) => context.parsedUrl.href,\n                    },\n                ],\n            },\n            // When setupExitSignals is enabled webpack-dev-server will shutdown gracefully which would\n            // require CTRL+C to be pressed multiple times to exit.\n            // See: https://github.com/webpack/webpack-dev-server/blob/c76b6d11a3821436c5e20207c8a38deb6ab7e33c/lib/Server.js#L1801-L1827\n            setupExitSignals: false,\n            compress: false,\n            static: false,\n            server: getServerConfig(root, wco.buildOptions),\n            allowedHosts: getAllowedHostsConfig(wco.buildOptions),\n            devMiddleware: {\n                publicPath: servePath,\n                stats: false,\n            },\n            liveReload,\n            hot: hmr && !liveReload ? 'only' : hmr,\n            proxy: await addProxyConfig(root, proxyConfig),\n            ...getWebSocketSettings(wco.buildOptions, servePath),\n        },\n    };\n}\nexports.getDevServerConfig = getDevServerConfig;\n/**\n * Resolve and build a URL _path_ that will be the root of the server. This resolved base href and\n * deploy URL from the browser options and returns a path from the root.\n */\nfunction buildServePath(options, logger) {\n    let servePath = options.servePath;\n    if (servePath === undefined) {\n        const defaultPath = findDefaultServePath(options.baseHref, options.deployUrl);\n        if (defaultPath == null) {\n            logger.warn(core_1.tags.oneLine `\n        Warning: --deploy-url and/or --base-href contain unsupported values for ng serve. Default\n        serve path of '/' used. Use --serve-path to override.\n      `);\n        }\n        servePath = defaultPath || '';\n    }\n    if (servePath.endsWith('/')) {\n        servePath = servePath.slice(0, -1);\n    }\n    if (!servePath.startsWith('/')) {\n        servePath = `/${servePath}`;\n    }\n    return servePath;\n}\nexports.buildServePath = buildServePath;\n/**\n * Private method to enhance a webpack config with SSL configuration.\n * @private\n */\nfunction getServerConfig(root, options) {\n    const { ssl, sslCert, sslKey } = options;\n    if (!ssl) {\n        return 'http';\n    }\n    return {\n        type: 'https',\n        options: sslCert && sslKey\n            ? {\n                key: (0, path_1.resolve)(root, sslKey),\n                cert: (0, path_1.resolve)(root, sslCert),\n            }\n            : undefined,\n    };\n}\n/**\n * Private method to enhance a webpack config with Proxy configuration.\n * @private\n */\nasync function addProxyConfig(root, proxyConfig) {\n    if (!proxyConfig) {\n        return undefined;\n    }\n    const proxyPath = (0, path_1.resolve)(root, proxyConfig);\n    if (!(0, fs_1.existsSync)(proxyPath)) {\n        throw new Error(`Proxy configuration file ${proxyPath} does not exist.`);\n    }\n    switch ((0, path_1.extname)(proxyPath)) {\n        case '.json': {\n            const content = await fs_1.promises.readFile(proxyPath, 'utf-8');\n            const { parse, printParseErrorCode } = await Promise.resolve().then(() => __importStar(require('jsonc-parser')));\n            const parseErrors = [];\n            const proxyConfiguration = parse(content, parseErrors, { allowTrailingComma: true });\n            if (parseErrors.length > 0) {\n                let errorMessage = `Proxy configuration file ${proxyPath} contains parse errors:`;\n                for (const parseError of parseErrors) {\n                    const { line, column } = getJsonErrorLineColumn(parseError.offset, content);\n                    errorMessage += `\\n[${line}, ${column}] ${printParseErrorCode(parseError.error)}`;\n                }\n                throw new Error(errorMessage);\n            }\n            return proxyConfiguration;\n        }\n        case '.mjs':\n            // Load the ESM configuration file using the TypeScript dynamic import workaround.\n            // Once TypeScript provides support for keeping the dynamic import this workaround can be\n            // changed to a direct dynamic import.\n            return (await (0, load_esm_1.loadEsmModule)((0, url_1.pathToFileURL)(proxyPath))).default;\n        case '.cjs':\n            return require(proxyPath);\n        default:\n            // The file could be either CommonJS or ESM.\n            // CommonJS is tried first then ESM if loading fails.\n            try {\n                return require(proxyPath);\n            }\n            catch (e) {\n                (0, error_1.assertIsError)(e);\n                if (e.code === 'ERR_REQUIRE_ESM') {\n                    // Load the ESM configuration file using the TypeScript dynamic import workaround.\n                    // Once TypeScript provides support for keeping the dynamic import this workaround can be\n                    // changed to a direct dynamic import.\n                    return (await (0, load_esm_1.loadEsmModule)((0, url_1.pathToFileURL)(proxyPath))).default;\n                }\n                throw e;\n            }\n    }\n}\n/**\n * Calculates the line and column for an error offset in the content of a JSON file.\n * @param location The offset error location from the beginning of the content.\n * @param content The full content of the file containing the error.\n * @returns An object containing the line and column\n */\nfunction getJsonErrorLineColumn(offset, content) {\n    if (offset === 0) {\n        return { line: 1, column: 1 };\n    }\n    let line = 0;\n    let position = 0;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        ++line;\n        const nextNewline = content.indexOf('\\n', position);\n        if (nextNewline === -1 || nextNewline > offset) {\n            break;\n        }\n        position = nextNewline + 1;\n    }\n    return { line, column: offset - position + 1 };\n}\n/**\n * Find the default server path. We don't want to expose baseHref and deployUrl as arguments, only\n * the browser options where needed. This method should stay private (people who want to resolve\n * baseHref and deployUrl should use the buildServePath exported function.\n * @private\n */\nfunction findDefaultServePath(baseHref, deployUrl) {\n    if (!baseHref && !deployUrl) {\n        return '';\n    }\n    if (/^(\\w+:)?\\/\\//.test(baseHref || '') || /^(\\w+:)?\\/\\//.test(deployUrl || '')) {\n        // If baseHref or deployUrl is absolute, unsupported by ng serve\n        return null;\n    }\n    // normalize baseHref\n    // for ng serve the starting base is always `/` so a relative\n    // and root relative value are identical\n    const baseHrefParts = (baseHref || '').split('/').filter((part) => part !== '');\n    if (baseHref && !baseHref.endsWith('/')) {\n        baseHrefParts.pop();\n    }\n    const normalizedBaseHref = baseHrefParts.length === 0 ? '/' : `/${baseHrefParts.join('/')}/`;\n    if (deployUrl && deployUrl[0] === '/') {\n        if (baseHref && baseHref[0] === '/' && normalizedBaseHref !== deployUrl) {\n            // If baseHref and deployUrl are root relative and not equivalent, unsupported by ng serve\n            return null;\n        }\n        return deployUrl;\n    }\n    // Join together baseHref and deployUrl\n    return `${normalizedBaseHref}${deployUrl || ''}`;\n}\nfunction getAllowedHostsConfig(options) {\n    var _a;\n    if (options.disableHostCheck) {\n        return 'all';\n    }\n    else if ((_a = options.allowedHosts) === null || _a === void 0 ? void 0 : _a.length) {\n        return options.allowedHosts;\n    }\n    return undefined;\n}\nfunction getWebSocketSettings(options, servePath) {\n    const { hmr, liveReload } = options;\n    if (!hmr && !liveReload) {\n        return {\n            webSocketServer: false,\n            client: undefined,\n        };\n    }\n    const webSocketPath = path_1.posix.join(servePath, 'ng-cli-ws');\n    return {\n        webSocketServer: {\n            options: {\n                path: webSocketPath,\n            },\n        },\n        client: {\n            logging: 'info',\n            webSocketURL: getPublicHostOptions(options, webSocketPath),\n            overlay: {\n                errors: true,\n                warnings: false,\n            },\n        },\n    };\n}\nfunction getPublicHostOptions(options, webSocketPath) {\n    let publicHost = options.publicHost;\n    if (publicHost) {\n        const hostWithProtocol = !/^\\w+:\\/\\//.test(publicHost) ? `https://${publicHost}` : publicHost;\n        publicHost = new url_1.URL(hostWithProtocol).host;\n    }\n    return `auto://${publicHost || '0.0.0.0:0'}${webSocketPath}`;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}