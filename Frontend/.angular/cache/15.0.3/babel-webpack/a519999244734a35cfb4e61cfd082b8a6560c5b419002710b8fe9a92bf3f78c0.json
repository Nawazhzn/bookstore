{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst nodePath = __importStar(require(\"path\"));\nconst load_esm_1 = require(\"../../utils/load-esm\");\nfunction localizeExtractLoader(content, map) {\n  // This loader is not cacheable due to how message extraction works.\n  // Extracted messages are not part of webpack pipeline and hence they cannot be retrieved from cache.\n  // TODO: We should investigate in the future on making this deterministic and more cacheable.\n  this.cacheable(false);\n  const options = this.getOptions();\n  const callback = this.async();\n  extract(this, content, map, options).then(() => {\n    // Pass through the original content now that messages have been extracted\n    callback(undefined, content, map);\n  }, error => {\n    callback(error);\n  });\n}\nexports.default = localizeExtractLoader;\nfunction extract(_x, _x2, _x3, _x4) {\n  return _extract.apply(this, arguments);\n}\nfunction _extract() {\n  _extract = _asyncToGenerator(function* (loaderContext, content, map, options) {\n    // Try to load the `@angular/localize` message extractor.\n    // All the localize usages are setup to first try the ESM entry point then fallback to the deep imports.\n    // This provides interim compatibility while the framework is transitioned to bundled ESM packages.\n    let MessageExtractor;\n    try {\n      // Load ESM `@angular/localize/tools` using the TypeScript dynamic import workaround.\n      // Once TypeScript provides support for keeping the dynamic import this workaround can be\n      // changed to a direct dynamic import.\n      const localizeToolsModule = yield (0, load_esm_1.loadEsmModule)('@angular/localize/tools');\n      MessageExtractor = localizeToolsModule.MessageExtractor;\n    } catch {\n      throw new Error(`Unable to load message extractor. Please ensure '@angular/localize' is installed.`);\n    }\n    // Setup a Webpack-based logger instance\n    const logger = {\n      // level 2 is warnings\n      level: 2,\n      debug(...args) {\n        // eslint-disable-next-line no-console\n        console.debug(...args);\n      },\n      info(...args) {\n        loaderContext.emitWarning(new Error(args.join('')));\n      },\n      warn(...args) {\n        loaderContext.emitWarning(new Error(args.join('')));\n      },\n      error(...args) {\n        loaderContext.emitError(new Error(args.join('')));\n      }\n    };\n    let filename = loaderContext.resourcePath;\n    const mapObject = typeof map === 'string' ? JSON.parse(map) : map;\n    if (mapObject === null || mapObject === void 0 ? void 0 : mapObject.file) {\n      // The extractor's internal sourcemap handling expects the filenames to match\n      filename = nodePath.join(loaderContext.context, mapObject.file);\n    }\n    // Setup a virtual file system instance for the extractor\n    // * MessageExtractor itself uses readFile, relative and resolve\n    // * Internal SourceFileLoader (sourcemap support) uses dirname, exists, readFile, and resolve\n    const filesystem = {\n      readFile(path) {\n        if (path === filename) {\n          return content;\n        } else if (path === filename + '.map') {\n          return typeof map === 'string' ? map : JSON.stringify(map);\n        } else {\n          throw new Error('Unknown file requested: ' + path);\n        }\n      },\n      relative(from, to) {\n        return nodePath.relative(from, to);\n      },\n      resolve(...paths) {\n        return nodePath.resolve(...paths);\n      },\n      exists(path) {\n        return path === filename || path === filename + '.map';\n      },\n      dirname(path) {\n        return nodePath.dirname(path);\n      }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const extractor = new MessageExtractor(filesystem, logger, {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      basePath: loaderContext.rootContext,\n      useSourceMaps: !!map\n    });\n    const messages = extractor.extractMessages(filename);\n    if (messages.length > 0) {\n      options === null || options === void 0 ? void 0 : options.messageHandler(messages);\n    }\n  });\n  return _extract.apply(this, arguments);\n}","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","nodePath","require","load_esm_1","localizeExtractLoader","content","map","cacheable","options","getOptions","callback","async","extract","then","error","default","loaderContext","MessageExtractor","localizeToolsModule","loadEsmModule","Error","logger","level","debug","args","console","info","emitWarning","join","warn","emitError","filename","resourcePath","mapObject","JSON","parse","file","context","filesystem","readFile","path","stringify","relative","from","to","resolve","paths","exists","dirname","extractor","basePath","rootContext","useSourceMaps","messages","extractMessages","length","messageHandler"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/builders/extract-i18n/ivy-extract-loader.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst nodePath = __importStar(require(\"path\"));\nconst load_esm_1 = require(\"../../utils/load-esm\");\nfunction localizeExtractLoader(content, map) {\n    // This loader is not cacheable due to how message extraction works.\n    // Extracted messages are not part of webpack pipeline and hence they cannot be retrieved from cache.\n    // TODO: We should investigate in the future on making this deterministic and more cacheable.\n    this.cacheable(false);\n    const options = this.getOptions();\n    const callback = this.async();\n    extract(this, content, map, options).then(() => {\n        // Pass through the original content now that messages have been extracted\n        callback(undefined, content, map);\n    }, (error) => {\n        callback(error);\n    });\n}\nexports.default = localizeExtractLoader;\nasync function extract(loaderContext, content, map, options) {\n    // Try to load the `@angular/localize` message extractor.\n    // All the localize usages are setup to first try the ESM entry point then fallback to the deep imports.\n    // This provides interim compatibility while the framework is transitioned to bundled ESM packages.\n    let MessageExtractor;\n    try {\n        // Load ESM `@angular/localize/tools` using the TypeScript dynamic import workaround.\n        // Once TypeScript provides support for keeping the dynamic import this workaround can be\n        // changed to a direct dynamic import.\n        const localizeToolsModule = await (0, load_esm_1.loadEsmModule)('@angular/localize/tools');\n        MessageExtractor = localizeToolsModule.MessageExtractor;\n    }\n    catch {\n        throw new Error(`Unable to load message extractor. Please ensure '@angular/localize' is installed.`);\n    }\n    // Setup a Webpack-based logger instance\n    const logger = {\n        // level 2 is warnings\n        level: 2,\n        debug(...args) {\n            // eslint-disable-next-line no-console\n            console.debug(...args);\n        },\n        info(...args) {\n            loaderContext.emitWarning(new Error(args.join('')));\n        },\n        warn(...args) {\n            loaderContext.emitWarning(new Error(args.join('')));\n        },\n        error(...args) {\n            loaderContext.emitError(new Error(args.join('')));\n        },\n    };\n    let filename = loaderContext.resourcePath;\n    const mapObject = typeof map === 'string' ? JSON.parse(map) : map;\n    if (mapObject === null || mapObject === void 0 ? void 0 : mapObject.file) {\n        // The extractor's internal sourcemap handling expects the filenames to match\n        filename = nodePath.join(loaderContext.context, mapObject.file);\n    }\n    // Setup a virtual file system instance for the extractor\n    // * MessageExtractor itself uses readFile, relative and resolve\n    // * Internal SourceFileLoader (sourcemap support) uses dirname, exists, readFile, and resolve\n    const filesystem = {\n        readFile(path) {\n            if (path === filename) {\n                return content;\n            }\n            else if (path === filename + '.map') {\n                return typeof map === 'string' ? map : JSON.stringify(map);\n            }\n            else {\n                throw new Error('Unknown file requested: ' + path);\n            }\n        },\n        relative(from, to) {\n            return nodePath.relative(from, to);\n        },\n        resolve(...paths) {\n            return nodePath.resolve(...paths);\n        },\n        exists(path) {\n            return path === filename || path === filename + '.map';\n        },\n        dirname(path) {\n            return nodePath.dirname(path);\n        },\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const extractor = new MessageExtractor(filesystem, logger, {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        basePath: loaderContext.rootContext,\n        useSourceMaps: !!map,\n    });\n    const messages = extractor.extractMessages(filename);\n    if (messages.length > 0) {\n        options === null || options === void 0 ? void 0 : options.messageHandler(messages);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}