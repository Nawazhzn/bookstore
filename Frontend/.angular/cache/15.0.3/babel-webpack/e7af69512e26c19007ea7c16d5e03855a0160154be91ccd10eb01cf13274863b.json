{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertCompatibleAngularVersion = void 0;\n/* eslint-disable no-console */\nconst core_1 = require(\"@angular-devkit/core\");\nconst semver_1 = require(\"semver\");\nfunction assertCompatibleAngularVersion(projectRoot) {\n  let angularCliPkgJson;\n  let angularPkgJson;\n  const resolveOptions = {\n    paths: [projectRoot]\n  };\n  try {\n    const angularPackagePath = require.resolve('@angular/core/package.json', resolveOptions);\n    angularPkgJson = require(angularPackagePath);\n  } catch {\n    console.error(core_1.tags.stripIndents`\n      You seem to not be depending on \"@angular/core\". This is an error.\n    `);\n    process.exit(2);\n  }\n  if (!(angularPkgJson && angularPkgJson['version'])) {\n    console.error(core_1.tags.stripIndents`\n      Cannot determine versions of \"@angular/core\".\n      This likely means your local installation is broken. Please reinstall your packages.\n    `);\n    process.exit(2);\n  }\n  try {\n    const angularCliPkgPath = require.resolve('@angular/cli/package.json', resolveOptions);\n    angularCliPkgJson = require(angularCliPkgPath);\n    if (!(angularCliPkgJson && angularCliPkgJson['version'])) {\n      return;\n    }\n  } catch {\n    // Not using @angular-devkit/build-angular with @angular/cli is ok too.\n    // In this case we don't provide as many version checks.\n    return;\n  }\n  if (angularCliPkgJson['version'] === '0.0.0' || angularPkgJson['version'] === '0.0.0') {\n    // Internal CLI testing version or integration testing in the angular/angular\n    // repository with the generated development @angular/core npm package which is versioned \"0.0.0\".\n    return;\n  }\n  const supportedAngularSemver = require('../../package.json')['peerDependencies']['@angular/compiler-cli'];\n  const angularVersion = new semver_1.SemVer(angularPkgJson['version']);\n  if (!(0, semver_1.satisfies)(angularVersion, supportedAngularSemver, {\n    includePrerelease: true\n  })) {\n    console.error(core_1.tags.stripIndents`\n        This version of CLI is only compatible with Angular versions ${supportedAngularSemver},\n        but Angular version ${angularVersion} was found instead.\n\n        Please visit the link below to find instructions on how to update Angular.\n        https://update.angular.io/\n      ` + '\\n');\n    process.exit(3);\n  }\n}\nexports.assertCompatibleAngularVersion = assertCompatibleAngularVersion;","map":{"version":3,"names":["Object","defineProperty","exports","value","assertCompatibleAngularVersion","core_1","require","semver_1","projectRoot","angularCliPkgJson","angularPkgJson","resolveOptions","paths","angularPackagePath","resolve","console","error","tags","stripIndents","process","exit","angularCliPkgPath","supportedAngularSemver","angularVersion","SemVer","satisfies","includePrerelease"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/utils/version.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertCompatibleAngularVersion = void 0;\n/* eslint-disable no-console */\nconst core_1 = require(\"@angular-devkit/core\");\nconst semver_1 = require(\"semver\");\nfunction assertCompatibleAngularVersion(projectRoot) {\n    let angularCliPkgJson;\n    let angularPkgJson;\n    const resolveOptions = { paths: [projectRoot] };\n    try {\n        const angularPackagePath = require.resolve('@angular/core/package.json', resolveOptions);\n        angularPkgJson = require(angularPackagePath);\n    }\n    catch {\n        console.error(core_1.tags.stripIndents `\n      You seem to not be depending on \"@angular/core\". This is an error.\n    `);\n        process.exit(2);\n    }\n    if (!(angularPkgJson && angularPkgJson['version'])) {\n        console.error(core_1.tags.stripIndents `\n      Cannot determine versions of \"@angular/core\".\n      This likely means your local installation is broken. Please reinstall your packages.\n    `);\n        process.exit(2);\n    }\n    try {\n        const angularCliPkgPath = require.resolve('@angular/cli/package.json', resolveOptions);\n        angularCliPkgJson = require(angularCliPkgPath);\n        if (!(angularCliPkgJson && angularCliPkgJson['version'])) {\n            return;\n        }\n    }\n    catch {\n        // Not using @angular-devkit/build-angular with @angular/cli is ok too.\n        // In this case we don't provide as many version checks.\n        return;\n    }\n    if (angularCliPkgJson['version'] === '0.0.0' || angularPkgJson['version'] === '0.0.0') {\n        // Internal CLI testing version or integration testing in the angular/angular\n        // repository with the generated development @angular/core npm package which is versioned \"0.0.0\".\n        return;\n    }\n    const supportedAngularSemver = require('../../package.json')['peerDependencies']['@angular/compiler-cli'];\n    const angularVersion = new semver_1.SemVer(angularPkgJson['version']);\n    if (!(0, semver_1.satisfies)(angularVersion, supportedAngularSemver, { includePrerelease: true })) {\n        console.error(core_1.tags.stripIndents `\n        This version of CLI is only compatible with Angular versions ${supportedAngularSemver},\n        but Angular version ${angularVersion} was found instead.\n\n        Please visit the link below to find instructions on how to update Angular.\n        https://update.angular.io/\n      ` + '\\n');\n        process.exit(3);\n    }\n}\nexports.assertCompatibleAngularVersion = assertCompatibleAngularVersion;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,8BAA8B,GAAG,KAAK,CAAC;AAC/C;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC9C,MAAMC,QAAQ,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAClC,SAASF,8BAA8B,CAACI,WAAW,EAAE;EACjD,IAAIC,iBAAiB;EACrB,IAAIC,cAAc;EAClB,MAAMC,cAAc,GAAG;IAAEC,KAAK,EAAE,CAACJ,WAAW;EAAE,CAAC;EAC/C,IAAI;IACA,MAAMK,kBAAkB,GAAGP,OAAO,CAACQ,OAAO,CAAC,4BAA4B,EAAEH,cAAc,CAAC;IACxFD,cAAc,GAAGJ,OAAO,CAACO,kBAAkB,CAAC;EAChD,CAAC,CACD,MAAM;IACFE,OAAO,CAACC,KAAK,CAACX,MAAM,CAACY,IAAI,CAACC,YAAc;AAChD;AACA,KAAK,CAAC;IACEC,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;EACnB;EACA,IAAI,EAAEV,cAAc,IAAIA,cAAc,CAAC,SAAS,CAAC,CAAC,EAAE;IAChDK,OAAO,CAACC,KAAK,CAACX,MAAM,CAACY,IAAI,CAACC,YAAc;AAChD;AACA;AACA,KAAK,CAAC;IACEC,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;EACnB;EACA,IAAI;IACA,MAAMC,iBAAiB,GAAGf,OAAO,CAACQ,OAAO,CAAC,2BAA2B,EAAEH,cAAc,CAAC;IACtFF,iBAAiB,GAAGH,OAAO,CAACe,iBAAiB,CAAC;IAC9C,IAAI,EAAEZ,iBAAiB,IAAIA,iBAAiB,CAAC,SAAS,CAAC,CAAC,EAAE;MACtD;IACJ;EACJ,CAAC,CACD,MAAM;IACF;IACA;IACA;EACJ;EACA,IAAIA,iBAAiB,CAAC,SAAS,CAAC,KAAK,OAAO,IAAIC,cAAc,CAAC,SAAS,CAAC,KAAK,OAAO,EAAE;IACnF;IACA;IACA;EACJ;EACA,MAAMY,sBAAsB,GAAGhB,OAAO,CAAC,oBAAoB,CAAC,CAAC,kBAAkB,CAAC,CAAC,uBAAuB,CAAC;EACzG,MAAMiB,cAAc,GAAG,IAAIhB,QAAQ,CAACiB,MAAM,CAACd,cAAc,CAAC,SAAS,CAAC,CAAC;EACrE,IAAI,CAAC,CAAC,CAAC,EAAEH,QAAQ,CAACkB,SAAS,EAAEF,cAAc,EAAED,sBAAsB,EAAE;IAAEI,iBAAiB,EAAE;EAAK,CAAC,CAAC,EAAE;IAC/FX,OAAO,CAACC,KAAK,CAACX,MAAM,CAACY,IAAI,CAACC,YAAc;AAChD,uEAAuEI,sBAAuB;AAC9F,8BAA8BC,cAAe;AAC7C;AACA;AACA;AACA,OAAO,GAAG,IAAI,CAAC;IACPJ,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;EACnB;AACJ;AACAlB,OAAO,CAACE,8BAA8B,GAAGA,8BAA8B"},"metadata":{},"sourceType":"script","externalDependencies":[]}