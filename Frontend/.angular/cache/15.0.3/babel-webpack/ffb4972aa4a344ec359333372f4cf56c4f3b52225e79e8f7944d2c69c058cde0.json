{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PluginLicenseTypeIdentifier = void 0;\nvar PluginLicenseTypeIdentifier = /** @class */function () {\n  function PluginLicenseTypeIdentifier(logger, licenseTypeOverrides, preferredLicenseTypes, handleLicenseAmbiguity, handleMissingLicenseType) {\n    this.logger = logger;\n    this.licenseTypeOverrides = licenseTypeOverrides;\n    this.preferredLicenseTypes = preferredLicenseTypes;\n    this.handleLicenseAmbiguity = handleLicenseAmbiguity;\n    this.handleMissingLicenseType = handleMissingLicenseType;\n  }\n  PluginLicenseTypeIdentifier.prototype.findLicenseIdentifier = function (compilation, packageName, packageJson) {\n    if (this.licenseTypeOverrides && this.licenseTypeOverrides[packageName]) {\n      return this.licenseTypeOverrides[packageName];\n    }\n    var licensePropValue = packageJson.license;\n    if (licensePropValue) {\n      return typeof licensePropValue === 'string' ? licensePropValue : licensePropValue.type;\n    }\n    // handle deprecated \"licenses\" field in package.json\n    if (Array.isArray(packageJson.licenses) && packageJson.licenses.length > 0) {\n      if (packageJson.licenses.length === 1) {\n        return packageJson.licenses[0].type;\n      }\n      // handle multiple licenses when we have a preferred license type\n      var licenseTypes = packageJson.licenses.map(function (x) {\n        return x.type;\n      });\n      var licenseType = this.findPreferredLicense(licenseTypes, this.preferredLicenseTypes);\n      if (licenseType !== null) {\n        // found preferred license\n        return licenseType;\n      }\n      var resolvedLicenseType = this.handleLicenseAmbiguity(packageName, packageJson.licenses);\n      this.logger.warn(compilation, packageName + \" specifies multiple licenses: \" + licenseTypes + \". Automatically selected \" + resolvedLicenseType + \". Use the preferredLicenseTypes or the licenseTypeOverrides option to resolve this warning.\");\n      return resolvedLicenseType;\n    }\n    this.logger.warn(compilation, \"could not find any license type for \" + packageName + \" in its package.json\");\n    return this.handleMissingLicenseType(packageName);\n  };\n  PluginLicenseTypeIdentifier.prototype.findPreferredLicense = function (licenseTypes, preferredLicenseTypes) {\n    var e_1, _a, e_2, _b;\n    try {\n      for (var preferredLicenseTypes_1 = __values(preferredLicenseTypes), preferredLicenseTypes_1_1 = preferredLicenseTypes_1.next(); !preferredLicenseTypes_1_1.done; preferredLicenseTypes_1_1 = preferredLicenseTypes_1.next()) {\n        var preferredLicenseType = preferredLicenseTypes_1_1.value;\n        try {\n          for (var licenseTypes_1 = (e_2 = void 0, __values(licenseTypes)), licenseTypes_1_1 = licenseTypes_1.next(); !licenseTypes_1_1.done; licenseTypes_1_1 = licenseTypes_1.next()) {\n            var licenseType = licenseTypes_1_1.value;\n            if (preferredLicenseType === licenseType) {\n              return preferredLicenseType;\n            }\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (licenseTypes_1_1 && !licenseTypes_1_1.done && (_b = licenseTypes_1.return)) _b.call(licenseTypes_1);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (preferredLicenseTypes_1_1 && !preferredLicenseTypes_1_1.done && (_a = preferredLicenseTypes_1.return)) _a.call(preferredLicenseTypes_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return null;\n  };\n  return PluginLicenseTypeIdentifier;\n}();\nexports.PluginLicenseTypeIdentifier = PluginLicenseTypeIdentifier;","map":{"version":3,"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","Object","defineProperty","exports","PluginLicenseTypeIdentifier","logger","licenseTypeOverrides","preferredLicenseTypes","handleLicenseAmbiguity","handleMissingLicenseType","prototype","findLicenseIdentifier","compilation","packageName","packageJson","licensePropValue","license","type","Array","isArray","licenses","licenseTypes","map","x","licenseType","findPreferredLicense","resolvedLicenseType","warn","e_1","_a","e_2","_b","preferredLicenseTypes_1","preferredLicenseTypes_1_1","preferredLicenseType","licenseTypes_1","licenseTypes_1_1","e_2_1","error","return","e_1_1"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/license-webpack-plugin/dist/PluginLicenseTypeIdentifier.js"],"sourcesContent":["\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PluginLicenseTypeIdentifier = void 0;\nvar PluginLicenseTypeIdentifier = /** @class */ (function () {\n    function PluginLicenseTypeIdentifier(logger, licenseTypeOverrides, preferredLicenseTypes, handleLicenseAmbiguity, handleMissingLicenseType) {\n        this.logger = logger;\n        this.licenseTypeOverrides = licenseTypeOverrides;\n        this.preferredLicenseTypes = preferredLicenseTypes;\n        this.handleLicenseAmbiguity = handleLicenseAmbiguity;\n        this.handleMissingLicenseType = handleMissingLicenseType;\n    }\n    PluginLicenseTypeIdentifier.prototype.findLicenseIdentifier = function (compilation, packageName, packageJson) {\n        if (this.licenseTypeOverrides && this.licenseTypeOverrides[packageName]) {\n            return this.licenseTypeOverrides[packageName];\n        }\n        var licensePropValue = packageJson.license;\n        if (licensePropValue) {\n            return typeof licensePropValue === 'string'\n                ? licensePropValue\n                : licensePropValue.type;\n        }\n        // handle deprecated \"licenses\" field in package.json\n        if (Array.isArray(packageJson.licenses) &&\n            packageJson.licenses.length > 0) {\n            if (packageJson.licenses.length === 1) {\n                return packageJson.licenses[0].type;\n            }\n            // handle multiple licenses when we have a preferred license type\n            var licenseTypes = packageJson.licenses.map(function (x) { return x.type; });\n            var licenseType = this.findPreferredLicense(licenseTypes, this.preferredLicenseTypes);\n            if (licenseType !== null) {\n                // found preferred license\n                return licenseType;\n            }\n            var resolvedLicenseType = this.handleLicenseAmbiguity(packageName, packageJson.licenses);\n            this.logger.warn(compilation, packageName + \" specifies multiple licenses: \" + licenseTypes + \". Automatically selected \" + resolvedLicenseType + \". Use the preferredLicenseTypes or the licenseTypeOverrides option to resolve this warning.\");\n            return resolvedLicenseType;\n        }\n        this.logger.warn(compilation, \"could not find any license type for \" + packageName + \" in its package.json\");\n        return this.handleMissingLicenseType(packageName);\n    };\n    PluginLicenseTypeIdentifier.prototype.findPreferredLicense = function (licenseTypes, preferredLicenseTypes) {\n        var e_1, _a, e_2, _b;\n        try {\n            for (var preferredLicenseTypes_1 = __values(preferredLicenseTypes), preferredLicenseTypes_1_1 = preferredLicenseTypes_1.next(); !preferredLicenseTypes_1_1.done; preferredLicenseTypes_1_1 = preferredLicenseTypes_1.next()) {\n                var preferredLicenseType = preferredLicenseTypes_1_1.value;\n                try {\n                    for (var licenseTypes_1 = (e_2 = void 0, __values(licenseTypes)), licenseTypes_1_1 = licenseTypes_1.next(); !licenseTypes_1_1.done; licenseTypes_1_1 = licenseTypes_1.next()) {\n                        var licenseType = licenseTypes_1_1.value;\n                        if (preferredLicenseType === licenseType) {\n                            return preferredLicenseType;\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (licenseTypes_1_1 && !licenseTypes_1_1.done && (_b = licenseTypes_1.return)) _b.call(licenseTypes_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (preferredLicenseTypes_1_1 && !preferredLicenseTypes_1_1.done && (_a = preferredLicenseTypes_1.return)) _a.call(preferredLicenseTypes_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return null;\n    };\n    return PluginLicenseTypeIdentifier;\n}());\nexports.PluginLicenseTypeIdentifier = PluginLicenseTypeIdentifier;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}