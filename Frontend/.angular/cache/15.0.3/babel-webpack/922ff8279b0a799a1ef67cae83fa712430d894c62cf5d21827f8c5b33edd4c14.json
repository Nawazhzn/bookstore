{"ast":null,"code":"const url = require('url');\nconst {\n  Agent: httpAgent\n} = require('http');\nconst {\n  Agent: httpsAgent\n} = require('https');\nconst httpProxy = require('http-proxy');\nconst _ = require('lodash');\nconst {\n  lookup\n} = require('../utils/dns-utils');\nconst log = require('../logger').create('proxy');\nfunction parseProxyConfig(proxies, config) {\n  proxies = proxies || [];\n  return _.sortBy(_.map(proxies, function (proxyConfiguration, proxyPath) {\n    if (typeof proxyConfiguration === 'string') {\n      proxyConfiguration = {\n        target: proxyConfiguration\n      };\n    }\n    let proxyUrl = proxyConfiguration.target;\n    // eslint-disable-next-line node/no-deprecated-api\n    const proxyDetails = url.parse(proxyUrl);\n    let pathname = proxyDetails.pathname;\n    if (proxyPath.endsWith('/') && !proxyUrl.endsWith('/')) {\n      log.warn(`proxy \"${proxyUrl}\" normalized to \"${proxyUrl}/\"`);\n      proxyUrl += '/';\n      pathname += '/';\n    }\n    if (!proxyPath.endsWith('/') && proxyUrl.endsWith('/')) {\n      log.warn(`proxy \"${proxyPath}\" normalized to \"${proxyPath}/\"`);\n      proxyPath += '/';\n    }\n    if (pathname === '/' && !proxyUrl.endsWith('/')) {\n      pathname = '';\n    }\n    const hostname = proxyDetails.hostname || config.hostname;\n    const protocol = proxyDetails.protocol || config.protocol;\n    const defaultPorts = {\n      'http:': '80',\n      'https:': '443'\n    };\n    const port = proxyDetails.port || defaultPorts[proxyDetails.protocol] || config.port;\n    const changeOrigin = proxyConfiguration.changeOrigin || false;\n    const Agent = protocol === 'https:' ? httpsAgent : httpAgent;\n    const agent = new Agent({\n      keepAlive: true,\n      lookup\n    });\n    const proxy = httpProxy.createProxyServer({\n      target: {\n        host: hostname,\n        port,\n        protocol\n      },\n      xfwd: true,\n      changeOrigin: changeOrigin,\n      secure: config.proxyValidateSSL,\n      agent\n    });\n    ['proxyReq', 'proxyRes'].forEach(function (name) {\n      const callback = proxyDetails[name] || config[name];\n      if (callback) {\n        proxy.on(name, callback);\n      }\n    });\n    proxy.on('error', function proxyError(err, req, res) {\n      if (err.code === 'ECONNRESET' && req.socket.destroyed) {\n        log.debug(`failed to proxy ${req.url} (browser hung up the socket)`);\n      } else {\n        log.warn(`failed to proxy ${req.url} (${err.message})`);\n      }\n      res.destroy();\n    });\n    return {\n      path: proxyPath,\n      baseUrl: pathname,\n      host: hostname,\n      port,\n      proxy,\n      agent\n    };\n  }), 'path').reverse();\n}\n\n/**\n * Returns a handler which understands the proxies and its redirects, along with the proxy to use\n * @param proxies An array of proxy record objects\n * @param urlRoot The URL root that karma is mounted on\n * @return {Function} handler function\n */\nfunction createProxyHandler(proxies, urlRoot) {\n  if (!proxies.length) {\n    const nullProxy = (request, response, next) => next();\n    nullProxy.upgrade = () => {};\n    return nullProxy;\n  }\n  function createProxy(request, response, next) {\n    const proxyRecord = proxies.find(p => request.url.startsWith(p.path));\n    if (proxyRecord) {\n      log.debug(`proxying request - ${request.url} to ${proxyRecord.host}:${proxyRecord.port}`);\n      request.url = request.url.replace(proxyRecord.path, proxyRecord.baseUrl);\n      proxyRecord.proxy.web(request, response);\n    } else {\n      return next();\n    }\n  }\n  createProxy.upgrade = function (request, socket, head) {\n    // special-case karma's route to avoid upgrading it\n    if (request.url.startsWith(urlRoot)) {\n      log.debug(`NOT upgrading proxyWebSocketRequest ${request.url}`);\n      return;\n    }\n    const proxyRecord = proxies.find(p => request.url.startsWith(p.path));\n    if (proxyRecord) {\n      log.debug(`upgrade proxyWebSocketRequest ${request.url} to ${proxyRecord.host}:${proxyRecord.port}`);\n      request.url = request.url.replace(proxyRecord.path, proxyRecord.baseUrl);\n      proxyRecord.proxy.ws(request, socket, head);\n    }\n  };\n  return createProxy;\n}\nexports.create = function ( /* config */config, /* config.proxies */proxies, /* emitter */emitter) {\n  const proxyRecords = parseProxyConfig(proxies, config);\n  emitter.on('exit', done => {\n    log.debug('Destroying proxy agents');\n    proxyRecords.forEach(proxyRecord => {\n      proxyRecord.agent.destroy();\n    });\n    done();\n  });\n  return createProxyHandler(proxyRecords, config.urlRoot);\n};","map":{"version":3,"names":["url","require","Agent","httpAgent","httpsAgent","httpProxy","_","lookup","log","create","parseProxyConfig","proxies","config","sortBy","map","proxyConfiguration","proxyPath","target","proxyUrl","proxyDetails","parse","pathname","endsWith","warn","hostname","protocol","defaultPorts","port","changeOrigin","agent","keepAlive","proxy","createProxyServer","host","xfwd","secure","proxyValidateSSL","forEach","name","callback","on","proxyError","err","req","res","code","socket","destroyed","debug","message","destroy","path","baseUrl","reverse","createProxyHandler","urlRoot","length","nullProxy","request","response","next","upgrade","createProxy","proxyRecord","find","p","startsWith","replace","web","head","ws","exports","emitter","proxyRecords","done"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/karma/lib/middleware/proxy.js"],"sourcesContent":["const url = require('url')\nconst { Agent: httpAgent } = require('http')\nconst { Agent: httpsAgent } = require('https')\nconst httpProxy = require('http-proxy')\nconst _ = require('lodash')\nconst { lookup } = require('../utils/dns-utils')\n\nconst log = require('../logger').create('proxy')\n\nfunction parseProxyConfig (proxies, config) {\n  proxies = proxies || []\n  return _.sortBy(_.map(proxies, function (proxyConfiguration, proxyPath) {\n    if (typeof proxyConfiguration === 'string') {\n      proxyConfiguration = { target: proxyConfiguration }\n    }\n    let proxyUrl = proxyConfiguration.target\n    // eslint-disable-next-line node/no-deprecated-api\n    const proxyDetails = url.parse(proxyUrl)\n    let pathname = proxyDetails.pathname\n\n    if (proxyPath.endsWith('/') && !proxyUrl.endsWith('/')) {\n      log.warn(`proxy \"${proxyUrl}\" normalized to \"${proxyUrl}/\"`)\n      proxyUrl += '/'\n      pathname += '/'\n    }\n\n    if (!proxyPath.endsWith('/') && proxyUrl.endsWith('/')) {\n      log.warn(`proxy \"${proxyPath}\" normalized to \"${proxyPath}/\"`)\n      proxyPath += '/'\n    }\n\n    if (pathname === '/' && !proxyUrl.endsWith('/')) {\n      pathname = ''\n    }\n\n    const hostname = proxyDetails.hostname || config.hostname\n    const protocol = proxyDetails.protocol || config.protocol\n    const defaultPorts = {\n      'http:': '80',\n      'https:': '443'\n    }\n    const port = proxyDetails.port || defaultPorts[proxyDetails.protocol] || config.port\n    const changeOrigin = proxyConfiguration.changeOrigin || false\n    const Agent = protocol === 'https:' ? httpsAgent : httpAgent\n    const agent = new Agent({\n      keepAlive: true,\n      lookup\n    })\n    const proxy = httpProxy.createProxyServer({\n      target: { host: hostname, port, protocol },\n      xfwd: true,\n      changeOrigin: changeOrigin,\n      secure: config.proxyValidateSSL,\n      agent\n    })\n\n    ;['proxyReq', 'proxyRes'].forEach(function (name) {\n      const callback = proxyDetails[name] || config[name]\n      if (callback) {\n        proxy.on(name, callback)\n      }\n    })\n\n    proxy.on('error', function proxyError (err, req, res) {\n      if (err.code === 'ECONNRESET' && req.socket.destroyed) {\n        log.debug(`failed to proxy ${req.url} (browser hung up the socket)`)\n      } else {\n        log.warn(`failed to proxy ${req.url} (${err.message})`)\n      }\n\n      res.destroy()\n    })\n\n    return { path: proxyPath, baseUrl: pathname, host: hostname, port, proxy, agent }\n  }), 'path').reverse()\n}\n\n/**\n * Returns a handler which understands the proxies and its redirects, along with the proxy to use\n * @param proxies An array of proxy record objects\n * @param urlRoot The URL root that karma is mounted on\n * @return {Function} handler function\n */\nfunction createProxyHandler (proxies, urlRoot) {\n  if (!proxies.length) {\n    const nullProxy = (request, response, next) => next()\n    nullProxy.upgrade = () => {}\n    return nullProxy\n  }\n\n  function createProxy (request, response, next) {\n    const proxyRecord = proxies.find((p) => request.url.startsWith(p.path))\n    if (proxyRecord) {\n      log.debug(`proxying request - ${request.url} to ${proxyRecord.host}:${proxyRecord.port}`)\n      request.url = request.url.replace(proxyRecord.path, proxyRecord.baseUrl)\n      proxyRecord.proxy.web(request, response)\n    } else {\n      return next()\n    }\n  }\n\n  createProxy.upgrade = function (request, socket, head) {\n    // special-case karma's route to avoid upgrading it\n    if (request.url.startsWith(urlRoot)) {\n      log.debug(`NOT upgrading proxyWebSocketRequest ${request.url}`)\n      return\n    }\n\n    const proxyRecord = proxies.find((p) => request.url.startsWith(p.path))\n    if (proxyRecord) {\n      log.debug(`upgrade proxyWebSocketRequest ${request.url} to ${proxyRecord.host}:${proxyRecord.port}`)\n      request.url = request.url.replace(proxyRecord.path, proxyRecord.baseUrl)\n      proxyRecord.proxy.ws(request, socket, head)\n    }\n  }\n\n  return createProxy\n}\n\nexports.create = function (/* config */config, /* config.proxies */proxies, /* emitter */emitter) {\n  const proxyRecords = parseProxyConfig(proxies, config)\n  emitter.on('exit', (done) => {\n    log.debug('Destroying proxy agents')\n    proxyRecords.forEach((proxyRecord) => {\n      proxyRecord.agent.destroy()\n    })\n    done()\n  })\n  return createProxyHandler(proxyRecords, config.urlRoot)\n}\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC;AAC1B,MAAM;EAAEC,KAAK,EAAEC;AAAU,CAAC,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC5C,MAAM;EAAEC,KAAK,EAAEE;AAAW,CAAC,GAAGH,OAAO,CAAC,OAAO,CAAC;AAC9C,MAAMI,SAAS,GAAGJ,OAAO,CAAC,YAAY,CAAC;AACvC,MAAMK,CAAC,GAAGL,OAAO,CAAC,QAAQ,CAAC;AAC3B,MAAM;EAAEM;AAAO,CAAC,GAAGN,OAAO,CAAC,oBAAoB,CAAC;AAEhD,MAAMO,GAAG,GAAGP,OAAO,CAAC,WAAW,CAAC,CAACQ,MAAM,CAAC,OAAO,CAAC;AAEhD,SAASC,gBAAgB,CAAEC,OAAO,EAAEC,MAAM,EAAE;EAC1CD,OAAO,GAAGA,OAAO,IAAI,EAAE;EACvB,OAAOL,CAAC,CAACO,MAAM,CAACP,CAAC,CAACQ,GAAG,CAACH,OAAO,EAAE,UAAUI,kBAAkB,EAAEC,SAAS,EAAE;IACtE,IAAI,OAAOD,kBAAkB,KAAK,QAAQ,EAAE;MAC1CA,kBAAkB,GAAG;QAAEE,MAAM,EAAEF;MAAmB,CAAC;IACrD;IACA,IAAIG,QAAQ,GAAGH,kBAAkB,CAACE,MAAM;IACxC;IACA,MAAME,YAAY,GAAGnB,GAAG,CAACoB,KAAK,CAACF,QAAQ,CAAC;IACxC,IAAIG,QAAQ,GAAGF,YAAY,CAACE,QAAQ;IAEpC,IAAIL,SAAS,CAACM,QAAQ,CAAC,GAAG,CAAC,IAAI,CAACJ,QAAQ,CAACI,QAAQ,CAAC,GAAG,CAAC,EAAE;MACtDd,GAAG,CAACe,IAAI,CAAE,UAASL,QAAS,oBAAmBA,QAAS,IAAG,CAAC;MAC5DA,QAAQ,IAAI,GAAG;MACfG,QAAQ,IAAI,GAAG;IACjB;IAEA,IAAI,CAACL,SAAS,CAACM,QAAQ,CAAC,GAAG,CAAC,IAAIJ,QAAQ,CAACI,QAAQ,CAAC,GAAG,CAAC,EAAE;MACtDd,GAAG,CAACe,IAAI,CAAE,UAASP,SAAU,oBAAmBA,SAAU,IAAG,CAAC;MAC9DA,SAAS,IAAI,GAAG;IAClB;IAEA,IAAIK,QAAQ,KAAK,GAAG,IAAI,CAACH,QAAQ,CAACI,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC/CD,QAAQ,GAAG,EAAE;IACf;IAEA,MAAMG,QAAQ,GAAGL,YAAY,CAACK,QAAQ,IAAIZ,MAAM,CAACY,QAAQ;IACzD,MAAMC,QAAQ,GAAGN,YAAY,CAACM,QAAQ,IAAIb,MAAM,CAACa,QAAQ;IACzD,MAAMC,YAAY,GAAG;MACnB,OAAO,EAAE,IAAI;MACb,QAAQ,EAAE;IACZ,CAAC;IACD,MAAMC,IAAI,GAAGR,YAAY,CAACQ,IAAI,IAAID,YAAY,CAACP,YAAY,CAACM,QAAQ,CAAC,IAAIb,MAAM,CAACe,IAAI;IACpF,MAAMC,YAAY,GAAGb,kBAAkB,CAACa,YAAY,IAAI,KAAK;IAC7D,MAAM1B,KAAK,GAAGuB,QAAQ,KAAK,QAAQ,GAAGrB,UAAU,GAAGD,SAAS;IAC5D,MAAM0B,KAAK,GAAG,IAAI3B,KAAK,CAAC;MACtB4B,SAAS,EAAE,IAAI;MACfvB;IACF,CAAC,CAAC;IACF,MAAMwB,KAAK,GAAG1B,SAAS,CAAC2B,iBAAiB,CAAC;MACxCf,MAAM,EAAE;QAAEgB,IAAI,EAAET,QAAQ;QAAEG,IAAI;QAAEF;MAAS,CAAC;MAC1CS,IAAI,EAAE,IAAI;MACVN,YAAY,EAAEA,YAAY;MAC1BO,MAAM,EAAEvB,MAAM,CAACwB,gBAAgB;MAC/BP;IACF,CAAC,CAAC;IAED,CAAC,UAAU,EAAE,UAAU,CAAC,CAACQ,OAAO,CAAC,UAAUC,IAAI,EAAE;MAChD,MAAMC,QAAQ,GAAGpB,YAAY,CAACmB,IAAI,CAAC,IAAI1B,MAAM,CAAC0B,IAAI,CAAC;MACnD,IAAIC,QAAQ,EAAE;QACZR,KAAK,CAACS,EAAE,CAACF,IAAI,EAAEC,QAAQ,CAAC;MAC1B;IACF,CAAC,CAAC;IAEFR,KAAK,CAACS,EAAE,CAAC,OAAO,EAAE,SAASC,UAAU,CAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE;MACpD,IAAIF,GAAG,CAACG,IAAI,KAAK,YAAY,IAAIF,GAAG,CAACG,MAAM,CAACC,SAAS,EAAE;QACrDvC,GAAG,CAACwC,KAAK,CAAE,mBAAkBL,GAAG,CAAC3C,GAAI,+BAA8B,CAAC;MACtE,CAAC,MAAM;QACLQ,GAAG,CAACe,IAAI,CAAE,mBAAkBoB,GAAG,CAAC3C,GAAI,KAAI0C,GAAG,CAACO,OAAQ,GAAE,CAAC;MACzD;MAEAL,GAAG,CAACM,OAAO,EAAE;IACf,CAAC,CAAC;IAEF,OAAO;MAAEC,IAAI,EAAEnC,SAAS;MAAEoC,OAAO,EAAE/B,QAAQ;MAAEY,IAAI,EAAET,QAAQ;MAAEG,IAAI;MAAEI,KAAK;MAAEF;IAAM,CAAC;EACnF,CAAC,CAAC,EAAE,MAAM,CAAC,CAACwB,OAAO,EAAE;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,kBAAkB,CAAE3C,OAAO,EAAE4C,OAAO,EAAE;EAC7C,IAAI,CAAC5C,OAAO,CAAC6C,MAAM,EAAE;IACnB,MAAMC,SAAS,GAAG,CAACC,OAAO,EAAEC,QAAQ,EAAEC,IAAI,KAAKA,IAAI,EAAE;IACrDH,SAAS,CAACI,OAAO,GAAG,MAAM,CAAC,CAAC;IAC5B,OAAOJ,SAAS;EAClB;EAEA,SAASK,WAAW,CAAEJ,OAAO,EAAEC,QAAQ,EAAEC,IAAI,EAAE;IAC7C,MAAMG,WAAW,GAAGpD,OAAO,CAACqD,IAAI,CAAEC,CAAC,IAAKP,OAAO,CAAC1D,GAAG,CAACkE,UAAU,CAACD,CAAC,CAACd,IAAI,CAAC,CAAC;IACvE,IAAIY,WAAW,EAAE;MACfvD,GAAG,CAACwC,KAAK,CAAE,sBAAqBU,OAAO,CAAC1D,GAAI,OAAM+D,WAAW,CAAC9B,IAAK,IAAG8B,WAAW,CAACpC,IAAK,EAAC,CAAC;MACzF+B,OAAO,CAAC1D,GAAG,GAAG0D,OAAO,CAAC1D,GAAG,CAACmE,OAAO,CAACJ,WAAW,CAACZ,IAAI,EAAEY,WAAW,CAACX,OAAO,CAAC;MACxEW,WAAW,CAAChC,KAAK,CAACqC,GAAG,CAACV,OAAO,EAAEC,QAAQ,CAAC;IAC1C,CAAC,MAAM;MACL,OAAOC,IAAI,EAAE;IACf;EACF;EAEAE,WAAW,CAACD,OAAO,GAAG,UAAUH,OAAO,EAAEZ,MAAM,EAAEuB,IAAI,EAAE;IACrD;IACA,IAAIX,OAAO,CAAC1D,GAAG,CAACkE,UAAU,CAACX,OAAO,CAAC,EAAE;MACnC/C,GAAG,CAACwC,KAAK,CAAE,uCAAsCU,OAAO,CAAC1D,GAAI,EAAC,CAAC;MAC/D;IACF;IAEA,MAAM+D,WAAW,GAAGpD,OAAO,CAACqD,IAAI,CAAEC,CAAC,IAAKP,OAAO,CAAC1D,GAAG,CAACkE,UAAU,CAACD,CAAC,CAACd,IAAI,CAAC,CAAC;IACvE,IAAIY,WAAW,EAAE;MACfvD,GAAG,CAACwC,KAAK,CAAE,iCAAgCU,OAAO,CAAC1D,GAAI,OAAM+D,WAAW,CAAC9B,IAAK,IAAG8B,WAAW,CAACpC,IAAK,EAAC,CAAC;MACpG+B,OAAO,CAAC1D,GAAG,GAAG0D,OAAO,CAAC1D,GAAG,CAACmE,OAAO,CAACJ,WAAW,CAACZ,IAAI,EAAEY,WAAW,CAACX,OAAO,CAAC;MACxEW,WAAW,CAAChC,KAAK,CAACuC,EAAE,CAACZ,OAAO,EAAEZ,MAAM,EAAEuB,IAAI,CAAC;IAC7C;EACF,CAAC;EAED,OAAOP,WAAW;AACpB;AAEAS,OAAO,CAAC9D,MAAM,GAAG,WAAU,YAAYG,MAAM,EAAE,oBAAoBD,OAAO,EAAE,aAAa6D,OAAO,EAAE;EAChG,MAAMC,YAAY,GAAG/D,gBAAgB,CAACC,OAAO,EAAEC,MAAM,CAAC;EACtD4D,OAAO,CAAChC,EAAE,CAAC,MAAM,EAAGkC,IAAI,IAAK;IAC3BlE,GAAG,CAACwC,KAAK,CAAC,yBAAyB,CAAC;IACpCyB,YAAY,CAACpC,OAAO,CAAE0B,WAAW,IAAK;MACpCA,WAAW,CAAClC,KAAK,CAACqB,OAAO,EAAE;IAC7B,CAAC,CAAC;IACFwB,IAAI,EAAE;EACR,CAAC,CAAC;EACF,OAAOpB,kBAAkB,CAACmB,YAAY,EAAE7D,MAAM,CAAC2C,OAAO,CAAC;AACzD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}