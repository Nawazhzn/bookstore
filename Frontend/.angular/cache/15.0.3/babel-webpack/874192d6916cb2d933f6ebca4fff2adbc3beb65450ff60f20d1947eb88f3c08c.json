{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nlet ImageUploadComponent = class ImageUploadComponent {\n  constructor(uploadService) {\n    this.uploadService = uploadService;\n    this.progress = 0;\n    this.message = '';\n    this.preview = '';\n  }\n  selectFile(event) {\n    this.message = '';\n    this.preview = '';\n    this.progress = 0;\n    this.selectedFiles = event.target.files;\n    if (this.selectedFiles) {\n      const file = this.selectedFiles.item(0);\n      if (file) {\n        this.preview = '';\n        this.currentFile = file;\n        const reader = new FileReader();\n        reader.onload = e => {\n          console.log(e.target.result);\n          this.preview = e.target.result;\n        };\n        reader.readAsDataURL(this.currentFile);\n      }\n    }\n  }\n  upload() {\n    this.progress = 0;\n    if (this.selectedFiles) {\n      const file = this.selectedFiles.item(0);\n      if (file) {\n        this.currentFile = file;\n        this.uploadService.upload(this.currentFile).subscribe({\n          next: event => {\n            if (event.type === HttpEventType.UploadProgress) {\n              this.progress = Math.round(100 * event.loaded / event.total);\n            } else if (event instanceof HttpResponse) {\n              this.message = event.body.message;\n              this.imageInfos = this.uploadService.getFiles();\n            }\n          },\n          error: err => {\n            console.log(err);\n            this.progress = 0;\n            if (err.error && err.error.message) {\n              this.message = err.error.message;\n            } else {\n              this.message = 'Could not upload the image!';\n            }\n            this.currentFile = undefined;\n          }\n        });\n      }\n      this.selectedFiles = undefined;\n    }\n  }\n  ngOnInit() {\n    this.imageInfos = this.uploadService.getFiles();\n  }\n};\nImageUploadComponent = __decorate([Component({\n  selector: 'app-image-upload',\n  templateUrl: './image-upload.component.html',\n  styleUrls: ['./image-upload.component.css']\n})], ImageUploadComponent);\nexport { ImageUploadComponent };","map":{"version":3,"mappings":"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","names":["Component","HttpEventType","HttpResponse","ImageUploadComponent","constructor","uploadService","selectFile","event","message","preview","progress","selectedFiles","target","files","file","item","currentFile","reader","FileReader","onload","e","console","log","result","readAsDataURL","upload","subscribe","next","type","UploadProgress","Math","round","loaded","total","body","imageInfos","getFiles","error","err","undefined","ngOnInit","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Nawaz\\Downloads\\mean-stack-authentication-authorization-master\\mean-stack-authentication-authorization-master\\frontend\\src\\app\\file-upload\\upload-image.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FileUploadService } from '../';\n\n@Component({\n  selector: 'app-image-upload',\n  templateUrl: './image-upload.component.html',\n  styleUrls: ['./image-upload.component.css']\n})\nexport class ImageUploadComponent implements OnInit {\n  selectedFiles?: FileList;\n  currentFile?: File;\n  progress = 0;\n  message = '';\n  preview = '';\n\n  imageInfos?: Observable<any>;\n\n  constructor(private uploadService: FileUploadService) {}\n  selectFile(event: any): void {\n    this.message = '';\n    this.preview = '';\n    this.progress = 0;\n    this.selectedFiles = event.target.files;\n\n    if (this.selectedFiles) {\n      const file: File | null = this.selectedFiles.item(0);\n\n      if (file) {\n        this.preview = '';\n        this.currentFile = file;\n\n        const reader = new FileReader();\n\n        reader.onload = (e: any) => {\n          console.log(e.target.result);\n          this.preview = e.target.result;\n        };\n\n        reader.readAsDataURL(this.currentFile);\n      }\n    }\n  }\n  upload(): void {\n    this.progress = 0;\n\n    if (this.selectedFiles) {\n      const file: File | null = this.selectedFiles.item(0);\n\n      if (file) {\n        this.currentFile = file;\n\n        this.uploadService.upload(this.currentFile).subscribe({\n          next: (event: any) => {\n            if (event.type === HttpEventType.UploadProgress) {\n              this.progress = Math.round((100 * event.loaded) / event.total);\n            } else if (event instanceof HttpResponse) {\n              this.message = event.body.message;\n              this.imageInfos = this.uploadService.getFiles();\n            }\n          },\n          error: (err: any) => {\n            console.log(err);\n            this.progress = 0;\n\n            if (err.error && err.error.message) {\n              this.message = err.error.message;\n            } else {\n              this.message = 'Could not upload the image!';\n            }\n\n            this.currentFile = undefined;\n          },\n        });\n      }\n\n      this.selectedFiles = undefined;\n    }\n  }\n  ngOnInit(): void {\n    this.imageInfos = this.uploadService.getFiles();\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}