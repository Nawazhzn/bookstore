{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst execa = require(\"execa\");\nconst db2util = \"/QOpenSys/pkgs/bin/db2util\";\nconst sql = \"select NEXT_HOP, LOCAL_BINDING_INTERFACE from QSYS2.NETSTAT_ROUTE_INFO where ROUTE_TYPE='DFTROUTE' and NEXT_HOP!='*DIRECT' and CONNECTION_TYPE=?\";\nconst parse = stdout => {\n  let result;\n  try {\n    const resultObj = JSON.parse(stdout);\n    const gateway = resultObj.records[0].NEXT_HOP;\n    const iface = resultObj.records[0].LOCAL_BINDING_INTERFACE;\n    result = {\n      gateway,\n      iface\n    };\n  } catch {}\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n  return result;\n};\nconst promise = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (family) {\n    const {\n      stdout\n    } = yield execa(db2util, [sql, \"-p\", family, \"-o\", \"json\"]);\n    return parse(stdout);\n  });\n  return function promise(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nconst sync = family => {\n  const {\n    stdout\n  } = execa.sync(db2util, [sql, \"-p\", family, \"-o\", \"json\"]);\n  return parse(stdout);\n};\nmodule.exports.v4 = () => promise(\"IPV4\");\nmodule.exports.v6 = () => promise(\"IPV6\");\nmodule.exports.v4.sync = () => sync(\"IPV4\");\nmodule.exports.v6.sync = () => sync(\"IPV6\");","map":{"version":3,"names":["execa","require","db2util","sql","parse","stdout","result","resultObj","JSON","gateway","records","NEXT_HOP","iface","LOCAL_BINDING_INTERFACE","Error","promise","family","sync","module","exports","v4","v6"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/default-gateway/ibmi.js"],"sourcesContent":["\"use strict\";\n\nconst execa = require(\"execa\");\n\nconst db2util = \"/QOpenSys/pkgs/bin/db2util\";\nconst sql = \"select NEXT_HOP, LOCAL_BINDING_INTERFACE from QSYS2.NETSTAT_ROUTE_INFO where ROUTE_TYPE='DFTROUTE' and NEXT_HOP!='*DIRECT' and CONNECTION_TYPE=?\";\n\nconst parse = stdout => {\n  let result;\n  try {\n    const resultObj = JSON.parse(stdout);\n    const gateway = resultObj.records[0].NEXT_HOP;\n    const iface = resultObj.records[0].LOCAL_BINDING_INTERFACE;\n    result = {gateway, iface};\n  } catch {}\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n  return result;\n};\n\nconst promise = async family => {\n  const {stdout} = await execa(db2util, [sql, \"-p\", family, \"-o\", \"json\"]);\n  return parse(stdout);\n};\n\nconst sync = family => {\n  const {stdout} = execa.sync(db2util, [sql, \"-p\", family, \"-o\", \"json\"]);\n  return parse(stdout);\n};\n\nmodule.exports.v4 = () => promise(\"IPV4\");\nmodule.exports.v6 = () => promise(\"IPV6\");\n\nmodule.exports.v4.sync = () => sync(\"IPV4\");\nmodule.exports.v6.sync = () => sync(\"IPV6\");\n"],"mappings":"AAAA,YAAY;;AAAC;AAEb,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAE9B,MAAMC,OAAO,GAAG,4BAA4B;AAC5C,MAAMC,GAAG,GAAG,kJAAkJ;AAE9J,MAAMC,KAAK,GAAGC,MAAM,IAAI;EACtB,IAAIC,MAAM;EACV,IAAI;IACF,MAAMC,SAAS,GAAGC,IAAI,CAACJ,KAAK,CAACC,MAAM,CAAC;IACpC,MAAMI,OAAO,GAAGF,SAAS,CAACG,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ;IAC7C,MAAMC,KAAK,GAAGL,SAAS,CAACG,OAAO,CAAC,CAAC,CAAC,CAACG,uBAAuB;IAC1DP,MAAM,GAAG;MAACG,OAAO;MAAEG;IAAK,CAAC;EAC3B,CAAC,CAAC,MAAM,CAAC;EACT,IAAI,CAACN,MAAM,EAAE;IACX,MAAM,IAAIQ,KAAK,CAAC,qCAAqC,CAAC;EACxD;EACA,OAAOR,MAAM;AACf,CAAC;AAED,MAAMS,OAAO;EAAA,6BAAG,WAAMC,MAAM,EAAI;IAC9B,MAAM;MAACX;IAAM,CAAC,SAASL,KAAK,CAACE,OAAO,EAAE,CAACC,GAAG,EAAE,IAAI,EAAEa,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IACxE,OAAOZ,KAAK,CAACC,MAAM,CAAC;EACtB,CAAC;EAAA,gBAHKU,OAAO;IAAA;EAAA;AAAA,GAGZ;AAED,MAAME,IAAI,GAAGD,MAAM,IAAI;EACrB,MAAM;IAACX;EAAM,CAAC,GAAGL,KAAK,CAACiB,IAAI,CAACf,OAAO,EAAE,CAACC,GAAG,EAAE,IAAI,EAAEa,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;EACvE,OAAOZ,KAAK,CAACC,MAAM,CAAC;AACtB,CAAC;AAEDa,MAAM,CAACC,OAAO,CAACC,EAAE,GAAG,MAAML,OAAO,CAAC,MAAM,CAAC;AACzCG,MAAM,CAACC,OAAO,CAACE,EAAE,GAAG,MAAMN,OAAO,CAAC,MAAM,CAAC;AAEzCG,MAAM,CAACC,OAAO,CAACC,EAAE,CAACH,IAAI,GAAG,MAAMA,IAAI,CAAC,MAAM,CAAC;AAC3CC,MAAM,CAACC,OAAO,CAACE,EAAE,CAACJ,IAAI,GAAG,MAAMA,IAAI,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}