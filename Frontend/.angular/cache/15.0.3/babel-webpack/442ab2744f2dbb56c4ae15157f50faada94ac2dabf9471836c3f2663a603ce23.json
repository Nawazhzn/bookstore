{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nlet babel;\ntry {\n  babel = require(\"@babel/core\");\n} catch (err) {\n  if (err.code === \"MODULE_NOT_FOUND\") {\n    err.message += \"\\n babel-loader@9 requires Babel 7.12+ (the package '@babel/core'). \" + \"If you'd like to use Babel 6.x ('babel-core'), you should install 'babel-loader@7'.\";\n  }\n  throw err;\n}\n\n// Since we've got the reverse bridge package at @babel/core@6.x, give\n// people useful feedback if they try to use it alongside babel-loader.\nif (/^6\\./.test(babel.version)) {\n  throw new Error(\"\\n babel-loader@9 will not work with the '@babel/core@6' bridge package. \" + \"If you want to use Babel 6.x, install 'babel-loader@7'.\");\n}\nconst {\n  version\n} = require(\"../package.json\");\nconst cache = require(\"./cache\");\nconst transform = require(\"./transform\");\nconst injectCaller = require(\"./injectCaller\");\nconst schema = require(\"./schema\");\nconst {\n  isAbsolute\n} = require(\"path\");\nconst validateOptions = require(\"schema-utils\").validate;\nfunction subscribe(subscriber, metadata, context) {\n  if (context[subscriber]) {\n    context[subscriber](metadata);\n  }\n}\nmodule.exports = makeLoader();\nmodule.exports.custom = makeLoader;\nfunction makeLoader(callback) {\n  const overrides = callback ? callback(babel) : undefined;\n  return function (source, inputSourceMap) {\n    // Make the loader async\n    const callback = this.async();\n    loader.call(this, source, inputSourceMap, overrides).then(args => callback(null, ...args), err => callback(err));\n  };\n}\nfunction loader(_x, _x2, _x3) {\n  return _loader.apply(this, arguments);\n}\nfunction _loader() {\n  _loader = _asyncToGenerator(function* (source, inputSourceMap, overrides) {\n    const filename = this.resourcePath;\n    let loaderOptions = this.getOptions();\n    validateOptions(schema, loaderOptions, {\n      name: \"Babel loader\"\n    });\n    if (loaderOptions.customize != null) {\n      if (typeof loaderOptions.customize !== \"string\") {\n        throw new Error(\"Customized loaders must be implemented as standalone modules.\");\n      }\n      if (!isAbsolute(loaderOptions.customize)) {\n        throw new Error(\"Customized loaders must be passed as absolute paths, since \" + \"babel-loader has no way to know what they would be relative to.\");\n      }\n      if (overrides) {\n        throw new Error(\"babel-loader's 'customize' option is not available when already \" + \"using a customized babel-loader wrapper.\");\n      }\n      let override = require(loaderOptions.customize);\n      if (override.__esModule) override = override.default;\n      if (typeof override !== \"function\") {\n        throw new Error(\"Custom overrides must be functions.\");\n      }\n      overrides = override(babel);\n    }\n    let customOptions;\n    if (overrides && overrides.customOptions) {\n      const result = yield overrides.customOptions.call(this, loaderOptions, {\n        source,\n        map: inputSourceMap\n      });\n      customOptions = result.custom;\n      loaderOptions = result.loader;\n    }\n\n    // Deprecation handling\n    if (\"forceEnv\" in loaderOptions) {\n      console.warn(\"The option `forceEnv` has been removed in favor of `envName` in Babel 7.\");\n    }\n    if (typeof loaderOptions.babelrc === \"string\") {\n      console.warn(\"The option `babelrc` should not be set to a string anymore in the babel-loader config. \" + \"Please update your configuration and set `babelrc` to true or false.\\n\" + \"If you want to specify a specific babel config file to inherit config from \" + \"please use the `extends` option.\\nFor more information about this options see \" + \"https://babeljs.io/docs/core-packages/#options\");\n    }\n\n    // Standardize on 'sourceMaps' as the key passed through to Webpack, so that\n    // users may safely use either one alongside our default use of\n    // 'this.sourceMap' below without getting error about conflicting aliases.\n    if (Object.prototype.hasOwnProperty.call(loaderOptions, \"sourceMap\") && !Object.prototype.hasOwnProperty.call(loaderOptions, \"sourceMaps\")) {\n      loaderOptions = Object.assign({}, loaderOptions, {\n        sourceMaps: loaderOptions.sourceMap\n      });\n      delete loaderOptions.sourceMap;\n    }\n    const programmaticOptions = Object.assign({}, loaderOptions, {\n      filename,\n      inputSourceMap: inputSourceMap || loaderOptions.inputSourceMap,\n      // Set the default sourcemap behavior based on Webpack's mapping flag,\n      // but allow users to override if they want.\n      sourceMaps: loaderOptions.sourceMaps === undefined ? this.sourceMap : loaderOptions.sourceMaps,\n      // Ensure that Webpack will get a full absolute path in the sourcemap\n      // so that it can properly map the module back to its internal cached\n      // modules.\n      sourceFileName: filename\n    });\n    // Remove loader related options\n    delete programmaticOptions.customize;\n    delete programmaticOptions.cacheDirectory;\n    delete programmaticOptions.cacheIdentifier;\n    delete programmaticOptions.cacheCompression;\n    delete programmaticOptions.metadataSubscribers;\n    const config = yield babel.loadPartialConfigAsync(injectCaller(programmaticOptions, this.target));\n    if (config) {\n      let options = config.options;\n      if (overrides && overrides.config) {\n        options = yield overrides.config.call(this, config, {\n          source,\n          map: inputSourceMap,\n          customOptions\n        });\n      }\n      if (options.sourceMaps === \"inline\") {\n        // Babel has this weird behavior where if you set \"inline\", we\n        // inline the sourcemap, and set 'result.map = null'. This results\n        // in bad behavior from Babel since the maps get put into the code,\n        // which Webpack does not expect, and because the map we return to\n        // Webpack is null, which is also bad. To avoid that, we override the\n        // behavior here so \"inline\" just behaves like 'true'.\n        options.sourceMaps = true;\n      }\n      const {\n        cacheDirectory = null,\n        cacheIdentifier = JSON.stringify({\n          options,\n          \"@babel/core\": transform.version,\n          \"@babel/loader\": version\n        }),\n        cacheCompression = true,\n        metadataSubscribers = []\n      } = loaderOptions;\n      let result;\n      if (cacheDirectory) {\n        result = yield cache({\n          source,\n          options,\n          transform,\n          cacheDirectory,\n          cacheIdentifier,\n          cacheCompression\n        });\n      } else {\n        result = yield transform(source, options);\n      }\n      config.files.forEach(configFile => this.addDependency(configFile));\n      if (result) {\n        if (overrides && overrides.result) {\n          result = yield overrides.result.call(this, result, {\n            source,\n            map: inputSourceMap,\n            customOptions,\n            config,\n            options\n          });\n        }\n        const {\n          code,\n          map,\n          metadata,\n          externalDependencies\n        } = result;\n        externalDependencies == null ? void 0 : externalDependencies.forEach(dep => this.addDependency(dep));\n        metadataSubscribers.forEach(subscriber => {\n          subscribe(subscriber, metadata, this);\n        });\n        return [code, map];\n      }\n    }\n\n    // If the file was ignored, pass through the original content.\n    return [source, inputSourceMap];\n  });\n  return _loader.apply(this, arguments);\n}","map":{"version":3,"names":["babel","require","err","code","message","test","version","Error","cache","transform","injectCaller","schema","isAbsolute","validateOptions","validate","subscribe","subscriber","metadata","context","module","exports","makeLoader","custom","callback","overrides","undefined","source","inputSourceMap","async","loader","call","then","args","filename","resourcePath","loaderOptions","getOptions","name","customize","override","__esModule","default","customOptions","result","map","console","warn","babelrc","Object","prototype","hasOwnProperty","assign","sourceMaps","sourceMap","programmaticOptions","sourceFileName","cacheDirectory","cacheIdentifier","cacheCompression","metadataSubscribers","config","loadPartialConfigAsync","target","options","JSON","stringify","files","forEach","configFile","addDependency","externalDependencies","dep"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/babel-loader/lib/index.js"],"sourcesContent":["\"use strict\";\n\nlet babel;\ntry {\n  babel = require(\"@babel/core\");\n} catch (err) {\n  if (err.code === \"MODULE_NOT_FOUND\") {\n    err.message += \"\\n babel-loader@9 requires Babel 7.12+ (the package '@babel/core'). \" + \"If you'd like to use Babel 6.x ('babel-core'), you should install 'babel-loader@7'.\";\n  }\n  throw err;\n}\n\n// Since we've got the reverse bridge package at @babel/core@6.x, give\n// people useful feedback if they try to use it alongside babel-loader.\nif (/^6\\./.test(babel.version)) {\n  throw new Error(\"\\n babel-loader@9 will not work with the '@babel/core@6' bridge package. \" + \"If you want to use Babel 6.x, install 'babel-loader@7'.\");\n}\nconst {\n  version\n} = require(\"../package.json\");\nconst cache = require(\"./cache\");\nconst transform = require(\"./transform\");\nconst injectCaller = require(\"./injectCaller\");\nconst schema = require(\"./schema\");\nconst {\n  isAbsolute\n} = require(\"path\");\nconst validateOptions = require(\"schema-utils\").validate;\nfunction subscribe(subscriber, metadata, context) {\n  if (context[subscriber]) {\n    context[subscriber](metadata);\n  }\n}\nmodule.exports = makeLoader();\nmodule.exports.custom = makeLoader;\nfunction makeLoader(callback) {\n  const overrides = callback ? callback(babel) : undefined;\n  return function (source, inputSourceMap) {\n    // Make the loader async\n    const callback = this.async();\n    loader.call(this, source, inputSourceMap, overrides).then(args => callback(null, ...args), err => callback(err));\n  };\n}\nasync function loader(source, inputSourceMap, overrides) {\n  const filename = this.resourcePath;\n  let loaderOptions = this.getOptions();\n  validateOptions(schema, loaderOptions, {\n    name: \"Babel loader\"\n  });\n  if (loaderOptions.customize != null) {\n    if (typeof loaderOptions.customize !== \"string\") {\n      throw new Error(\"Customized loaders must be implemented as standalone modules.\");\n    }\n    if (!isAbsolute(loaderOptions.customize)) {\n      throw new Error(\"Customized loaders must be passed as absolute paths, since \" + \"babel-loader has no way to know what they would be relative to.\");\n    }\n    if (overrides) {\n      throw new Error(\"babel-loader's 'customize' option is not available when already \" + \"using a customized babel-loader wrapper.\");\n    }\n    let override = require(loaderOptions.customize);\n    if (override.__esModule) override = override.default;\n    if (typeof override !== \"function\") {\n      throw new Error(\"Custom overrides must be functions.\");\n    }\n    overrides = override(babel);\n  }\n  let customOptions;\n  if (overrides && overrides.customOptions) {\n    const result = await overrides.customOptions.call(this, loaderOptions, {\n      source,\n      map: inputSourceMap\n    });\n    customOptions = result.custom;\n    loaderOptions = result.loader;\n  }\n\n  // Deprecation handling\n  if (\"forceEnv\" in loaderOptions) {\n    console.warn(\"The option `forceEnv` has been removed in favor of `envName` in Babel 7.\");\n  }\n  if (typeof loaderOptions.babelrc === \"string\") {\n    console.warn(\"The option `babelrc` should not be set to a string anymore in the babel-loader config. \" + \"Please update your configuration and set `babelrc` to true or false.\\n\" + \"If you want to specify a specific babel config file to inherit config from \" + \"please use the `extends` option.\\nFor more information about this options see \" + \"https://babeljs.io/docs/core-packages/#options\");\n  }\n\n  // Standardize on 'sourceMaps' as the key passed through to Webpack, so that\n  // users may safely use either one alongside our default use of\n  // 'this.sourceMap' below without getting error about conflicting aliases.\n  if (Object.prototype.hasOwnProperty.call(loaderOptions, \"sourceMap\") && !Object.prototype.hasOwnProperty.call(loaderOptions, \"sourceMaps\")) {\n    loaderOptions = Object.assign({}, loaderOptions, {\n      sourceMaps: loaderOptions.sourceMap\n    });\n    delete loaderOptions.sourceMap;\n  }\n  const programmaticOptions = Object.assign({}, loaderOptions, {\n    filename,\n    inputSourceMap: inputSourceMap || loaderOptions.inputSourceMap,\n    // Set the default sourcemap behavior based on Webpack's mapping flag,\n    // but allow users to override if they want.\n    sourceMaps: loaderOptions.sourceMaps === undefined ? this.sourceMap : loaderOptions.sourceMaps,\n    // Ensure that Webpack will get a full absolute path in the sourcemap\n    // so that it can properly map the module back to its internal cached\n    // modules.\n    sourceFileName: filename\n  });\n  // Remove loader related options\n  delete programmaticOptions.customize;\n  delete programmaticOptions.cacheDirectory;\n  delete programmaticOptions.cacheIdentifier;\n  delete programmaticOptions.cacheCompression;\n  delete programmaticOptions.metadataSubscribers;\n  const config = await babel.loadPartialConfigAsync(injectCaller(programmaticOptions, this.target));\n  if (config) {\n    let options = config.options;\n    if (overrides && overrides.config) {\n      options = await overrides.config.call(this, config, {\n        source,\n        map: inputSourceMap,\n        customOptions\n      });\n    }\n    if (options.sourceMaps === \"inline\") {\n      // Babel has this weird behavior where if you set \"inline\", we\n      // inline the sourcemap, and set 'result.map = null'. This results\n      // in bad behavior from Babel since the maps get put into the code,\n      // which Webpack does not expect, and because the map we return to\n      // Webpack is null, which is also bad. To avoid that, we override the\n      // behavior here so \"inline\" just behaves like 'true'.\n      options.sourceMaps = true;\n    }\n    const {\n      cacheDirectory = null,\n      cacheIdentifier = JSON.stringify({\n        options,\n        \"@babel/core\": transform.version,\n        \"@babel/loader\": version\n      }),\n      cacheCompression = true,\n      metadataSubscribers = []\n    } = loaderOptions;\n    let result;\n    if (cacheDirectory) {\n      result = await cache({\n        source,\n        options,\n        transform,\n        cacheDirectory,\n        cacheIdentifier,\n        cacheCompression\n      });\n    } else {\n      result = await transform(source, options);\n    }\n    config.files.forEach(configFile => this.addDependency(configFile));\n    if (result) {\n      if (overrides && overrides.result) {\n        result = await overrides.result.call(this, result, {\n          source,\n          map: inputSourceMap,\n          customOptions,\n          config,\n          options\n        });\n      }\n      const {\n        code,\n        map,\n        metadata,\n        externalDependencies\n      } = result;\n      externalDependencies == null ? void 0 : externalDependencies.forEach(dep => this.addDependency(dep));\n      metadataSubscribers.forEach(subscriber => {\n        subscribe(subscriber, metadata, this);\n      });\n      return [code, map];\n    }\n  }\n\n  // If the file was ignored, pass through the original content.\n  return [source, inputSourceMap];\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}