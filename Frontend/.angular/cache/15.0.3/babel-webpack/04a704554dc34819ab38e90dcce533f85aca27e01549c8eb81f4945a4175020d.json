{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Browser = void 0;\nconst dns_txt_1 = __importDefault(require(\"./dns-txt\"));\nconst dns_equal_1 = __importDefault(require(\"dns-equal\"));\nconst events_1 = require(\"events\");\nconst service_types_1 = require(\"./service-types\");\nconst filter_service_1 = __importDefault(require(\"./utils/filter-service\"));\nconst filter_txt_1 = __importDefault(require(\"./utils/filter-txt\"));\nconst TLD = '.local';\nconst WILDCARD = '_services._dns-sd._udp' + TLD;\nclass Browser extends events_1.EventEmitter {\n  constructor(mdns, opts, onup) {\n    super();\n    this.onresponse = null;\n    this.serviceMap = {};\n    this.wildcard = false;\n    this._services = [];\n    if (typeof opts === 'function') return new Browser(mdns, null, opts);\n    this.mdns = mdns;\n    if (opts != null && opts.txt != null) {\n      this.txt = new dns_txt_1.default(opts.txt);\n    } else {\n      this.txt = new dns_txt_1.default();\n    }\n    if (!opts || !opts.type) {\n      this.name = WILDCARD;\n      this.wildcard = true;\n    } else {\n      this.name = (0, service_types_1.toString)({\n        name: opts.type,\n        protocol: opts.protocol || 'tcp'\n      }) + TLD;\n      if (opts.name) this.name = opts.name + '.' + this.name;\n      this.wildcard = false;\n    }\n    if (opts != null && opts.txt !== undefined) this.txtQuery = (0, filter_txt_1.default)(opts.txt);\n    if (onup) this.on('up', onup);\n    this.start();\n  }\n  start() {\n    if (this.onresponse || this.name === undefined) return;\n    var self = this;\n    var nameMap = {};\n    if (!this.wildcard) nameMap[this.name] = true;\n    this.onresponse = (packet, rinfo) => {\n      if (self.wildcard) {\n        packet.answers.forEach(answer => {\n          if (answer.type !== 'PTR' || answer.name !== self.name || answer.name in nameMap) return;\n          nameMap[answer.data] = true;\n          self.mdns.query(answer.data, 'PTR');\n        });\n      }\n      Object.keys(nameMap).forEach(function (name) {\n        self.goodbyes(name, packet).forEach(self.removeService.bind(self));\n        var matches = self.buildServicesFor(name, packet, self.txt, rinfo);\n        if (matches.length === 0) return;\n        matches.forEach(service => {\n          if (self.serviceMap[service.fqdn]) return;\n          self.addService(service);\n        });\n      });\n    };\n    this.mdns.on('response', this.onresponse);\n    this.update();\n  }\n  stop() {\n    if (!this.onresponse) return;\n    this.mdns.removeListener('response', this.onresponse);\n    this.onresponse = null;\n  }\n  update() {\n    this.mdns.query(this.name, 'PTR');\n  }\n  get services() {\n    return this._services;\n  }\n  addService(service) {\n    if ((0, filter_service_1.default)(service, this.txtQuery) === false) return;\n    this._services.push(service);\n    this.serviceMap[service.fqdn] = true;\n    this.emit('up', service);\n  }\n  removeService(fqdn) {\n    var service, index;\n    this._services.some(function (s, i) {\n      if ((0, dns_equal_1.default)(s.fqdn, fqdn)) {\n        service = s;\n        index = i;\n        return true;\n      }\n    });\n    if (!service || index === undefined) return;\n    this._services.splice(index, 1);\n    delete this.serviceMap[fqdn];\n    this.emit('down', service);\n  }\n  goodbyes(name, packet) {\n    return packet.answers.concat(packet.additionals).filter(rr => rr.type === 'PTR' && rr.ttl === 0 && (0, dns_equal_1.default)(rr.name, name)).map(rr => rr.data);\n  }\n  buildServicesFor(name, packet, txt, referer) {\n    var records = packet.answers.concat(packet.additionals).filter(rr => rr.ttl > 0);\n    return records.filter(rr => rr.type === 'PTR' && (0, dns_equal_1.default)(rr.name, name)).map(ptr => {\n      const service = {\n        addresses: []\n      };\n      records.filter(rr => {\n        return (rr.type === 'SRV' || rr.type === 'TXT') && (0, dns_equal_1.default)(rr.name, ptr.data);\n      }).forEach(rr => {\n        if (rr.type === 'SRV') {\n          var parts = rr.name.split('.');\n          var name = parts[0];\n          var types = (0, service_types_1.toType)(parts.slice(1, -1).join('.'));\n          service.name = name;\n          service.fqdn = rr.name;\n          service.host = rr.data.target;\n          service.referer = referer;\n          service.port = rr.data.port;\n          service.type = types.name;\n          service.protocol = types.protocol;\n          service.subtypes = types.subtypes;\n        } else if (rr.type === 'TXT') {\n          service.rawTxt = rr.data;\n          service.txt = this.txt.decodeAll(rr.data);\n        }\n      });\n      if (!service.name) return;\n      records.filter(rr => (rr.type === 'A' || rr.type === 'AAAA') && (0, dns_equal_1.default)(rr.name, service.host)).forEach(rr => service.addresses.push(rr.data));\n      return service;\n    }).filter(rr => !!rr);\n  }\n}\nexports.Browser = Browser;\nexports.default = Browser;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Browser","dns_txt_1","require","dns_equal_1","events_1","service_types_1","filter_service_1","filter_txt_1","TLD","WILDCARD","EventEmitter","constructor","mdns","opts","onup","onresponse","serviceMap","wildcard","_services","txt","default","type","name","toString","protocol","undefined","txtQuery","on","start","self","nameMap","packet","rinfo","answers","forEach","answer","data","query","keys","goodbyes","removeService","bind","matches","buildServicesFor","length","service","fqdn","addService","update","stop","removeListener","services","push","emit","index","some","s","i","splice","concat","additionals","filter","rr","ttl","map","referer","records","ptr","addresses","parts","split","types","toType","slice","join","host","target","port","subtypes","rawTxt","decodeAll"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/bonjour-service/dist/lib/browser.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Browser = void 0;\nconst dns_txt_1 = __importDefault(require(\"./dns-txt\"));\nconst dns_equal_1 = __importDefault(require(\"dns-equal\"));\nconst events_1 = require(\"events\");\nconst service_types_1 = require(\"./service-types\");\nconst filter_service_1 = __importDefault(require(\"./utils/filter-service\"));\nconst filter_txt_1 = __importDefault(require(\"./utils/filter-txt\"));\nconst TLD = '.local';\nconst WILDCARD = '_services._dns-sd._udp' + TLD;\nclass Browser extends events_1.EventEmitter {\n    constructor(mdns, opts, onup) {\n        super();\n        this.onresponse = null;\n        this.serviceMap = {};\n        this.wildcard = false;\n        this._services = [];\n        if (typeof opts === 'function')\n            return new Browser(mdns, null, opts);\n        this.mdns = mdns;\n        if (opts != null && opts.txt != null) {\n            this.txt = new dns_txt_1.default(opts.txt);\n        }\n        else {\n            this.txt = new dns_txt_1.default();\n        }\n        if (!opts || !opts.type) {\n            this.name = WILDCARD;\n            this.wildcard = true;\n        }\n        else {\n            this.name = (0, service_types_1.toString)({ name: opts.type, protocol: opts.protocol || 'tcp' }) + TLD;\n            if (opts.name)\n                this.name = opts.name + '.' + this.name;\n            this.wildcard = false;\n        }\n        if (opts != null && opts.txt !== undefined)\n            this.txtQuery = (0, filter_txt_1.default)(opts.txt);\n        if (onup)\n            this.on('up', onup);\n        this.start();\n    }\n    start() {\n        if (this.onresponse || this.name === undefined)\n            return;\n        var self = this;\n        var nameMap = {};\n        if (!this.wildcard)\n            nameMap[this.name] = true;\n        this.onresponse = (packet, rinfo) => {\n            if (self.wildcard) {\n                packet.answers.forEach((answer) => {\n                    if (answer.type !== 'PTR' || answer.name !== self.name || answer.name in nameMap)\n                        return;\n                    nameMap[answer.data] = true;\n                    self.mdns.query(answer.data, 'PTR');\n                });\n            }\n            Object.keys(nameMap).forEach(function (name) {\n                self.goodbyes(name, packet).forEach(self.removeService.bind(self));\n                var matches = self.buildServicesFor(name, packet, self.txt, rinfo);\n                if (matches.length === 0)\n                    return;\n                matches.forEach((service) => {\n                    if (self.serviceMap[service.fqdn])\n                        return;\n                    self.addService(service);\n                });\n            });\n        };\n        this.mdns.on('response', this.onresponse);\n        this.update();\n    }\n    stop() {\n        if (!this.onresponse)\n            return;\n        this.mdns.removeListener('response', this.onresponse);\n        this.onresponse = null;\n    }\n    update() {\n        this.mdns.query(this.name, 'PTR');\n    }\n    get services() {\n        return this._services;\n    }\n    addService(service) {\n        if ((0, filter_service_1.default)(service, this.txtQuery) === false)\n            return;\n        this._services.push(service);\n        this.serviceMap[service.fqdn] = true;\n        this.emit('up', service);\n    }\n    removeService(fqdn) {\n        var service, index;\n        this._services.some(function (s, i) {\n            if ((0, dns_equal_1.default)(s.fqdn, fqdn)) {\n                service = s;\n                index = i;\n                return true;\n            }\n        });\n        if (!service || index === undefined)\n            return;\n        this._services.splice(index, 1);\n        delete this.serviceMap[fqdn];\n        this.emit('down', service);\n    }\n    goodbyes(name, packet) {\n        return packet.answers.concat(packet.additionals)\n            .filter((rr) => rr.type === 'PTR' && rr.ttl === 0 && (0, dns_equal_1.default)(rr.name, name))\n            .map((rr) => rr.data);\n    }\n    buildServicesFor(name, packet, txt, referer) {\n        var records = packet.answers.concat(packet.additionals).filter((rr) => rr.ttl > 0);\n        return records\n            .filter((rr) => rr.type === 'PTR' && (0, dns_equal_1.default)(rr.name, name))\n            .map((ptr) => {\n            const service = {\n                addresses: []\n            };\n            records\n                .filter((rr) => {\n                return (rr.type === 'SRV' || rr.type === 'TXT') && (0, dns_equal_1.default)(rr.name, ptr.data);\n            })\n                .forEach((rr) => {\n                if (rr.type === 'SRV') {\n                    var parts = rr.name.split('.');\n                    var name = parts[0];\n                    var types = (0, service_types_1.toType)(parts.slice(1, -1).join('.'));\n                    service.name = name;\n                    service.fqdn = rr.name;\n                    service.host = rr.data.target;\n                    service.referer = referer;\n                    service.port = rr.data.port;\n                    service.type = types.name;\n                    service.protocol = types.protocol;\n                    service.subtypes = types.subtypes;\n                }\n                else if (rr.type === 'TXT') {\n                    service.rawTxt = rr.data;\n                    service.txt = this.txt.decodeAll(rr.data);\n                }\n            });\n            if (!service.name)\n                return;\n            records\n                .filter((rr) => (rr.type === 'A' || rr.type === 'AAAA') && (0, dns_equal_1.default)(rr.name, service.host))\n                .forEach((rr) => service.addresses.push(rr.data));\n            return service;\n        })\n            .filter((rr) => !!rr);\n    }\n}\nexports.Browser = Browser;\nexports.default = Browser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}