{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.markAsyncChunksNonInitial = void 0;\n/**\n * Webpack stats may incorrectly mark extra entry points `initial` chunks, when\n * they are actually loaded asynchronously and thus not in the main bundle. This\n * function finds extra entry points in Webpack stats and corrects this value\n * whereever necessary. Does not modify {@param webpackStats}.\n */\nfunction markAsyncChunksNonInitial(webpackStats, extraEntryPoints) {\n  const {\n    chunks = [],\n    entrypoints: entryPoints = {}\n  } = webpackStats;\n  // Find all Webpack chunk IDs not injected into the main bundle. We don't have\n  // to worry about transitive dependencies because extra entry points cannot be\n  // depended upon in Webpack, thus any extra entry point with `inject: false`,\n  // **cannot** be loaded in main bundle.\n  const asyncChunkIds = extraEntryPoints.filter(entryPoint => !entryPoint.inject && entryPoints[entryPoint.bundleName]).flatMap(entryPoint => {\n    var _a;\n    return (_a = entryPoints[entryPoint.bundleName].chunks) === null || _a === void 0 ? void 0 : _a.filter(n => n !== 'runtime');\n  });\n  // Find chunks for each ID.\n  const asyncChunks = asyncChunkIds.map(chunkId => {\n    const chunk = chunks.find(chunk => chunk.id === chunkId);\n    if (!chunk) {\n      throw new Error(`Failed to find chunk (${chunkId}) in set:\\n${JSON.stringify(chunks)}`);\n    }\n    return chunk;\n  });\n  // A chunk is considered `initial` only if Webpack already belives it to be initial\n  // and the application developer did not mark it async via an extra entry point.\n  return chunks.map(chunk => {\n    return asyncChunks.find(asyncChunk => asyncChunk === chunk) ? {\n      ...chunk,\n      initial: false\n    } : chunk;\n  });\n}\nexports.markAsyncChunksNonInitial = markAsyncChunksNonInitial;","map":{"version":3,"names":["Object","defineProperty","exports","value","markAsyncChunksNonInitial","webpackStats","extraEntryPoints","chunks","entrypoints","entryPoints","asyncChunkIds","filter","entryPoint","inject","bundleName","flatMap","_a","n","asyncChunks","map","chunkId","chunk","find","id","Error","JSON","stringify","asyncChunk","initial"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/webpack/utils/async-chunks.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.markAsyncChunksNonInitial = void 0;\n/**\n * Webpack stats may incorrectly mark extra entry points `initial` chunks, when\n * they are actually loaded asynchronously and thus not in the main bundle. This\n * function finds extra entry points in Webpack stats and corrects this value\n * whereever necessary. Does not modify {@param webpackStats}.\n */\nfunction markAsyncChunksNonInitial(webpackStats, extraEntryPoints) {\n    const { chunks = [], entrypoints: entryPoints = {} } = webpackStats;\n    // Find all Webpack chunk IDs not injected into the main bundle. We don't have\n    // to worry about transitive dependencies because extra entry points cannot be\n    // depended upon in Webpack, thus any extra entry point with `inject: false`,\n    // **cannot** be loaded in main bundle.\n    const asyncChunkIds = extraEntryPoints\n        .filter((entryPoint) => !entryPoint.inject && entryPoints[entryPoint.bundleName])\n        .flatMap((entryPoint) => { var _a; return (_a = entryPoints[entryPoint.bundleName].chunks) === null || _a === void 0 ? void 0 : _a.filter((n) => n !== 'runtime'); });\n    // Find chunks for each ID.\n    const asyncChunks = asyncChunkIds.map((chunkId) => {\n        const chunk = chunks.find((chunk) => chunk.id === chunkId);\n        if (!chunk) {\n            throw new Error(`Failed to find chunk (${chunkId}) in set:\\n${JSON.stringify(chunks)}`);\n        }\n        return chunk;\n    });\n    // A chunk is considered `initial` only if Webpack already belives it to be initial\n    // and the application developer did not mark it async via an extra entry point.\n    return chunks.map((chunk) => {\n        return asyncChunks.find((asyncChunk) => asyncChunk === chunk)\n            ? {\n                ...chunk,\n                initial: false,\n            }\n            : chunk;\n    });\n}\nexports.markAsyncChunksNonInitial = markAsyncChunksNonInitial;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,yBAAyB,GAAG,KAAK,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,yBAAyB,CAACC,YAAY,EAAEC,gBAAgB,EAAE;EAC/D,MAAM;IAAEC,MAAM,GAAG,EAAE;IAAEC,WAAW,EAAEC,WAAW,GAAG,CAAC;EAAE,CAAC,GAAGJ,YAAY;EACnE;EACA;EACA;EACA;EACA,MAAMK,aAAa,GAAGJ,gBAAgB,CACjCK,MAAM,CAAEC,UAAU,IAAK,CAACA,UAAU,CAACC,MAAM,IAAIJ,WAAW,CAACG,UAAU,CAACE,UAAU,CAAC,CAAC,CAChFC,OAAO,CAAEH,UAAU,IAAK;IAAE,IAAII,EAAE;IAAE,OAAO,CAACA,EAAE,GAAGP,WAAW,CAACG,UAAU,CAACE,UAAU,CAAC,CAACP,MAAM,MAAM,IAAI,IAAIS,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACL,MAAM,CAAEM,CAAC,IAAKA,CAAC,KAAK,SAAS,CAAC;EAAE,CAAC,CAAC;EACzK;EACA,MAAMC,WAAW,GAAGR,aAAa,CAACS,GAAG,CAAEC,OAAO,IAAK;IAC/C,MAAMC,KAAK,GAAGd,MAAM,CAACe,IAAI,CAAED,KAAK,IAAKA,KAAK,CAACE,EAAE,KAAKH,OAAO,CAAC;IAC1D,IAAI,CAACC,KAAK,EAAE;MACR,MAAM,IAAIG,KAAK,CAAE,yBAAwBJ,OAAQ,cAAaK,IAAI,CAACC,SAAS,CAACnB,MAAM,CAAE,EAAC,CAAC;IAC3F;IACA,OAAOc,KAAK;EAChB,CAAC,CAAC;EACF;EACA;EACA,OAAOd,MAAM,CAACY,GAAG,CAAEE,KAAK,IAAK;IACzB,OAAOH,WAAW,CAACI,IAAI,CAAEK,UAAU,IAAKA,UAAU,KAAKN,KAAK,CAAC,GACvD;MACE,GAAGA,KAAK;MACRO,OAAO,EAAE;IACb,CAAC,GACCP,KAAK;EACf,CAAC,CAAC;AACN;AACAnB,OAAO,CAACE,yBAAyB,GAAGA,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}