{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WatchFilesLogsPlugin = void 0;\nconst PLUGIN_NAME = 'angular.watch-files-logs-plugin';\nclass WatchFilesLogsPlugin {\n  apply(compiler) {\n    compiler.hooks.watchRun.tap(PLUGIN_NAME, ({\n      modifiedFiles,\n      removedFiles\n    }) => {\n      compiler.hooks.compilation.tap(PLUGIN_NAME, compilation => {\n        const logger = compilation.getLogger(PLUGIN_NAME);\n        if (modifiedFiles === null || modifiedFiles === void 0 ? void 0 : modifiedFiles.size) {\n          logger.log(`Modified files:\\n${[...modifiedFiles].join('\\n')}\\n`);\n        }\n        if (removedFiles === null || removedFiles === void 0 ? void 0 : removedFiles.size) {\n          logger.log(`Removed files:\\n${[...removedFiles].join('\\n')}\\n`);\n        }\n      });\n    });\n  }\n}\nexports.WatchFilesLogsPlugin = WatchFilesLogsPlugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","WatchFilesLogsPlugin","PLUGIN_NAME","apply","compiler","hooks","watchRun","tap","modifiedFiles","removedFiles","compilation","logger","getLogger","size","log","join"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/webpack/plugins/watch-files-logs-plugin.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WatchFilesLogsPlugin = void 0;\nconst PLUGIN_NAME = 'angular.watch-files-logs-plugin';\nclass WatchFilesLogsPlugin {\n    apply(compiler) {\n        compiler.hooks.watchRun.tap(PLUGIN_NAME, ({ modifiedFiles, removedFiles }) => {\n            compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation) => {\n                const logger = compilation.getLogger(PLUGIN_NAME);\n                if (modifiedFiles === null || modifiedFiles === void 0 ? void 0 : modifiedFiles.size) {\n                    logger.log(`Modified files:\\n${[...modifiedFiles].join('\\n')}\\n`);\n                }\n                if (removedFiles === null || removedFiles === void 0 ? void 0 : removedFiles.size) {\n                    logger.log(`Removed files:\\n${[...removedFiles].join('\\n')}\\n`);\n                }\n            });\n        });\n    }\n}\nexports.WatchFilesLogsPlugin = WatchFilesLogsPlugin;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,oBAAoB,GAAG,KAAK,CAAC;AACrC,MAAMC,WAAW,GAAG,iCAAiC;AACrD,MAAMD,oBAAoB,CAAC;EACvBE,KAAK,CAACC,QAAQ,EAAE;IACZA,QAAQ,CAACC,KAAK,CAACC,QAAQ,CAACC,GAAG,CAACL,WAAW,EAAE,CAAC;MAAEM,aAAa;MAAEC;IAAa,CAAC,KAAK;MAC1EL,QAAQ,CAACC,KAAK,CAACK,WAAW,CAACH,GAAG,CAACL,WAAW,EAAGQ,WAAW,IAAK;QACzD,MAAMC,MAAM,GAAGD,WAAW,CAACE,SAAS,CAACV,WAAW,CAAC;QACjD,IAAIM,aAAa,KAAK,IAAI,IAAIA,aAAa,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACK,IAAI,EAAE;UAClFF,MAAM,CAACG,GAAG,CAAE,oBAAmB,CAAC,GAAGN,aAAa,CAAC,CAACO,IAAI,CAAC,IAAI,CAAE,IAAG,CAAC;QACrE;QACA,IAAIN,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACI,IAAI,EAAE;UAC/EF,MAAM,CAACG,GAAG,CAAE,mBAAkB,CAAC,GAAGL,YAAY,CAAC,CAACM,IAAI,CAAC,IAAI,CAAE,IAAG,CAAC;QACnE;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN;AACJ;AACAhB,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}