{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loader;\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _options = _interopRequireDefault(require(\"./options.json\"));\nvar _utils = require(\"./utils\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nfunction loader(_x, _x2) {\n  return _loader.apply(this, arguments);\n}\nfunction _loader() {\n  _loader = _asyncToGenerator(function* (input, inputMap) {\n    var _this = this;\n    const options = this.getOptions(_options.default);\n    const {\n      sourceMappingURL,\n      replacementString\n    } = (0, _utils.getSourceMappingURL)(input);\n    const callback = this.async();\n    if (!sourceMappingURL) {\n      callback(null, input, inputMap);\n      return;\n    }\n    let behaviourSourceMappingUrl;\n    try {\n      behaviourSourceMappingUrl = typeof options.filterSourceMappingUrl !== \"undefined\" ? options.filterSourceMappingUrl(sourceMappingURL, this.resourcePath) : \"consume\";\n    } catch (error) {\n      callback(error);\n      return;\n    } // eslint-disable-next-line default-case\n\n    switch (behaviourSourceMappingUrl) {\n      case \"skip\":\n        callback(null, input, inputMap);\n        return;\n      case false:\n      case \"remove\":\n        callback(null, input.replace(replacementString, \"\"), inputMap);\n        return;\n    }\n    let sourceURL;\n    let sourceContent;\n    try {\n      ({\n        sourceURL,\n        sourceContent\n      } = yield (0, _utils.fetchFromURL)(this, this.context, sourceMappingURL));\n    } catch (error) {\n      this.emitWarning(error);\n      callback(null, input, inputMap);\n      return;\n    }\n    if (sourceURL) {\n      this.addDependency(sourceURL);\n    }\n    let map;\n    try {\n      map = JSON.parse(sourceContent.replace(/^\\)\\]\\}'/, \"\"));\n    } catch (parseError) {\n      this.emitWarning(new Error(`Failed to parse source map from '${sourceMappingURL}': ${parseError}`));\n      callback(null, input, inputMap);\n      return;\n    }\n    const context = sourceURL ? _path.default.dirname(sourceURL) : this.context;\n    if (map.sections) {\n      // eslint-disable-next-line no-param-reassign\n      map = yield (0, _utils.flattenSourceMap)(map);\n    }\n    const resolvedSources = yield Promise.all(map.sources.map( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (source, i) {\n        // eslint-disable-next-line no-shadow\n        let sourceURL; // eslint-disable-next-line no-shadow\n\n        let sourceContent;\n        const originalSourceContent = map.sourcesContent && typeof map.sourcesContent[i] !== \"undefined\" && map.sourcesContent[i] !== null ? map.sourcesContent[i] :\n        // eslint-disable-next-line no-undefined\n        undefined;\n        const skipReading = typeof originalSourceContent !== \"undefined\";\n        let errored = false; // We do not skipReading here, because we need absolute paths in sources.\n        // This is necessary so that for sourceMaps with the same file structure in sources, name collisions do not occur.\n        // https://github.com/webpack-contrib/source-map-loader/issues/51\n\n        try {\n          ({\n            sourceURL,\n            sourceContent\n          } = yield (0, _utils.fetchFromURL)(_this, context, source, map.sourceRoot, skipReading));\n        } catch (error) {\n          errored = true;\n          _this.emitWarning(error);\n        }\n        if (skipReading) {\n          sourceContent = originalSourceContent;\n        } else if (!errored && sourceURL && !(0, _utils.isURL)(sourceURL)) {\n          _this.addDependency(sourceURL);\n        } // Return original value of `source` when error happens\n\n        return {\n          sourceURL: errored ? source : sourceURL,\n          sourceContent\n        };\n      });\n      return function (_x3, _x4) {\n        return _ref.apply(this, arguments);\n      };\n    }()));\n    const newMap = {\n      ...map\n    };\n    newMap.sources = [];\n    newMap.sourcesContent = [];\n    delete newMap.sourceRoot;\n    resolvedSources.forEach(source => {\n      // eslint-disable-next-line no-shadow\n      const {\n        sourceURL,\n        sourceContent\n      } = source;\n      newMap.sources.push(sourceURL || \"\");\n      newMap.sourcesContent.push(sourceContent || \"\");\n    });\n    const sourcesContentIsEmpty = newMap.sourcesContent.filter(entry => Boolean(entry)).length === 0;\n    if (sourcesContentIsEmpty) {\n      delete newMap.sourcesContent;\n    }\n    callback(null, input.replace(replacementString, \"\"), newMap);\n  });\n  return _loader.apply(this, arguments);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","loader","_path","_interopRequireDefault","require","_options","_utils","obj","__esModule","input","inputMap","options","getOptions","sourceMappingURL","replacementString","getSourceMappingURL","callback","async","behaviourSourceMappingUrl","filterSourceMappingUrl","resourcePath","error","replace","sourceURL","sourceContent","fetchFromURL","context","emitWarning","addDependency","map","JSON","parse","parseError","Error","dirname","sections","flattenSourceMap","resolvedSources","Promise","all","sources","source","i","originalSourceContent","sourcesContent","undefined","skipReading","errored","sourceRoot","isURL","newMap","forEach","push","sourcesContentIsEmpty","filter","entry","Boolean","length"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/source-map-loader/dist/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loader;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nasync function loader(input, inputMap) {\n  const options = this.getOptions(_options.default);\n  const {\n    sourceMappingURL,\n    replacementString\n  } = (0, _utils.getSourceMappingURL)(input);\n  const callback = this.async();\n\n  if (!sourceMappingURL) {\n    callback(null, input, inputMap);\n    return;\n  }\n\n  let behaviourSourceMappingUrl;\n\n  try {\n    behaviourSourceMappingUrl = typeof options.filterSourceMappingUrl !== \"undefined\" ? options.filterSourceMappingUrl(sourceMappingURL, this.resourcePath) : \"consume\";\n  } catch (error) {\n    callback(error);\n    return;\n  } // eslint-disable-next-line default-case\n\n\n  switch (behaviourSourceMappingUrl) {\n    case \"skip\":\n      callback(null, input, inputMap);\n      return;\n\n    case false:\n    case \"remove\":\n      callback(null, input.replace(replacementString, \"\"), inputMap);\n      return;\n  }\n\n  let sourceURL;\n  let sourceContent;\n\n  try {\n    ({\n      sourceURL,\n      sourceContent\n    } = await (0, _utils.fetchFromURL)(this, this.context, sourceMappingURL));\n  } catch (error) {\n    this.emitWarning(error);\n    callback(null, input, inputMap);\n    return;\n  }\n\n  if (sourceURL) {\n    this.addDependency(sourceURL);\n  }\n\n  let map;\n\n  try {\n    map = JSON.parse(sourceContent.replace(/^\\)\\]\\}'/, \"\"));\n  } catch (parseError) {\n    this.emitWarning(new Error(`Failed to parse source map from '${sourceMappingURL}': ${parseError}`));\n    callback(null, input, inputMap);\n    return;\n  }\n\n  const context = sourceURL ? _path.default.dirname(sourceURL) : this.context;\n\n  if (map.sections) {\n    // eslint-disable-next-line no-param-reassign\n    map = await (0, _utils.flattenSourceMap)(map);\n  }\n\n  const resolvedSources = await Promise.all(map.sources.map(async (source, i) => {\n    // eslint-disable-next-line no-shadow\n    let sourceURL; // eslint-disable-next-line no-shadow\n\n    let sourceContent;\n    const originalSourceContent = map.sourcesContent && typeof map.sourcesContent[i] !== \"undefined\" && map.sourcesContent[i] !== null ? map.sourcesContent[i] : // eslint-disable-next-line no-undefined\n    undefined;\n    const skipReading = typeof originalSourceContent !== \"undefined\";\n    let errored = false; // We do not skipReading here, because we need absolute paths in sources.\n    // This is necessary so that for sourceMaps with the same file structure in sources, name collisions do not occur.\n    // https://github.com/webpack-contrib/source-map-loader/issues/51\n\n    try {\n      ({\n        sourceURL,\n        sourceContent\n      } = await (0, _utils.fetchFromURL)(this, context, source, map.sourceRoot, skipReading));\n    } catch (error) {\n      errored = true;\n      this.emitWarning(error);\n    }\n\n    if (skipReading) {\n      sourceContent = originalSourceContent;\n    } else if (!errored && sourceURL && !(0, _utils.isURL)(sourceURL)) {\n      this.addDependency(sourceURL);\n    } // Return original value of `source` when error happens\n\n\n    return {\n      sourceURL: errored ? source : sourceURL,\n      sourceContent\n    };\n  }));\n  const newMap = { ...map\n  };\n  newMap.sources = [];\n  newMap.sourcesContent = [];\n  delete newMap.sourceRoot;\n  resolvedSources.forEach(source => {\n    // eslint-disable-next-line no-shadow\n    const {\n      sourceURL,\n      sourceContent\n    } = source;\n    newMap.sources.push(sourceURL || \"\");\n    newMap.sourcesContent.push(sourceContent || \"\");\n  });\n  const sourcesContentIsEmpty = newMap.sourcesContent.filter(entry => Boolean(entry)).length === 0;\n\n  if (sourcesContentIsEmpty) {\n    delete newMap.sourcesContent;\n  }\n\n  callback(null, input.replace(replacementString, \"\"), newMap);\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}