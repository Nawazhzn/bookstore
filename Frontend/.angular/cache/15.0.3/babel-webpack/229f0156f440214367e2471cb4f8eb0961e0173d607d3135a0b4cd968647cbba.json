{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DevToolsIgnorePlugin = void 0;\nconst webpack_1 = require(\"webpack\");\n// Following the naming conventions from\n// https://sourcemaps.info/spec.html#h.ghqpj1ytqjbm\nconst IGNORE_LIST = 'x_google_ignoreList';\nconst PLUGIN_NAME = 'devtools-ignore-plugin';\n/**\n * This plugin adds a field to source maps that identifies which sources are\n * vendored or runtime-injected (aka third-party) sources. These are consumed by\n * Chrome DevTools to automatically ignore-list sources.\n */\nclass DevToolsIgnorePlugin {\n  apply(compiler) {\n    const {\n      RawSource\n    } = compiler.webpack.sources;\n    compiler.hooks.compilation.tap(PLUGIN_NAME, compilation => {\n      compilation.hooks.processAssets.tap({\n        name: PLUGIN_NAME,\n        stage: webpack_1.Compilation.PROCESS_ASSETS_STAGE_DEV_TOOLING,\n        additionalAssets: true\n      }, assets => {\n        for (const [name, asset] of Object.entries(assets)) {\n          // Instead of using `asset.map()` to fetch the source maps from\n          // SourceMapSource assets, process them directly as a RawSource.\n          // This is because `.map()` is slow and can take several seconds.\n          if (!name.endsWith('.map')) {\n            // Ignore non source map files.\n            continue;\n          }\n          const mapContent = asset.source().toString();\n          if (!mapContent) {\n            continue;\n          }\n          const map = JSON.parse(mapContent);\n          const ignoreList = [];\n          for (const [index, path] of map.sources.entries()) {\n            if (path.includes('/node_modules/') || path.startsWith('webpack/')) {\n              ignoreList.push(index);\n            }\n          }\n          map[IGNORE_LIST] = ignoreList;\n          compilation.updateAsset(name, new RawSource(JSON.stringify(map)));\n        }\n      });\n    });\n  }\n}\nexports.DevToolsIgnorePlugin = DevToolsIgnorePlugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","DevToolsIgnorePlugin","webpack_1","require","IGNORE_LIST","PLUGIN_NAME","apply","compiler","RawSource","webpack","sources","hooks","compilation","tap","processAssets","name","stage","Compilation","PROCESS_ASSETS_STAGE_DEV_TOOLING","additionalAssets","assets","asset","entries","endsWith","mapContent","source","toString","map","JSON","parse","ignoreList","index","path","includes","startsWith","push","updateAsset","stringify"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/webpack/plugins/devtools-ignore-plugin.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DevToolsIgnorePlugin = void 0;\nconst webpack_1 = require(\"webpack\");\n// Following the naming conventions from\n// https://sourcemaps.info/spec.html#h.ghqpj1ytqjbm\nconst IGNORE_LIST = 'x_google_ignoreList';\nconst PLUGIN_NAME = 'devtools-ignore-plugin';\n/**\n * This plugin adds a field to source maps that identifies which sources are\n * vendored or runtime-injected (aka third-party) sources. These are consumed by\n * Chrome DevTools to automatically ignore-list sources.\n */\nclass DevToolsIgnorePlugin {\n    apply(compiler) {\n        const { RawSource } = compiler.webpack.sources;\n        compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation) => {\n            compilation.hooks.processAssets.tap({\n                name: PLUGIN_NAME,\n                stage: webpack_1.Compilation.PROCESS_ASSETS_STAGE_DEV_TOOLING,\n                additionalAssets: true,\n            }, (assets) => {\n                for (const [name, asset] of Object.entries(assets)) {\n                    // Instead of using `asset.map()` to fetch the source maps from\n                    // SourceMapSource assets, process them directly as a RawSource.\n                    // This is because `.map()` is slow and can take several seconds.\n                    if (!name.endsWith('.map')) {\n                        // Ignore non source map files.\n                        continue;\n                    }\n                    const mapContent = asset.source().toString();\n                    if (!mapContent) {\n                        continue;\n                    }\n                    const map = JSON.parse(mapContent);\n                    const ignoreList = [];\n                    for (const [index, path] of map.sources.entries()) {\n                        if (path.includes('/node_modules/') || path.startsWith('webpack/')) {\n                            ignoreList.push(index);\n                        }\n                    }\n                    map[IGNORE_LIST] = ignoreList;\n                    compilation.updateAsset(name, new RawSource(JSON.stringify(map)));\n                }\n            });\n        });\n    }\n}\nexports.DevToolsIgnorePlugin = DevToolsIgnorePlugin;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,oBAAoB,GAAG,KAAK,CAAC;AACrC,MAAMC,SAAS,GAAGC,OAAO,CAAC,SAAS,CAAC;AACpC;AACA;AACA,MAAMC,WAAW,GAAG,qBAAqB;AACzC,MAAMC,WAAW,GAAG,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA,MAAMJ,oBAAoB,CAAC;EACvBK,KAAK,CAACC,QAAQ,EAAE;IACZ,MAAM;MAAEC;IAAU,CAAC,GAAGD,QAAQ,CAACE,OAAO,CAACC,OAAO;IAC9CH,QAAQ,CAACI,KAAK,CAACC,WAAW,CAACC,GAAG,CAACR,WAAW,EAAGO,WAAW,IAAK;MACzDA,WAAW,CAACD,KAAK,CAACG,aAAa,CAACD,GAAG,CAAC;QAChCE,IAAI,EAAEV,WAAW;QACjBW,KAAK,EAAEd,SAAS,CAACe,WAAW,CAACC,gCAAgC;QAC7DC,gBAAgB,EAAE;MACtB,CAAC,EAAGC,MAAM,IAAK;QACX,KAAK,MAAM,CAACL,IAAI,EAAEM,KAAK,CAAC,IAAIxB,MAAM,CAACyB,OAAO,CAACF,MAAM,CAAC,EAAE;UAChD;UACA;UACA;UACA,IAAI,CAACL,IAAI,CAACQ,QAAQ,CAAC,MAAM,CAAC,EAAE;YACxB;YACA;UACJ;UACA,MAAMC,UAAU,GAAGH,KAAK,CAACI,MAAM,EAAE,CAACC,QAAQ,EAAE;UAC5C,IAAI,CAACF,UAAU,EAAE;YACb;UACJ;UACA,MAAMG,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;UAClC,MAAMM,UAAU,GAAG,EAAE;UACrB,KAAK,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC,IAAIL,GAAG,CAACjB,OAAO,CAACY,OAAO,EAAE,EAAE;YAC/C,IAAIU,IAAI,CAACC,QAAQ,CAAC,gBAAgB,CAAC,IAAID,IAAI,CAACE,UAAU,CAAC,UAAU,CAAC,EAAE;cAChEJ,UAAU,CAACK,IAAI,CAACJ,KAAK,CAAC;YAC1B;UACJ;UACAJ,GAAG,CAACvB,WAAW,CAAC,GAAG0B,UAAU;UAC7BlB,WAAW,CAACwB,WAAW,CAACrB,IAAI,EAAE,IAAIP,SAAS,CAACoB,IAAI,CAACS,SAAS,CAACV,GAAG,CAAC,CAAC,CAAC;QACrE;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN;AACJ;AACA5B,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}