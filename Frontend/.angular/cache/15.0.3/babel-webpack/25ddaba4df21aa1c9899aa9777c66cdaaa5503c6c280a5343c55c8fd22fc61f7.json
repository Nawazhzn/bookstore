{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LicenseTextReader = void 0;\nvar LicenseTextReader = /** @class */function () {\n  function LicenseTextReader(logger, fileSystem, fileOverrides, textOverrides, templateDir, handleMissingLicenseText) {\n    this.logger = logger;\n    this.fileSystem = fileSystem;\n    this.fileOverrides = fileOverrides;\n    this.textOverrides = textOverrides;\n    this.templateDir = templateDir;\n    this.handleMissingLicenseText = handleMissingLicenseText;\n  }\n  LicenseTextReader.prototype.readLicense = function (compilation, module, licenseType) {\n    if (this.textOverrides[module.name]) {\n      return this.textOverrides[module.name];\n    }\n    if (this.fileOverrides[module.name]) {\n      return this.readText(module.directory, this.fileOverrides[module.name]);\n    }\n    if (licenseType && licenseType.indexOf('SEE LICENSE IN ') === 0) {\n      var filename = licenseType.split(' ')[3];\n      return this.fileSystem.isFileInDirectory(filename, module.directory) ? this.readText(module.directory, filename) : null;\n    }\n    var pathsInModuleDirectory = this.fileSystem.listPaths(module.directory);\n    var guessedLicenseFilename = this.guessLicenseFilename(pathsInModuleDirectory, module.directory);\n    if (guessedLicenseFilename !== null) {\n      return this.readText(module.directory, guessedLicenseFilename);\n    }\n    if (this.templateDir) {\n      var templateFilename = licenseType + \".txt\";\n      var templateFilePath = this.fileSystem.join(this.templateDir, templateFilename);\n      if (this.fileSystem.isFileInDirectory(templateFilePath, this.templateDir)) {\n        return this.fileSystem.readFileAsUtf8(templateFilePath).replace(/\\r\\n/g, '\\n');\n      }\n    }\n    this.logger.warn(compilation, \"could not find any license file for \" + module.name + \". Use the licenseTextOverrides option to add the license text if desired.\");\n    return this.handleMissingLicenseText(module.name, licenseType);\n  };\n  LicenseTextReader.prototype.readText = function (directory, filename) {\n    return this.fileSystem.readFileAsUtf8(this.fileSystem.join(directory, filename)).replace(/\\r\\n/g, '\\n');\n  };\n  LicenseTextReader.prototype.guessLicenseFilename = function (paths, modulePath) {\n    var e_1, _a;\n    try {\n      for (var paths_1 = __values(paths), paths_1_1 = paths_1.next(); !paths_1_1.done; paths_1_1 = paths_1.next()) {\n        var path = paths_1_1.value;\n        var filePath = this.fileSystem.join(modulePath, path);\n        if (/^licen[cs]e/i.test(path) && !this.fileSystem.isDirectory(filePath)) {\n          return path;\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (paths_1_1 && !paths_1_1.done && (_a = paths_1.return)) _a.call(paths_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return null;\n  };\n  return LicenseTextReader;\n}();\nexports.LicenseTextReader = LicenseTextReader;","map":{"version":3,"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","Object","defineProperty","exports","LicenseTextReader","logger","fileSystem","fileOverrides","textOverrides","templateDir","handleMissingLicenseText","prototype","readLicense","compilation","module","licenseType","name","readText","directory","indexOf","filename","split","isFileInDirectory","pathsInModuleDirectory","listPaths","guessedLicenseFilename","guessLicenseFilename","templateFilename","templateFilePath","join","readFileAsUtf8","replace","warn","paths","modulePath","e_1","_a","paths_1","paths_1_1","path","filePath","test","isDirectory","e_1_1","error","return"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/license-webpack-plugin/dist/LicenseTextReader.js"],"sourcesContent":["\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LicenseTextReader = void 0;\nvar LicenseTextReader = /** @class */ (function () {\n    function LicenseTextReader(logger, fileSystem, fileOverrides, textOverrides, templateDir, handleMissingLicenseText) {\n        this.logger = logger;\n        this.fileSystem = fileSystem;\n        this.fileOverrides = fileOverrides;\n        this.textOverrides = textOverrides;\n        this.templateDir = templateDir;\n        this.handleMissingLicenseText = handleMissingLicenseText;\n    }\n    LicenseTextReader.prototype.readLicense = function (compilation, module, licenseType) {\n        if (this.textOverrides[module.name]) {\n            return this.textOverrides[module.name];\n        }\n        if (this.fileOverrides[module.name]) {\n            return this.readText(module.directory, this.fileOverrides[module.name]);\n        }\n        if (licenseType && licenseType.indexOf('SEE LICENSE IN ') === 0) {\n            var filename = licenseType.split(' ')[3];\n            return this.fileSystem.isFileInDirectory(filename, module.directory)\n                ? this.readText(module.directory, filename)\n                : null;\n        }\n        var pathsInModuleDirectory = this.fileSystem.listPaths(module.directory);\n        var guessedLicenseFilename = this.guessLicenseFilename(pathsInModuleDirectory, module.directory);\n        if (guessedLicenseFilename !== null) {\n            return this.readText(module.directory, guessedLicenseFilename);\n        }\n        if (this.templateDir) {\n            var templateFilename = licenseType + \".txt\";\n            var templateFilePath = this.fileSystem.join(this.templateDir, templateFilename);\n            if (this.fileSystem.isFileInDirectory(templateFilePath, this.templateDir)) {\n                return this.fileSystem\n                    .readFileAsUtf8(templateFilePath)\n                    .replace(/\\r\\n/g, '\\n');\n            }\n        }\n        this.logger.warn(compilation, \"could not find any license file for \" + module.name + \". Use the licenseTextOverrides option to add the license text if desired.\");\n        return this.handleMissingLicenseText(module.name, licenseType);\n    };\n    LicenseTextReader.prototype.readText = function (directory, filename) {\n        return this.fileSystem\n            .readFileAsUtf8(this.fileSystem.join(directory, filename))\n            .replace(/\\r\\n/g, '\\n');\n    };\n    LicenseTextReader.prototype.guessLicenseFilename = function (paths, modulePath) {\n        var e_1, _a;\n        try {\n            for (var paths_1 = __values(paths), paths_1_1 = paths_1.next(); !paths_1_1.done; paths_1_1 = paths_1.next()) {\n                var path = paths_1_1.value;\n                var filePath = this.fileSystem.join(modulePath, path);\n                if (/^licen[cs]e/i.test(path) && !this.fileSystem.isDirectory(filePath)) {\n                    return path;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (paths_1_1 && !paths_1_1.done && (_a = paths_1.return)) _a.call(paths_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return null;\n    };\n    return LicenseTextReader;\n}());\nexports.LicenseTextReader = LicenseTextReader;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}