{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst util = require('util');\nconst fs = require('graceful-fs');\n// bind need only for mock unit tests\nconst readFile = util.promisify(fs.readFile.bind(fs));\nconst tryToRead = function (path, log) {\n  const maxRetries = 3;\n  let promise = readFile(path);\n  for (let retryCount = 1; retryCount <= maxRetries; retryCount++) {\n    promise = promise.catch(err => {\n      log.warn(err);\n      log.warn('retrying ' + retryCount);\n      return readFile(path);\n    });\n  }\n  return promise.catch(err => {\n    log.warn(err);\n    return Promise.reject(err);\n  });\n};\nconst mm = require('minimatch');\nconst {\n  isBinaryFile\n} = require('isbinaryfile');\nconst _ = require('lodash');\nconst CryptoUtils = require('./utils/crypto-utils');\nconst log = require('./logger').create('preprocess');\nfunction executeProcessor(process, file, content) {\n  let done = null;\n  const donePromise = new Promise((resolve, reject) => {\n    done = function (error, content) {\n      // normalize B-C\n      if (arguments.length === 1 && typeof error === 'string') {\n        content = error;\n        error = null;\n      }\n      if (error) {\n        reject(error);\n      } else {\n        resolve(content);\n      }\n    };\n  });\n  return (process(content, file, done) || Promise.resolve()).then(content => {\n    if (content) {\n      // async process correctly returned content\n      return content;\n    }\n    // process called done() (Either old sync api or an async function that did not return content)\n    return donePromise;\n  });\n}\nfunction runProcessors(_x, _x2, _x3) {\n  return _runProcessors.apply(this, arguments);\n}\nfunction _runProcessors() {\n  _runProcessors = _asyncToGenerator(function* (preprocessors, file, content) {\n    try {\n      for (const process of preprocessors) {\n        content = yield executeProcessor(process, file, content);\n      }\n    } catch (error) {\n      file.contentPath = null;\n      file.content = null;\n      throw error;\n    }\n    file.contentPath = null;\n    file.content = content;\n    file.sha = CryptoUtils.sha1(content);\n  });\n  return _runProcessors.apply(this, arguments);\n}\nfunction createPriorityPreprocessor(config = {}, preprocessorPriority, basePath, instantiatePlugin) {\n  _.union.apply(_, Object.values(config)).forEach(name => instantiatePlugin('preprocessor', name));\n  return /*#__PURE__*/function () {\n    var _preprocess = _asyncToGenerator(function* (file) {\n      const buffer = yield tryToRead(file.originalPath, log);\n      let isBinary = file.isBinary;\n      if (isBinary == null) {\n        // Pattern did not specify, probe for it.\n        isBinary = yield isBinaryFile(buffer, buffer.length);\n      }\n      const preprocessorNames = Object.keys(config).reduce((ppNames, pattern) => {\n        if (mm(file.originalPath, pattern, {\n          dot: true\n        })) {\n          ppNames = _.union(ppNames, config[pattern]);\n        }\n        return ppNames;\n      }, []);\n\n      // Apply preprocessor priority.\n      const preprocessors = preprocessorNames.map(name => [name, preprocessorPriority[name] || 0]).sort((a, b) => b[1] - a[1]).map(duo => duo[0]).reduce((preProcs, name) => {\n        const p = instantiatePlugin('preprocessor', name);\n        if (!isBinary || p && p.handleBinaryFiles) {\n          preProcs.push(p);\n        } else {\n          log.warn(`Ignored preprocessing ${file.originalPath} because ${name} has handleBinaryFiles=false.`);\n        }\n        return preProcs;\n      }, []);\n      yield runProcessors(preprocessors, file, isBinary ? buffer : buffer.toString());\n    });\n    function preprocess(_x4) {\n      return _preprocess.apply(this, arguments);\n    }\n    return preprocess;\n  }();\n}\ncreatePriorityPreprocessor.$inject = ['config.preprocessors', 'config.preprocessor_priority', 'config.basePath', 'instantiatePlugin'];\nexports.createPriorityPreprocessor = createPriorityPreprocessor;","map":{"version":3,"names":["util","require","fs","readFile","promisify","bind","tryToRead","path","log","maxRetries","promise","retryCount","catch","err","warn","Promise","reject","mm","isBinaryFile","_","CryptoUtils","create","executeProcessor","process","file","content","done","donePromise","resolve","error","arguments","length","then","runProcessors","preprocessors","contentPath","sha","sha1","createPriorityPreprocessor","config","preprocessorPriority","basePath","instantiatePlugin","union","apply","Object","values","forEach","name","buffer","originalPath","isBinary","preprocessorNames","keys","reduce","ppNames","pattern","dot","map","sort","a","b","duo","preProcs","p","handleBinaryFiles","push","toString","preprocess","$inject","exports"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/karma/lib/preprocessor.js"],"sourcesContent":["'use strict'\n\nconst util = require('util')\nconst fs = require('graceful-fs')\n// bind need only for mock unit tests\nconst readFile = util.promisify(fs.readFile.bind(fs))\nconst tryToRead = function (path, log) {\n  const maxRetries = 3\n  let promise = readFile(path)\n  for (let retryCount = 1; retryCount <= maxRetries; retryCount++) {\n    promise = promise.catch((err) => {\n      log.warn(err)\n      log.warn('retrying ' + retryCount)\n      return readFile(path)\n    })\n  }\n  return promise.catch((err) => {\n    log.warn(err)\n    return Promise.reject(err)\n  })\n}\n\nconst mm = require('minimatch')\nconst { isBinaryFile } = require('isbinaryfile')\nconst _ = require('lodash')\nconst CryptoUtils = require('./utils/crypto-utils')\n\nconst log = require('./logger').create('preprocess')\n\nfunction executeProcessor (process, file, content) {\n  let done = null\n  const donePromise = new Promise((resolve, reject) => {\n    done = function (error, content) {\n      // normalize B-C\n      if (arguments.length === 1 && typeof error === 'string') {\n        content = error\n        error = null\n      }\n      if (error) {\n        reject(error)\n      } else {\n        resolve(content)\n      }\n    }\n  })\n\n  return (process(content, file, done) || Promise.resolve()).then((content) => {\n    if (content) {\n      // async process correctly returned content\n      return content\n    }\n    // process called done() (Either old sync api or an async function that did not return content)\n    return donePromise\n  })\n}\n\nasync function runProcessors (preprocessors, file, content) {\n  try {\n    for (const process of preprocessors) {\n      content = await executeProcessor(process, file, content)\n    }\n  } catch (error) {\n    file.contentPath = null\n    file.content = null\n    throw error\n  }\n\n  file.contentPath = null\n  file.content = content\n  file.sha = CryptoUtils.sha1(content)\n}\n\nfunction createPriorityPreprocessor (config = {}, preprocessorPriority, basePath, instantiatePlugin) {\n  _.union.apply(_, Object.values(config)).forEach((name) => instantiatePlugin('preprocessor', name))\n  return async function preprocess (file) {\n    const buffer = await tryToRead(file.originalPath, log)\n    let isBinary = file.isBinary\n    if (isBinary == null) {\n      // Pattern did not specify, probe for it.\n      isBinary = await isBinaryFile(buffer, buffer.length)\n    }\n\n    const preprocessorNames = Object.keys(config).reduce((ppNames, pattern) => {\n      if (mm(file.originalPath, pattern, { dot: true })) {\n        ppNames = _.union(ppNames, config[pattern])\n      }\n      return ppNames\n    }, [])\n\n    // Apply preprocessor priority.\n    const preprocessors = preprocessorNames\n      .map((name) => [name, preprocessorPriority[name] || 0])\n      .sort((a, b) => b[1] - a[1])\n      .map((duo) => duo[0])\n      .reduce((preProcs, name) => {\n        const p = instantiatePlugin('preprocessor', name)\n\n        if (!isBinary || (p && p.handleBinaryFiles)) {\n          preProcs.push(p)\n        } else {\n          log.warn(`Ignored preprocessing ${file.originalPath} because ${name} has handleBinaryFiles=false.`)\n        }\n        return preProcs\n      }, [])\n\n    await runProcessors(preprocessors, file, isBinary ? buffer : buffer.toString())\n  }\n}\n\ncreatePriorityPreprocessor.$inject = ['config.preprocessors', 'config.preprocessor_priority', 'config.basePath', 'instantiatePlugin']\nexports.createPriorityPreprocessor = createPriorityPreprocessor\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}