{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.purgeStaleBuildCache = void 0;\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\nconst normalize_cache_1 = require(\"./normalize-cache\");\n/** Delete stale cache directories used by previous versions of build-angular. */\nfunction purgeStaleBuildCache(_x) {\n  return _purgeStaleBuildCache.apply(this, arguments);\n}\nfunction _purgeStaleBuildCache() {\n  _purgeStaleBuildCache = _asyncToGenerator(function* (context) {\n    var _a;\n    const projectName = (_a = context.target) === null || _a === void 0 ? void 0 : _a.project;\n    if (!projectName) {\n      return;\n    }\n    const metadata = yield context.getProjectMetadata(projectName);\n    const {\n      basePath,\n      path,\n      enabled\n    } = (0, normalize_cache_1.normalizeCacheOptions)(metadata, context.workspaceRoot);\n    if (!enabled || !(0, fs_1.existsSync)(basePath)) {\n      return;\n    }\n    const entriesToDelete = (yield fs_1.promises.readdir(basePath, {\n      withFileTypes: true\n    })).filter(d => (0, path_1.join)(basePath, d.name) !== path && d.isDirectory()).map(d => {\n      const subPath = (0, path_1.join)(basePath, d.name);\n      return fs_1.promises.rm(subPath, {\n        force: true,\n        recursive: true,\n        maxRetries: 3\n      }).catch(() => void 0);\n    });\n    yield Promise.all(entriesToDelete);\n  });\n  return _purgeStaleBuildCache.apply(this, arguments);\n}\nexports.purgeStaleBuildCache = purgeStaleBuildCache;","map":{"version":3,"names":["Object","defineProperty","exports","value","purgeStaleBuildCache","fs_1","require","path_1","normalize_cache_1","context","_a","projectName","target","project","metadata","getProjectMetadata","basePath","path","enabled","normalizeCacheOptions","workspaceRoot","existsSync","entriesToDelete","promises","readdir","withFileTypes","filter","d","join","name","isDirectory","map","subPath","rm","force","recursive","maxRetries","catch","Promise","all"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/utils/purge-cache.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.purgeStaleBuildCache = void 0;\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\nconst normalize_cache_1 = require(\"./normalize-cache\");\n/** Delete stale cache directories used by previous versions of build-angular. */\nasync function purgeStaleBuildCache(context) {\n    var _a;\n    const projectName = (_a = context.target) === null || _a === void 0 ? void 0 : _a.project;\n    if (!projectName) {\n        return;\n    }\n    const metadata = await context.getProjectMetadata(projectName);\n    const { basePath, path, enabled } = (0, normalize_cache_1.normalizeCacheOptions)(metadata, context.workspaceRoot);\n    if (!enabled || !(0, fs_1.existsSync)(basePath)) {\n        return;\n    }\n    const entriesToDelete = (await fs_1.promises.readdir(basePath, { withFileTypes: true }))\n        .filter((d) => (0, path_1.join)(basePath, d.name) !== path && d.isDirectory())\n        .map((d) => {\n        const subPath = (0, path_1.join)(basePath, d.name);\n        return fs_1.promises\n            .rm(subPath, { force: true, recursive: true, maxRetries: 3 })\n            .catch(() => void 0);\n    });\n    await Promise.all(entriesToDelete);\n}\nexports.purgeStaleBuildCache = purgeStaleBuildCache;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,oBAAoB,GAAG,KAAK,CAAC;AACrC,MAAMC,IAAI,GAAGC,OAAO,CAAC,IAAI,CAAC;AAC1B,MAAMC,MAAM,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC9B,MAAME,iBAAiB,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AACtD;AAAA,SACeF,oBAAoB;EAAA;AAAA;AAAA;EAAA,0CAAnC,WAAoCK,OAAO,EAAE;IACzC,IAAIC,EAAE;IACN,MAAMC,WAAW,GAAG,CAACD,EAAE,GAAGD,OAAO,CAACG,MAAM,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,OAAO;IACzF,IAAI,CAACF,WAAW,EAAE;MACd;IACJ;IACA,MAAMG,QAAQ,SAASL,OAAO,CAACM,kBAAkB,CAACJ,WAAW,CAAC;IAC9D,MAAM;MAAEK,QAAQ;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAG,CAAC,CAAC,EAAEV,iBAAiB,CAACW,qBAAqB,EAAEL,QAAQ,EAAEL,OAAO,CAACW,aAAa,CAAC;IACjH,IAAI,CAACF,OAAO,IAAI,CAAC,CAAC,CAAC,EAAEb,IAAI,CAACgB,UAAU,EAAEL,QAAQ,CAAC,EAAE;MAC7C;IACJ;IACA,MAAMM,eAAe,GAAG,OAAOjB,IAAI,CAACkB,QAAQ,CAACC,OAAO,CAACR,QAAQ,EAAE;MAAES,aAAa,EAAE;IAAK,CAAC,CAAC,EAClFC,MAAM,CAAEC,CAAC,IAAK,CAAC,CAAC,EAAEpB,MAAM,CAACqB,IAAI,EAAEZ,QAAQ,EAAEW,CAAC,CAACE,IAAI,CAAC,KAAKZ,IAAI,IAAIU,CAAC,CAACG,WAAW,EAAE,CAAC,CAC7EC,GAAG,CAAEJ,CAAC,IAAK;MACZ,MAAMK,OAAO,GAAG,CAAC,CAAC,EAAEzB,MAAM,CAACqB,IAAI,EAAEZ,QAAQ,EAAEW,CAAC,CAACE,IAAI,CAAC;MAClD,OAAOxB,IAAI,CAACkB,QAAQ,CACfU,EAAE,CAACD,OAAO,EAAE;QAAEE,KAAK,EAAE,IAAI;QAAEC,SAAS,EAAE,IAAI;QAAEC,UAAU,EAAE;MAAE,CAAC,CAAC,CAC5DC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;IAC5B,CAAC,CAAC;IACF,MAAMC,OAAO,CAACC,GAAG,CAACjB,eAAe,CAAC;EACtC,CAAC;EAAA;AAAA;AACDpB,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}