{"ast":null,"code":"\"use strict\";\n\n/* eslint-disable class-methods-use-this */\nconst path = require(\"path\");\nconst {\n  validate\n} = require(\"schema-utils\");\nconst schema = require(\"./plugin-options.json\");\nconst {\n  trueFn,\n  MODULE_TYPE,\n  AUTO_PUBLIC_PATH,\n  ABSOLUTE_PUBLIC_PATH,\n  SINGLE_DOT_PATH_SEGMENT,\n  compareModulesByIdentifier,\n  getUndoPath,\n  BASE_URI\n} = require(\"./utils\");\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"webpack\").ChunkGraph} ChunkGraph */\n\n/** @typedef {import(\"webpack\").Chunk} Chunk */\n\n/** @typedef {Parameters<import(\"webpack\").Chunk[\"isInGroup\"]>[0]} ChunkGroup */\n\n/** @typedef {import(\"webpack\").Module} Module */\n\n/** @typedef {import(\"webpack\").Dependency} Dependency */\n\n/** @typedef {import(\"webpack\").sources.Source} Source */\n\n/** @typedef {import(\"webpack\").Configuration} Configuration */\n\n/** @typedef {import(\"webpack\").WebpackError} WebpackError */\n\n/** @typedef {import(\"webpack\").AssetInfo} AssetInfo */\n\n/** @typedef {import(\"./loader.js\").Dependency} LoaderDependency */\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {string | ((resourcePath: string, rootContext: string) => string)} [publicPath]\n * @property {boolean} [emit]\n * @property {boolean} [esModule]\n * @property {string} [layer]\n */\n\n/**\n * @typedef {Object} PluginOptions\n * @property {Required<Configuration>['output']['filename']} [filename]\n * @property {Required<Configuration>['output']['chunkFilename']} [chunkFilename]\n * @property {boolean} [ignoreOrder]\n * @property {string | ((linkTag: HTMLLinkElement) => void)} [insert]\n * @property {Record<string, string>} [attributes]\n * @property {string | false | 'text/css'} [linkType]\n * @property {boolean} [runtime]\n * @property {boolean} [experimentalUseImportModule]\n */\n\n/**\n * @typedef {Object} NormalizedPluginOptions\n * @property {Required<Configuration>['output']['filename']} filename\n * @property {Required<Configuration>['output']['chunkFilename']} [chunkFilename]\n * @property {boolean} ignoreOrder\n * @property {string | ((linkTag: HTMLLinkElement) => void)} [insert]\n * @property {Record<string, string>} [attributes]\n * @property {string | false | 'text/css'} [linkType]\n * @property {boolean} runtime\n * @property {boolean} [experimentalUseImportModule]\n */\n\n/**\n * @typedef {Object} RuntimeOptions\n * @property {string | ((linkTag: HTMLLinkElement) => void) | undefined} insert\n * @property {string | false | 'text/css'} linkType\n * @property {Record<string, string> | undefined} attributes\n */\n\n/** @typedef {any} TODO */\n\nconst pluginName = \"mini-css-extract-plugin\";\nconst pluginSymbol = Symbol(pluginName);\nconst DEFAULT_FILENAME = \"[name].css\";\n/**\n * @type {Set<string>}\n */\n\nconst TYPES = new Set([MODULE_TYPE]);\n/**\n * @type {ReturnType<Module[\"codeGeneration\"]>}\n */\n\nconst CODE_GENERATION_RESULT = {\n  sources: new Map(),\n  runtimeRequirements: new Set()\n};\n/** @typedef {Module & { content: Buffer, media?: string, sourceMap?: Buffer, supports?: string, layer?: string, assets?: { [key: string]: TODO }, assetsInfo?: Map<string, AssetInfo> }} CssModule */\n\n/** @typedef {{ context: string | null, identifier: string, identifierIndex: number, content: Buffer, sourceMap?: Buffer, media?: string, supports?: string, layer?: TODO, assetsInfo?: Map<string, AssetInfo>, assets?: { [key: string]: TODO }}} CssModuleDependency */\n\n/** @typedef {{ new(dependency: CssModuleDependency): CssModule }} CssModuleConstructor */\n\n/** @typedef {Dependency & CssModuleDependency} CssDependency */\n\n/** @typedef {Omit<LoaderDependency, \"context\">} CssDependencyOptions */\n\n/** @typedef {{ new(loaderDependency: CssDependencyOptions, context: string | null, identifierIndex: number): CssDependency }} CssDependencyConstructor */\n\n/**\n *\n * @type {WeakMap<Compiler[\"webpack\"], CssModuleConstructor>}\n */\n\nconst cssModuleCache = new WeakMap();\n/**\n * @type {WeakMap<Compiler[\"webpack\"], CssDependencyConstructor>}\n */\n\nconst cssDependencyCache = new WeakMap();\n/**\n * @type {WeakSet<Compiler[\"webpack\"]>}\n */\n\nconst registered = new WeakSet();\nclass MiniCssExtractPlugin {\n  /**\n   * @param {Compiler[\"webpack\"]} webpack\n   * @returns {CssModuleConstructor}\n   */\n  static getCssModule(webpack) {\n    /**\n     * Prevent creation of multiple CssModule classes to allow other integrations to get the current CssModule.\n     */\n    if (cssModuleCache.has(webpack)) {\n      return (/** @type {CssModuleConstructor} */\n        cssModuleCache.get(webpack)\n      );\n    }\n    class CssModule extends webpack.Module {\n      /**\n       * @param {CssModuleDependency} dependency\n       */\n      constructor({\n        context,\n        identifier,\n        identifierIndex,\n        content,\n        layer,\n        supports,\n        media,\n        sourceMap,\n        assets,\n        assetsInfo\n      }) {\n        super(MODULE_TYPE, /** @type {string | undefined} */\n        context);\n        this.id = \"\";\n        this._context = context;\n        this._identifier = identifier;\n        this._identifierIndex = identifierIndex;\n        this.content = content;\n        this.layer = layer;\n        this.supports = supports;\n        this.media = media;\n        this.sourceMap = sourceMap;\n        this.assets = assets;\n        this.assetsInfo = assetsInfo;\n        this._needBuild = true;\n      } // no source() so webpack 4 doesn't do add stuff to the bundle\n\n      size() {\n        return this.content.length;\n      }\n      identifier() {\n        return `css|${this._identifier}|${this._identifierIndex}`;\n      }\n      /**\n       * @param {Parameters<Module[\"readableIdentifier\"]>[0]} requestShortener\n       * @returns {ReturnType<Module[\"readableIdentifier\"]>}\n       */\n\n      readableIdentifier(requestShortener) {\n        return `css ${requestShortener.shorten(this._identifier)}${this._identifierIndex ? ` (${this._identifierIndex})` : \"\"}`;\n      } // eslint-disable-next-line class-methods-use-this\n\n      getSourceTypes() {\n        return TYPES;\n      } // eslint-disable-next-line class-methods-use-this\n\n      codeGeneration() {\n        return CODE_GENERATION_RESULT;\n      }\n      nameForCondition() {\n        const resource = /** @type {string} */\n        this._identifier.split(\"!\").pop();\n        const idx = resource.indexOf(\"?\");\n        if (idx >= 0) {\n          return resource.substring(0, idx);\n        }\n        return resource;\n      }\n      /**\n       * @param {Module} module\n       */\n\n      updateCacheModule(module) {\n        if (this.content !== /** @type {CssModule} */\n        module.content || this.layer !== /** @type {CssModule} */\n        module.layer || this.supports !== /** @type {CssModule} */\n        module.supports || this.media !== /** @type {CssModule} */\n        module.media || this.sourceMap !== /** @type {CssModule} */\n        module.sourceMap || this.assets !== /** @type {CssModule} */\n        module.assets || this.assetsInfo !== /** @type {CssModule} */\n        module.assetsInfo) {\n          this._needBuild = true;\n          this.content = /** @type {CssModule} */\n          module.content;\n          this.layer = /** @type {CssModule} */\n          module.layer;\n          this.supports = /** @type {CssModule} */\n          module.supports;\n          this.media = /** @type {CssModule} */\n          module.media;\n          this.sourceMap = /** @type {CssModule} */\n          module.sourceMap;\n          this.assets = /** @type {CssModule} */\n          module.assets;\n          this.assetsInfo = /** @type {CssModule} */\n          module.assetsInfo;\n        }\n      } // eslint-disable-next-line class-methods-use-this\n\n      needRebuild() {\n        return this._needBuild;\n      } // eslint-disable-next-line class-methods-use-this\n\n      /**\n       * @param {Parameters<Module[\"needBuild\"]>[0]} context context info\n       * @param {Parameters<Module[\"needBuild\"]>[1]} callback callback function, returns true, if the module needs a rebuild\n       */\n\n      needBuild(context, callback) {\n        // eslint-disable-next-line no-undefined\n        callback(undefined, this._needBuild);\n      }\n      /**\n       * @param {Parameters<Module[\"build\"]>[0]} options\n       * @param {Parameters<Module[\"build\"]>[1]} compilation\n       * @param {Parameters<Module[\"build\"]>[2]} resolver\n       * @param {Parameters<Module[\"build\"]>[3]} fileSystem\n       * @param {Parameters<Module[\"build\"]>[4]} callback\n       */\n\n      build(options, compilation, resolver, fileSystem, callback) {\n        this.buildInfo = {\n          assets: this.assets,\n          assetsInfo: this.assetsInfo,\n          cacheable: true,\n          hash: this._computeHash( /** @type {string} */\n          compilation.outputOptions.hashFunction)\n        };\n        this.buildMeta = {};\n        this._needBuild = false;\n        callback();\n      }\n      /**\n       * @private\n       * @param {string} hashFunction\n       * @returns {string | Buffer}\n       */\n\n      _computeHash(hashFunction) {\n        const hash = webpack.util.createHash(hashFunction);\n        hash.update(this.content);\n        if (this.layer) {\n          hash.update(this.layer);\n        }\n        hash.update(this.supports || \"\");\n        hash.update(this.media || \"\");\n        hash.update(this.sourceMap || \"\");\n        return hash.digest(\"hex\");\n      }\n      /**\n       * @param {Parameters<Module[\"updateHash\"]>[0]} hash\n       * @param {Parameters<Module[\"updateHash\"]>[1]} context\n       */\n\n      updateHash(hash, context) {\n        super.updateHash(hash, context);\n        hash.update(this.buildInfo.hash);\n      }\n      /**\n       * @param {Parameters<Module[\"serialize\"]>[0]} context\n       */\n\n      serialize(context) {\n        const {\n          write\n        } = context;\n        write(this._context);\n        write(this._identifier);\n        write(this._identifierIndex);\n        write(this.content);\n        write(this.layer);\n        write(this.supports);\n        write(this.media);\n        write(this.sourceMap);\n        write(this.assets);\n        write(this.assetsInfo);\n        write(this._needBuild);\n        super.serialize(context);\n      }\n      /**\n       * @param {Parameters<Module[\"deserialize\"]>[0]} context\n       */\n\n      deserialize(context) {\n        this._needBuild = context.read();\n        super.deserialize(context);\n      }\n    }\n    cssModuleCache.set(webpack, CssModule);\n    webpack.util.serialization.register(CssModule, path.resolve(__dirname, \"CssModule\"),\n    // @ts-ignore\n    null, {\n      serialize(instance, context) {\n        instance.serialize(context);\n      },\n      deserialize(context) {\n        const {\n          read\n        } = context;\n        const contextModule = read();\n        const identifier = read();\n        const identifierIndex = read();\n        const content = read();\n        const layer = read();\n        const supports = read();\n        const media = read();\n        const sourceMap = read();\n        const assets = read();\n        const assetsInfo = read();\n        const dep = new CssModule({\n          context: contextModule,\n          identifier,\n          identifierIndex,\n          content,\n          layer,\n          supports,\n          media,\n          sourceMap,\n          assets,\n          assetsInfo\n        });\n        dep.deserialize(context);\n        return dep;\n      }\n    });\n    return CssModule;\n  }\n  /**\n   * @param {Compiler[\"webpack\"]} webpack\n   * @returns {CssDependencyConstructor}\n   */\n\n  static getCssDependency(webpack) {\n    /**\n     * Prevent creation of multiple CssDependency classes to allow other integrations to get the current CssDependency.\n     */\n    if (cssDependencyCache.has(webpack)) {\n      return (/** @type {CssDependencyConstructor} */\n        cssDependencyCache.get(webpack)\n      );\n    }\n    class CssDependency extends webpack.Dependency {\n      /**\n       * @param {CssDependencyOptions} loaderDependency\n       * @param {string | null} context\n       * @param {number} identifierIndex\n       */\n      constructor({\n        identifier,\n        content,\n        layer,\n        supports,\n        media,\n        sourceMap\n      }, context, identifierIndex) {\n        super();\n        this.identifier = identifier;\n        this.identifierIndex = identifierIndex;\n        this.content = content;\n        this.layer = layer;\n        this.supports = supports;\n        this.media = media;\n        this.sourceMap = sourceMap;\n        this.context = context;\n        /** @type {{ [key: string]: Source } | undefined}} */\n        // eslint-disable-next-line no-undefined\n\n        this.assets = undefined;\n        /** @type {Map<string, AssetInfo> | undefined} */\n        // eslint-disable-next-line no-undefined\n\n        this.assetsInfo = undefined;\n      }\n      /**\n       * @returns {ReturnType<Dependency[\"getResourceIdentifier\"]>}\n       */\n\n      getResourceIdentifier() {\n        return `css-module-${this.identifier}-${this.identifierIndex}`;\n      }\n      /**\n       * @returns {ReturnType<Dependency[\"getModuleEvaluationSideEffectsState\"]>}\n       */\n      // eslint-disable-next-line class-methods-use-this\n\n      getModuleEvaluationSideEffectsState() {\n        return webpack.ModuleGraphConnection.TRANSITIVE_ONLY;\n      }\n      /**\n       * @param {Parameters<Dependency[\"serialize\"]>[0]} context\n       */\n\n      serialize(context) {\n        const {\n          write\n        } = context;\n        write(this.identifier);\n        write(this.content);\n        write(this.layer);\n        write(this.supports);\n        write(this.media);\n        write(this.sourceMap);\n        write(this.context);\n        write(this.identifierIndex);\n        write(this.assets);\n        write(this.assetsInfo);\n        super.serialize(context);\n      }\n      /**\n       * @param {Parameters<Dependency[\"deserialize\"]>[0]} context\n       */\n\n      deserialize(context) {\n        super.deserialize(context);\n      }\n    }\n    cssDependencyCache.set(webpack, CssDependency);\n    webpack.util.serialization.register(CssDependency, path.resolve(__dirname, \"CssDependency\"),\n    // @ts-ignore\n    null, {\n      serialize(instance, context) {\n        instance.serialize(context);\n      },\n      deserialize(context) {\n        const {\n          read\n        } = context;\n        const dep = new CssDependency({\n          identifier: read(),\n          content: read(),\n          layer: read(),\n          supports: read(),\n          media: read(),\n          sourceMap: read()\n        }, read(), read());\n        const assets = read();\n        const assetsInfo = read();\n        dep.assets = assets;\n        dep.assetsInfo = assetsInfo;\n        dep.deserialize(context);\n        return dep;\n      }\n    });\n    return CssDependency;\n  }\n  /**\n   * @param {PluginOptions} [options]\n   */\n\n  constructor(options = {}) {\n    validate( /** @type {Schema} */\n    schema, options, {\n      baseDataPath: \"options\"\n    });\n    /**\n     * @private\n     * @type {WeakMap<Chunk, Set<CssModule>>}\n     * @private\n     */\n\n    this._sortedModulesCache = new WeakMap();\n    /**\n     * @private\n     * @type {NormalizedPluginOptions}\n     */\n\n    this.options = Object.assign({\n      filename: DEFAULT_FILENAME,\n      ignoreOrder: false,\n      // TODO remove in the next major release\n      // eslint-disable-next-line no-undefined\n      experimentalUseImportModule: undefined,\n      runtime: true\n    }, options);\n    /**\n     * @private\n     * @type {RuntimeOptions}\n     */\n\n    this.runtimeOptions = {\n      insert: options.insert,\n      linkType:\n      // Todo in next major release set default to \"false\"\n      typeof options.linkType === \"boolean\" && /** @type {boolean} */\n      options.linkType === true || typeof options.linkType === \"undefined\" ? \"text/css\" : options.linkType,\n      attributes: options.attributes\n    };\n    if (!this.options.chunkFilename) {\n      const {\n        filename\n      } = this.options;\n      if (typeof filename !== \"function\") {\n        const hasName = /** @type {string} */\n        filename.includes(\"[name]\");\n        const hasId = /** @type {string} */\n        filename.includes(\"[id]\");\n        const hasChunkHash = /** @type {string} */\n        filename.includes(\"[chunkhash]\");\n        const hasContentHash = /** @type {string} */\n        filename.includes(\"[contenthash]\"); // Anything changing depending on chunk is fine\n\n        if (hasChunkHash || hasContentHash || hasName || hasId) {\n          this.options.chunkFilename = filename;\n        } else {\n          // Otherwise prefix \"[id].\" in front of the basename to make it changing\n          this.options.chunkFilename = /** @type {string} */\n          filename.replace(/(^|\\/)([^/]*(?:\\?|$))/, \"$1[id].$2\");\n        }\n      } else {\n        this.options.chunkFilename = \"[id].css\";\n      }\n    }\n  }\n  /**\n   * @param {Compiler} compiler\n   */\n\n  apply(compiler) {\n    const {\n      webpack\n    } = compiler;\n    if (this.options.experimentalUseImportModule) {\n      if (typeof /** @type {Compiler[\"options\"][\"experiments\"] & { executeModule?: boolean }} */\n      compiler.options.experiments.executeModule === \"undefined\") {\n        /** @type {Compiler[\"options\"][\"experiments\"] & { executeModule?: boolean }} */\n        // eslint-disable-next-line no-param-reassign\n        compiler.options.experiments.executeModule = true;\n      }\n    } // TODO bug in webpack, remove it after it will be fixed\n    // webpack tries to `require` loader firstly when serializer doesn't found\n\n    if (!registered.has(webpack)) {\n      registered.add(webpack);\n      webpack.util.serialization.registerLoader(/^mini-css-extract-plugin\\//, trueFn);\n    }\n    const {\n      splitChunks\n    } = compiler.options.optimization;\n    if (splitChunks) {\n      if ( /** @type {string[]} */\n      splitChunks.defaultSizeTypes.includes(\"...\")) {\n        /** @type {string[]} */\n        splitChunks.defaultSizeTypes.push(MODULE_TYPE);\n      }\n    }\n    const CssModule = MiniCssExtractPlugin.getCssModule(webpack);\n    const CssDependency = MiniCssExtractPlugin.getCssDependency(webpack);\n    const {\n      NormalModule\n    } = compiler.webpack;\n    compiler.hooks.compilation.tap(pluginName, compilation => {\n      const {\n        loader: normalModuleHook\n      } = NormalModule.getCompilationHooks(compilation);\n      normalModuleHook.tap(pluginName,\n      /**\n       * @param {object} loaderContext\n       */\n      loaderContext => {\n        /** @type {object & { [pluginSymbol]: { experimentalUseImportModule: boolean | undefined } }} */\n        // eslint-disable-next-line no-param-reassign\n        loaderContext[pluginSymbol] = {\n          experimentalUseImportModule: this.options.experimentalUseImportModule\n        };\n      });\n    });\n    compiler.hooks.thisCompilation.tap(pluginName, compilation => {\n      class CssModuleFactory {\n        /**\n         * @param {{ dependencies: Dependency[] }} dependencies\n         * @param {(arg0?: Error, arg1?: TODO) => void} callback\n         */\n        // eslint-disable-next-line class-methods-use-this\n        create({\n          dependencies: [dependency]\n        }, callback) {\n          // eslint-disable-next-line no-undefined\n          callback(undefined, new CssModule( /** @type {CssDependency} */\n          dependency));\n        }\n      }\n      compilation.dependencyFactories.set(CssDependency, new CssModuleFactory());\n      class CssDependencyTemplate {\n        // eslint-disable-next-line class-methods-use-this\n        apply() {}\n      }\n      compilation.dependencyTemplates.set(CssDependency, new CssDependencyTemplate());\n      compilation.hooks.renderManifest.tap(pluginName,\n      /**\n       * @param {ReturnType<Compilation[\"getRenderManifest\"]>} result\n       * @param {Parameters<Compilation[\"getRenderManifest\"]>[0]} chunk\n       * @returns {TODO}\n       */\n      (result, {\n        chunk\n      }) => {\n        const {\n          chunkGraph\n        } = compilation;\n        const {\n          HotUpdateChunk\n        } = webpack; // We don't need hot update chunks for css\n        // We will use the real asset instead to update\n\n        if (chunk instanceof HotUpdateChunk) {\n          return;\n        }\n        /** @type {CssModule[]} */\n\n        const renderedModules = Array.from( /** @type {CssModule[]} */\n        this.getChunkModules(chunk, chunkGraph)).filter(module => module.type === MODULE_TYPE);\n        const filenameTemplate = /** @type {string} */\n        chunk.canBeInitial() ? this.options.filename : this.options.chunkFilename;\n        if (renderedModules.length > 0) {\n          result.push({\n            render: () => this.renderContentAsset(compiler, compilation, chunk, renderedModules, compilation.runtimeTemplate.requestShortener, filenameTemplate, {\n              contentHashType: MODULE_TYPE,\n              chunk\n            }),\n            filenameTemplate,\n            pathOptions: {\n              chunk,\n              contentHashType: MODULE_TYPE\n            },\n            identifier: `${pluginName}.${chunk.id}`,\n            hash: chunk.contentHash[MODULE_TYPE]\n          });\n        }\n      });\n      compilation.hooks.contentHash.tap(pluginName, chunk => {\n        const {\n          outputOptions,\n          chunkGraph\n        } = compilation;\n        const modules = this.sortModules(compilation, chunk, /** @type {CssModule[]} */\n        chunkGraph.getChunkModulesIterableBySourceType(chunk, MODULE_TYPE), compilation.runtimeTemplate.requestShortener);\n        if (modules) {\n          const {\n            hashFunction,\n            hashDigest,\n            hashDigestLength\n          } = outputOptions;\n          const {\n            createHash\n          } = compiler.webpack.util;\n          const hash = createHash( /** @type {string} */\n          hashFunction);\n          for (const m of modules) {\n            hash.update(chunkGraph.getModuleHash(m, chunk.runtime));\n          } // eslint-disable-next-line no-param-reassign\n\n          chunk.contentHash[MODULE_TYPE] = /** @type {string} */\n          hash.digest(hashDigest).substring(0, hashDigestLength);\n        }\n      }); // All the code below is dedicated to the runtime and can be skipped when the `runtime` option is `false`\n\n      if (!this.options.runtime) {\n        return;\n      }\n      const {\n        Template,\n        RuntimeGlobals,\n        RuntimeModule,\n        runtime\n      } = webpack;\n      /**\n       * @param {Chunk} mainChunk\n       * @param {Compilation} compilation\n       * @returns {Record<string, number>}\n       */\n      // eslint-disable-next-line no-shadow\n\n      const getCssChunkObject = (mainChunk, compilation) => {\n        /** @type {Record<string, number>} */\n        const obj = {};\n        const {\n          chunkGraph\n        } = compilation;\n        for (const chunk of mainChunk.getAllAsyncChunks()) {\n          const modules = chunkGraph.getOrderedChunkModulesIterable(chunk, compareModulesByIdentifier);\n          for (const module of modules) {\n            if (module.type === MODULE_TYPE) {\n              obj[/** @type {string} */\n              chunk.id] = 1;\n              break;\n            }\n          }\n        }\n        return obj;\n      };\n      class CssLoadingRuntimeModule extends RuntimeModule {\n        /**\n         * @param {Set<string>} runtimeRequirements\n         * @param {RuntimeOptions} runtimeOptions\n         */\n        constructor(runtimeRequirements, runtimeOptions) {\n          super(\"css loading\", 10);\n          this.runtimeRequirements = runtimeRequirements;\n          this.runtimeOptions = runtimeOptions;\n        }\n        generate() {\n          const {\n            chunk,\n            runtimeRequirements\n          } = this;\n          const {\n            runtimeTemplate,\n            outputOptions: {\n              crossOriginLoading\n            }\n          } = this.compilation;\n          const chunkMap = getCssChunkObject(chunk, this.compilation);\n          const withLoading = runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers) && Object.keys(chunkMap).length > 0;\n          const withHmr = runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);\n          if (!withLoading && !withHmr) {\n            return \"\";\n          }\n          return Template.asString([`var createStylesheet = ${runtimeTemplate.basicFunction(\"chunkId, fullhref, resolve, reject\", ['var linkTag = document.createElement(\"link\");', this.runtimeOptions.attributes ? Template.asString(Object.entries(this.runtimeOptions.attributes).map(entry => {\n            const [key, value] = entry;\n            return `linkTag.setAttribute(${JSON.stringify(key)}, ${JSON.stringify(value)});`;\n          })) : \"\", 'linkTag.rel = \"stylesheet\";', this.runtimeOptions.linkType ? `linkTag.type = ${JSON.stringify(this.runtimeOptions.linkType)};` : \"\", `var onLinkComplete = ${runtimeTemplate.basicFunction(\"event\", [\"// avoid mem leaks.\", \"linkTag.onerror = linkTag.onload = null;\", \"if (event.type === 'load') {\", Template.indent([\"resolve();\"]), \"} else {\", Template.indent([\"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\", \"var realHref = event && event.target && event.target.href || fullhref;\", 'var err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\\\n(\" + realHref + \")\");', 'err.code = \"CSS_CHUNK_LOAD_FAILED\";', \"err.type = errorType;\", \"err.request = realHref;\", \"linkTag.parentNode.removeChild(linkTag)\", \"reject(err);\"]), \"}\"])}`, \"linkTag.onerror = linkTag.onload = onLinkComplete;\", \"linkTag.href = fullhref;\", crossOriginLoading ? Template.asString([`if (linkTag.href.indexOf(window.location.origin + '/') !== 0) {`, Template.indent(`linkTag.crossOrigin = ${JSON.stringify(crossOriginLoading)};`), \"}\"]) : \"\", typeof this.runtimeOptions.insert !== \"undefined\" ? typeof this.runtimeOptions.insert === \"function\" ? `(${this.runtimeOptions.insert.toString()})(linkTag)` : Template.asString([`var target = document.querySelector(\"${this.runtimeOptions.insert}\");`, `target.parentNode.insertBefore(linkTag, target.nextSibling);`]) : Template.asString([\"document.head.appendChild(linkTag);\"]), \"return linkTag;\"])};`, `var findStylesheet = ${runtimeTemplate.basicFunction(\"href, fullhref\", ['var existingLinkTags = document.getElementsByTagName(\"link\");', \"for(var i = 0; i < existingLinkTags.length; i++) {\", Template.indent([\"var tag = existingLinkTags[i];\", 'var dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");', 'if(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;']), \"}\", 'var existingStyleTags = document.getElementsByTagName(\"style\");', \"for(var i = 0; i < existingStyleTags.length; i++) {\", Template.indent([\"var tag = existingStyleTags[i];\", 'var dataHref = tag.getAttribute(\"data-href\");', \"if(dataHref === href || dataHref === fullhref) return tag;\"]), \"}\"])};`, `var loadStylesheet = ${runtimeTemplate.basicFunction(\"chunkId\", `return new Promise(${runtimeTemplate.basicFunction(\"resolve, reject\", [`var href = ${RuntimeGlobals.require}.miniCssF(chunkId);`, `var fullhref = ${RuntimeGlobals.publicPath} + href;`, \"if(findStylesheet(href, fullhref)) return resolve();\", \"createStylesheet(chunkId, fullhref, resolve, reject);\"])});`)}`, withLoading ? Template.asString([\"// object to store loaded CSS chunks\", \"var installedCssChunks = {\", Template.indent( /** @type {string[]} */\n          chunk.ids.map(id => `${JSON.stringify(id)}: 0`).join(\",\\n\")), \"};\", \"\", `${RuntimeGlobals.ensureChunkHandlers}.miniCss = ${runtimeTemplate.basicFunction(\"chunkId, promises\", [`var cssChunks = ${JSON.stringify(chunkMap)};`, \"if(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\", \"else if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\", Template.indent([`promises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(${runtimeTemplate.basicFunction(\"\", \"installedCssChunks[chunkId] = 0;\")}, ${runtimeTemplate.basicFunction(\"e\", [\"delete installedCssChunks[chunkId];\", \"throw e;\"])}));`]), \"}\"])};`]) : \"// no chunk loading\", \"\", withHmr ? Template.asString([\"var oldTags = [];\", \"var newTags = [];\", `var applyHandler = ${runtimeTemplate.basicFunction(\"options\", [`return { dispose: ${runtimeTemplate.basicFunction(\"\", [\"for(var i = 0; i < oldTags.length; i++) {\", Template.indent([\"var oldTag = oldTags[i];\", \"if(oldTag.parentNode) oldTag.parentNode.removeChild(oldTag);\"]), \"}\", \"oldTags.length = 0;\"])}, apply: ${runtimeTemplate.basicFunction(\"\", ['for(var i = 0; i < newTags.length; i++) newTags[i].rel = \"stylesheet\";', \"newTags.length = 0;\"])} };`])}`, `${RuntimeGlobals.hmrDownloadUpdateHandlers}.miniCss = ${runtimeTemplate.basicFunction(\"chunkIds, removedChunks, removedModules, promises, applyHandlers, updatedModulesList\", [\"applyHandlers.push(applyHandler);\", `chunkIds.forEach(${runtimeTemplate.basicFunction(\"chunkId\", [`var href = ${RuntimeGlobals.require}.miniCssF(chunkId);`, `var fullhref = ${RuntimeGlobals.publicPath} + href;`, \"var oldTag = findStylesheet(href, fullhref);\", \"if(!oldTag) return;\", `promises.push(new Promise(${runtimeTemplate.basicFunction(\"resolve, reject\", [`var tag = createStylesheet(chunkId, fullhref, ${runtimeTemplate.basicFunction(\"\", ['tag.as = \"style\";', 'tag.rel = \"preload\";', \"resolve();\"])}, reject);`, \"oldTags.push(oldTag);\", \"newTags.push(tag);\"])}));`])});`])}`]) : \"// no hmr\"]);\n        }\n      }\n      const enabledChunks = new WeakSet();\n      /**\n       * @param {Chunk} chunk\n       * @param {Set<string>} set\n       */\n\n      const handler = (chunk, set) => {\n        if (enabledChunks.has(chunk)) {\n          return;\n        }\n        enabledChunks.add(chunk);\n        if (typeof this.options.chunkFilename === \"string\" && /\\[(full)?hash(:\\d+)?\\]/.test(this.options.chunkFilename)) {\n          set.add(RuntimeGlobals.getFullHash);\n        }\n        set.add(RuntimeGlobals.publicPath);\n        compilation.addRuntimeModule(chunk, new runtime.GetChunkFilenameRuntimeModule(MODULE_TYPE, \"mini-css\", `${RuntimeGlobals.require}.miniCssF`,\n        /**\n         * @param {Chunk} referencedChunk\n         * @returns {TODO}\n         */\n        referencedChunk => {\n          if (!referencedChunk.contentHash[MODULE_TYPE]) {\n            return false;\n          }\n          return referencedChunk.canBeInitial() ? this.options.filename : this.options.chunkFilename;\n        }, false));\n        compilation.addRuntimeModule(chunk, new CssLoadingRuntimeModule(set, this.runtimeOptions));\n      };\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunkHandlers).tap(pluginName, handler);\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hmrDownloadUpdateHandlers).tap(pluginName, handler);\n    });\n  }\n  /**\n   * @private\n   * @param {Chunk} chunk\n   * @param {ChunkGraph} chunkGraph\n   * @returns {Iterable<Module>}\n   */\n\n  getChunkModules(chunk, chunkGraph) {\n    return typeof chunkGraph !== \"undefined\" ? chunkGraph.getOrderedChunkModulesIterable(chunk, compareModulesByIdentifier) : chunk.modulesIterable;\n  }\n  /**\n   * @private\n   * @param {Compilation} compilation\n   * @param {Chunk} chunk\n   * @param {CssModule[]} modules\n   * @param {Compilation[\"requestShortener\"]} requestShortener\n   * @returns {Set<CssModule>}\n   */\n\n  sortModules(compilation, chunk, modules, requestShortener) {\n    let usedModules = this._sortedModulesCache.get(chunk);\n    if (usedModules || !modules) {\n      return (/** @type {Set<CssModule>} */\n        usedModules\n      );\n    }\n    /** @type {CssModule[]} */\n\n    const modulesList = [...modules]; // Store dependencies for modules\n\n    /** @type {Map<CssModule, Set<CssModule>>} */\n\n    const moduleDependencies = new Map(modulesList.map(m => [m, /** @type {Set<CssModule>} */\n    new Set()]));\n    /** @type {Map<CssModule, Map<CssModule, Set<ChunkGroup>>>} */\n\n    const moduleDependenciesReasons = new Map(modulesList.map(m => [m, new Map()])); // Get ordered list of modules per chunk group\n    // This loop also gathers dependencies from the ordered lists\n    // Lists are in reverse order to allow to use Array.pop()\n\n    /** @type {CssModule[][]} */\n\n    const modulesByChunkGroup = Array.from(chunk.groupsIterable, chunkGroup => {\n      const sortedModules = modulesList.map(module => {\n        return {\n          module,\n          index: chunkGroup.getModulePostOrderIndex(module)\n        };\n      }) // eslint-disable-next-line no-undefined\n      .filter(item => item.index !== undefined).sort((a, b) => b.index - a.index).map(item => item.module);\n      for (let i = 0; i < sortedModules.length; i++) {\n        const set = moduleDependencies.get(sortedModules[i]);\n        const reasons = /** @type {Map<CssModule, Set<ChunkGroup>>} */\n        moduleDependenciesReasons.get(sortedModules[i]);\n        for (let j = i + 1; j < sortedModules.length; j++) {\n          const module = sortedModules[j];\n          /** @type {Set<CssModule>} */\n\n          set.add(module);\n          const reason = reasons.get(module) || /** @type {Set<ChunkGroup>} */\n          new Set();\n          reason.add(chunkGroup);\n          reasons.set(module, reason);\n        }\n      }\n      return sortedModules;\n    }); // set with already included modules in correct order\n\n    usedModules = new Set();\n    /**\n     * @param {CssModule} m\n     * @returns {boolean}\n     */\n\n    const unusedModulesFilter = m => ! /** @type {Set<CssModule>} */\n    usedModules.has(m);\n    while (usedModules.size < modulesList.length) {\n      let success = false;\n      let bestMatch;\n      let bestMatchDeps; // get first module where dependencies are fulfilled\n\n      for (const list of modulesByChunkGroup) {\n        // skip and remove already added modules\n        while (list.length > 0 && usedModules.has(list[list.length - 1])) {\n          list.pop();\n        } // skip empty lists\n\n        if (list.length !== 0) {\n          const module = list[list.length - 1];\n          const deps = moduleDependencies.get(module); // determine dependencies that are not yet included\n\n          const failedDeps = Array.from( /** @type {Set<CssModule>} */\n          deps).filter(unusedModulesFilter); // store best match for fallback behavior\n\n          if (!bestMatchDeps || bestMatchDeps.length > failedDeps.length) {\n            bestMatch = list;\n            bestMatchDeps = failedDeps;\n          }\n          if (failedDeps.length === 0) {\n            // use this module and remove it from list\n            usedModules.add( /** @type {CssModule} */\n            list.pop());\n            success = true;\n            break;\n          }\n        }\n      }\n      if (!success) {\n        // no module found => there is a conflict\n        // use list with fewest failed deps\n        // and emit a warning\n        const fallbackModule = /** @type {CssModule[]} */\n        bestMatch.pop();\n        if (!this.options.ignoreOrder) {\n          const reasons = moduleDependenciesReasons.get( /** @type {CssModule} */\n          fallbackModule);\n          compilation.warnings.push( /** @type {WebpackError} */\n          new Error([`chunk ${chunk.name || chunk.id} [${pluginName}]`, \"Conflicting order. Following module has been added:\", ` * ${\n          /** @type {CssModule} */fallbackModule.readableIdentifier(requestShortener)}`, \"despite it was not able to fulfill desired ordering with these modules:\", ... /** @type {CssModule[]} */\n          bestMatchDeps.map(m => {\n            const goodReasonsMap = moduleDependenciesReasons.get(m);\n            const goodReasons = goodReasonsMap && goodReasonsMap.get( /** @type {CssModule} */\n            fallbackModule);\n            const failedChunkGroups = Array.from( /** @type {Set<ChunkGroup>} */\n\n            /** @type {Map<CssModule, Set<ChunkGroup>>} */\n            reasons.get(m), cg => cg.name).join(\", \");\n            const goodChunkGroups = goodReasons && Array.from(goodReasons, cg => cg.name).join(\", \");\n            return [` * ${m.readableIdentifier(requestShortener)}`, `   - couldn't fulfill desired order of chunk group(s) ${failedChunkGroups}`, goodChunkGroups && `   - while fulfilling desired order of chunk group(s) ${goodChunkGroups}`].filter(Boolean).join(\"\\n\");\n          })].join(\"\\n\")));\n        }\n        usedModules.add( /** @type {CssModule} */\n        fallbackModule);\n      }\n    }\n    this._sortedModulesCache.set(chunk, usedModules);\n    return usedModules;\n  }\n  /**\n   * @private\n   * @param {Compiler} compiler\n   * @param {Compilation} compilation\n   * @param {Chunk} chunk\n   * @param {CssModule[]} modules\n   * @param {Compiler[\"requestShortener\"]} requestShortener\n   * @param {string} filenameTemplate\n   * @param {Parameters<Exclude<Required<Configuration>['output']['filename'], string | undefined>>[0]} pathData\n   * @returns {Source}\n   */\n\n  renderContentAsset(compiler, compilation, chunk, modules, requestShortener, filenameTemplate, pathData) {\n    const usedModules = this.sortModules(compilation, chunk, modules, requestShortener);\n    const {\n      ConcatSource,\n      SourceMapSource,\n      RawSource\n    } = compiler.webpack.sources;\n    const source = new ConcatSource();\n    const externalsSource = new ConcatSource();\n    for (const module of usedModules) {\n      let content = module.content.toString();\n      const readableIdentifier = module.readableIdentifier(requestShortener);\n      const startsWithAtRuleImport = /^@import url/.test(content);\n      let header;\n      if (compilation.outputOptions.pathinfo) {\n        // From https://github.com/webpack/webpack/blob/29eff8a74ecc2f87517b627dee451c2af9ed3f3f/lib/ModuleInfoHeaderPlugin.js#L191-L194\n        const reqStr = readableIdentifier.replace(/\\*\\//g, \"*_/\");\n        const reqStrStar = \"*\".repeat(reqStr.length);\n        const headerStr = `/*!****${reqStrStar}****!*\\\\\\n  !*** ${reqStr} ***!\\n  \\\\****${reqStrStar}****/\\n`;\n        header = new RawSource(headerStr);\n      }\n      if (startsWithAtRuleImport) {\n        if (typeof header !== \"undefined\") {\n          externalsSource.add(header);\n        } // HACK for IE\n        // http://stackoverflow.com/a/14676665/1458162\n\n        if (module.media) {\n          // insert media into the @import\n          // this is rar\n          // TODO improve this and parse the CSS to support multiple medias\n          content = content.replace(/;|\\s*$/, module.media);\n        }\n        externalsSource.add(content);\n        externalsSource.add(\"\\n\");\n      } else {\n        if (typeof header !== \"undefined\") {\n          source.add(header);\n        }\n        if (module.supports) {\n          source.add(`@supports (${module.supports}) {\\n`);\n        }\n        if (module.media) {\n          source.add(`@media ${module.media} {\\n`);\n        }\n        const needLayer = typeof module.layer !== \"undefined\";\n        if (needLayer) {\n          source.add(`@layer${module.layer.length > 0 ? ` ${module.layer}` : \"\"} {\\n`);\n        }\n        const {\n          path: filename\n        } = compilation.getPathWithInfo(filenameTemplate, pathData);\n        const undoPath = getUndoPath(filename, compiler.outputPath, false); // replacements\n\n        content = content.replace(new RegExp(ABSOLUTE_PUBLIC_PATH, \"g\"), \"\");\n        content = content.replace(new RegExp(SINGLE_DOT_PATH_SEGMENT, \"g\"), \".\");\n        content = content.replace(new RegExp(AUTO_PUBLIC_PATH, \"g\"), undoPath);\n        const entryOptions = chunk.getEntryOptions();\n        const baseUriReplacement = entryOptions && entryOptions.baseUri || undoPath;\n        content = content.replace(new RegExp(BASE_URI, \"g\"), baseUriReplacement);\n        if (module.sourceMap) {\n          source.add(new SourceMapSource(content, readableIdentifier, module.sourceMap.toString()));\n        } else {\n          source.add(new RawSource(content));\n        }\n        source.add(\"\\n\");\n        if (needLayer) {\n          source.add(\"}\\n\");\n        }\n        if (module.media) {\n          source.add(\"}\\n\");\n        }\n        if (module.supports) {\n          source.add(\"}\\n\");\n        }\n      }\n    }\n    return new ConcatSource(externalsSource, source);\n  }\n}\nMiniCssExtractPlugin.pluginName = pluginName;\nMiniCssExtractPlugin.pluginSymbol = pluginSymbol;\nMiniCssExtractPlugin.loader = require.resolve(\"./loader\");\nmodule.exports = MiniCssExtractPlugin;","map":{"version":3,"names":["path","require","validate","schema","trueFn","MODULE_TYPE","AUTO_PUBLIC_PATH","ABSOLUTE_PUBLIC_PATH","SINGLE_DOT_PATH_SEGMENT","compareModulesByIdentifier","getUndoPath","BASE_URI","pluginName","pluginSymbol","Symbol","DEFAULT_FILENAME","TYPES","Set","CODE_GENERATION_RESULT","sources","Map","runtimeRequirements","cssModuleCache","WeakMap","cssDependencyCache","registered","WeakSet","MiniCssExtractPlugin","getCssModule","webpack","has","get","CssModule","Module","constructor","context","identifier","identifierIndex","content","layer","supports","media","sourceMap","assets","assetsInfo","id","_context","_identifier","_identifierIndex","_needBuild","size","length","readableIdentifier","requestShortener","shorten","getSourceTypes","codeGeneration","nameForCondition","resource","split","pop","idx","indexOf","substring","updateCacheModule","module","needRebuild","needBuild","callback","undefined","build","options","compilation","resolver","fileSystem","buildInfo","cacheable","hash","_computeHash","outputOptions","hashFunction","buildMeta","util","createHash","update","digest","updateHash","serialize","write","deserialize","read","set","serialization","register","resolve","__dirname","instance","contextModule","dep","getCssDependency","CssDependency","Dependency","getResourceIdentifier","getModuleEvaluationSideEffectsState","ModuleGraphConnection","TRANSITIVE_ONLY","baseDataPath","_sortedModulesCache","Object","assign","filename","ignoreOrder","experimentalUseImportModule","runtime","runtimeOptions","insert","linkType","attributes","chunkFilename","hasName","includes","hasId","hasChunkHash","hasContentHash","replace","apply","compiler","experiments","executeModule","add","registerLoader","splitChunks","optimization","defaultSizeTypes","push","NormalModule","hooks","tap","loader","normalModuleHook","getCompilationHooks","loaderContext","thisCompilation","CssModuleFactory","create","dependencies","dependency","dependencyFactories","CssDependencyTemplate","dependencyTemplates","renderManifest","result","chunk","chunkGraph","HotUpdateChunk","renderedModules","Array","from","getChunkModules","filter","type","filenameTemplate","canBeInitial","render","renderContentAsset","runtimeTemplate","contentHashType","pathOptions","contentHash","modules","sortModules","getChunkModulesIterableBySourceType","hashDigest","hashDigestLength","m","getModuleHash","Template","RuntimeGlobals","RuntimeModule","getCssChunkObject","mainChunk","obj","getAllAsyncChunks","getOrderedChunkModulesIterable","CssLoadingRuntimeModule","generate","crossOriginLoading","chunkMap","withLoading","ensureChunkHandlers","keys","withHmr","hmrDownloadUpdateHandlers","asString","basicFunction","entries","map","entry","key","value","JSON","stringify","indent","toString","publicPath","ids","join","enabledChunks","handler","test","getFullHash","addRuntimeModule","GetChunkFilenameRuntimeModule","referencedChunk","runtimeRequirementInTree","for","modulesIterable","usedModules","modulesList","moduleDependencies","moduleDependenciesReasons","modulesByChunkGroup","groupsIterable","chunkGroup","sortedModules","index","getModulePostOrderIndex","item","sort","a","b","i","reasons","j","reason","unusedModulesFilter","success","bestMatch","bestMatchDeps","list","deps","failedDeps","fallbackModule","warnings","Error","name","goodReasonsMap","goodReasons","failedChunkGroups","cg","goodChunkGroups","Boolean","pathData","ConcatSource","SourceMapSource","RawSource","source","externalsSource","startsWithAtRuleImport","header","pathinfo","reqStr","reqStrStar","repeat","headerStr","needLayer","getPathWithInfo","undoPath","outputPath","RegExp","entryOptions","getEntryOptions","baseUriReplacement","baseUri","exports"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/mini-css-extract-plugin/dist/index.js"],"sourcesContent":["\"use strict\";\n\n/* eslint-disable class-methods-use-this */\nconst path = require(\"path\");\n\nconst {\n  validate\n} = require(\"schema-utils\");\n\nconst schema = require(\"./plugin-options.json\");\n\nconst {\n  trueFn,\n  MODULE_TYPE,\n  AUTO_PUBLIC_PATH,\n  ABSOLUTE_PUBLIC_PATH,\n  SINGLE_DOT_PATH_SEGMENT,\n  compareModulesByIdentifier,\n  getUndoPath,\n  BASE_URI\n} = require(\"./utils\");\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"webpack\").ChunkGraph} ChunkGraph */\n\n/** @typedef {import(\"webpack\").Chunk} Chunk */\n\n/** @typedef {Parameters<import(\"webpack\").Chunk[\"isInGroup\"]>[0]} ChunkGroup */\n\n/** @typedef {import(\"webpack\").Module} Module */\n\n/** @typedef {import(\"webpack\").Dependency} Dependency */\n\n/** @typedef {import(\"webpack\").sources.Source} Source */\n\n/** @typedef {import(\"webpack\").Configuration} Configuration */\n\n/** @typedef {import(\"webpack\").WebpackError} WebpackError */\n\n/** @typedef {import(\"webpack\").AssetInfo} AssetInfo */\n\n/** @typedef {import(\"./loader.js\").Dependency} LoaderDependency */\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {string | ((resourcePath: string, rootContext: string) => string)} [publicPath]\n * @property {boolean} [emit]\n * @property {boolean} [esModule]\n * @property {string} [layer]\n */\n\n/**\n * @typedef {Object} PluginOptions\n * @property {Required<Configuration>['output']['filename']} [filename]\n * @property {Required<Configuration>['output']['chunkFilename']} [chunkFilename]\n * @property {boolean} [ignoreOrder]\n * @property {string | ((linkTag: HTMLLinkElement) => void)} [insert]\n * @property {Record<string, string>} [attributes]\n * @property {string | false | 'text/css'} [linkType]\n * @property {boolean} [runtime]\n * @property {boolean} [experimentalUseImportModule]\n */\n\n/**\n * @typedef {Object} NormalizedPluginOptions\n * @property {Required<Configuration>['output']['filename']} filename\n * @property {Required<Configuration>['output']['chunkFilename']} [chunkFilename]\n * @property {boolean} ignoreOrder\n * @property {string | ((linkTag: HTMLLinkElement) => void)} [insert]\n * @property {Record<string, string>} [attributes]\n * @property {string | false | 'text/css'} [linkType]\n * @property {boolean} runtime\n * @property {boolean} [experimentalUseImportModule]\n */\n\n/**\n * @typedef {Object} RuntimeOptions\n * @property {string | ((linkTag: HTMLLinkElement) => void) | undefined} insert\n * @property {string | false | 'text/css'} linkType\n * @property {Record<string, string> | undefined} attributes\n */\n\n/** @typedef {any} TODO */\n\n\nconst pluginName = \"mini-css-extract-plugin\";\nconst pluginSymbol = Symbol(pluginName);\nconst DEFAULT_FILENAME = \"[name].css\";\n/**\n * @type {Set<string>}\n */\n\nconst TYPES = new Set([MODULE_TYPE]);\n/**\n * @type {ReturnType<Module[\"codeGeneration\"]>}\n */\n\nconst CODE_GENERATION_RESULT = {\n  sources: new Map(),\n  runtimeRequirements: new Set()\n};\n/** @typedef {Module & { content: Buffer, media?: string, sourceMap?: Buffer, supports?: string, layer?: string, assets?: { [key: string]: TODO }, assetsInfo?: Map<string, AssetInfo> }} CssModule */\n\n/** @typedef {{ context: string | null, identifier: string, identifierIndex: number, content: Buffer, sourceMap?: Buffer, media?: string, supports?: string, layer?: TODO, assetsInfo?: Map<string, AssetInfo>, assets?: { [key: string]: TODO }}} CssModuleDependency */\n\n/** @typedef {{ new(dependency: CssModuleDependency): CssModule }} CssModuleConstructor */\n\n/** @typedef {Dependency & CssModuleDependency} CssDependency */\n\n/** @typedef {Omit<LoaderDependency, \"context\">} CssDependencyOptions */\n\n/** @typedef {{ new(loaderDependency: CssDependencyOptions, context: string | null, identifierIndex: number): CssDependency }} CssDependencyConstructor */\n\n/**\n *\n * @type {WeakMap<Compiler[\"webpack\"], CssModuleConstructor>}\n */\n\nconst cssModuleCache = new WeakMap();\n/**\n * @type {WeakMap<Compiler[\"webpack\"], CssDependencyConstructor>}\n */\n\nconst cssDependencyCache = new WeakMap();\n/**\n * @type {WeakSet<Compiler[\"webpack\"]>}\n */\n\nconst registered = new WeakSet();\n\nclass MiniCssExtractPlugin {\n  /**\n   * @param {Compiler[\"webpack\"]} webpack\n   * @returns {CssModuleConstructor}\n   */\n  static getCssModule(webpack) {\n    /**\n     * Prevent creation of multiple CssModule classes to allow other integrations to get the current CssModule.\n     */\n    if (cssModuleCache.has(webpack)) {\n      return (\n        /** @type {CssModuleConstructor} */\n        cssModuleCache.get(webpack)\n      );\n    }\n\n    class CssModule extends webpack.Module {\n      /**\n       * @param {CssModuleDependency} dependency\n       */\n      constructor({\n        context,\n        identifier,\n        identifierIndex,\n        content,\n        layer,\n        supports,\n        media,\n        sourceMap,\n        assets,\n        assetsInfo\n      }) {\n        super(MODULE_TYPE,\n        /** @type {string | undefined} */\n        context);\n        this.id = \"\";\n        this._context = context;\n        this._identifier = identifier;\n        this._identifierIndex = identifierIndex;\n        this.content = content;\n        this.layer = layer;\n        this.supports = supports;\n        this.media = media;\n        this.sourceMap = sourceMap;\n        this.assets = assets;\n        this.assetsInfo = assetsInfo;\n        this._needBuild = true;\n      } // no source() so webpack 4 doesn't do add stuff to the bundle\n\n\n      size() {\n        return this.content.length;\n      }\n\n      identifier() {\n        return `css|${this._identifier}|${this._identifierIndex}`;\n      }\n      /**\n       * @param {Parameters<Module[\"readableIdentifier\"]>[0]} requestShortener\n       * @returns {ReturnType<Module[\"readableIdentifier\"]>}\n       */\n\n\n      readableIdentifier(requestShortener) {\n        return `css ${requestShortener.shorten(this._identifier)}${this._identifierIndex ? ` (${this._identifierIndex})` : \"\"}`;\n      } // eslint-disable-next-line class-methods-use-this\n\n\n      getSourceTypes() {\n        return TYPES;\n      } // eslint-disable-next-line class-methods-use-this\n\n\n      codeGeneration() {\n        return CODE_GENERATION_RESULT;\n      }\n\n      nameForCondition() {\n        const resource =\n        /** @type {string} */\n        this._identifier.split(\"!\").pop();\n\n        const idx = resource.indexOf(\"?\");\n\n        if (idx >= 0) {\n          return resource.substring(0, idx);\n        }\n\n        return resource;\n      }\n      /**\n       * @param {Module} module\n       */\n\n\n      updateCacheModule(module) {\n        if (this.content !==\n        /** @type {CssModule} */\n        module.content || this.layer !==\n        /** @type {CssModule} */\n        module.layer || this.supports !==\n        /** @type {CssModule} */\n        module.supports || this.media !==\n        /** @type {CssModule} */\n        module.media || this.sourceMap !==\n        /** @type {CssModule} */\n        module.sourceMap || this.assets !==\n        /** @type {CssModule} */\n        module.assets || this.assetsInfo !==\n        /** @type {CssModule} */\n        module.assetsInfo) {\n          this._needBuild = true;\n          this.content =\n          /** @type {CssModule} */\n          module.content;\n          this.layer =\n          /** @type {CssModule} */\n          module.layer;\n          this.supports =\n          /** @type {CssModule} */\n          module.supports;\n          this.media =\n          /** @type {CssModule} */\n          module.media;\n          this.sourceMap =\n          /** @type {CssModule} */\n          module.sourceMap;\n          this.assets =\n          /** @type {CssModule} */\n          module.assets;\n          this.assetsInfo =\n          /** @type {CssModule} */\n          module.assetsInfo;\n        }\n      } // eslint-disable-next-line class-methods-use-this\n\n\n      needRebuild() {\n        return this._needBuild;\n      } // eslint-disable-next-line class-methods-use-this\n\n      /**\n       * @param {Parameters<Module[\"needBuild\"]>[0]} context context info\n       * @param {Parameters<Module[\"needBuild\"]>[1]} callback callback function, returns true, if the module needs a rebuild\n       */\n\n\n      needBuild(context, callback) {\n        // eslint-disable-next-line no-undefined\n        callback(undefined, this._needBuild);\n      }\n      /**\n       * @param {Parameters<Module[\"build\"]>[0]} options\n       * @param {Parameters<Module[\"build\"]>[1]} compilation\n       * @param {Parameters<Module[\"build\"]>[2]} resolver\n       * @param {Parameters<Module[\"build\"]>[3]} fileSystem\n       * @param {Parameters<Module[\"build\"]>[4]} callback\n       */\n\n\n      build(options, compilation, resolver, fileSystem, callback) {\n        this.buildInfo = {\n          assets: this.assets,\n          assetsInfo: this.assetsInfo,\n          cacheable: true,\n          hash: this._computeHash(\n          /** @type {string} */\n          compilation.outputOptions.hashFunction)\n        };\n        this.buildMeta = {};\n        this._needBuild = false;\n        callback();\n      }\n      /**\n       * @private\n       * @param {string} hashFunction\n       * @returns {string | Buffer}\n       */\n\n\n      _computeHash(hashFunction) {\n        const hash = webpack.util.createHash(hashFunction);\n        hash.update(this.content);\n\n        if (this.layer) {\n          hash.update(this.layer);\n        }\n\n        hash.update(this.supports || \"\");\n        hash.update(this.media || \"\");\n        hash.update(this.sourceMap || \"\");\n        return hash.digest(\"hex\");\n      }\n      /**\n       * @param {Parameters<Module[\"updateHash\"]>[0]} hash\n       * @param {Parameters<Module[\"updateHash\"]>[1]} context\n       */\n\n\n      updateHash(hash, context) {\n        super.updateHash(hash, context);\n        hash.update(this.buildInfo.hash);\n      }\n      /**\n       * @param {Parameters<Module[\"serialize\"]>[0]} context\n       */\n\n\n      serialize(context) {\n        const {\n          write\n        } = context;\n        write(this._context);\n        write(this._identifier);\n        write(this._identifierIndex);\n        write(this.content);\n        write(this.layer);\n        write(this.supports);\n        write(this.media);\n        write(this.sourceMap);\n        write(this.assets);\n        write(this.assetsInfo);\n        write(this._needBuild);\n        super.serialize(context);\n      }\n      /**\n       * @param {Parameters<Module[\"deserialize\"]>[0]} context\n       */\n\n\n      deserialize(context) {\n        this._needBuild = context.read();\n        super.deserialize(context);\n      }\n\n    }\n\n    cssModuleCache.set(webpack, CssModule);\n    webpack.util.serialization.register(CssModule, path.resolve(__dirname, \"CssModule\"), // @ts-ignore\n    null, {\n      serialize(instance, context) {\n        instance.serialize(context);\n      },\n\n      deserialize(context) {\n        const {\n          read\n        } = context;\n        const contextModule = read();\n        const identifier = read();\n        const identifierIndex = read();\n        const content = read();\n        const layer = read();\n        const supports = read();\n        const media = read();\n        const sourceMap = read();\n        const assets = read();\n        const assetsInfo = read();\n        const dep = new CssModule({\n          context: contextModule,\n          identifier,\n          identifierIndex,\n          content,\n          layer,\n          supports,\n          media,\n          sourceMap,\n          assets,\n          assetsInfo\n        });\n        dep.deserialize(context);\n        return dep;\n      }\n\n    });\n    return CssModule;\n  }\n  /**\n   * @param {Compiler[\"webpack\"]} webpack\n   * @returns {CssDependencyConstructor}\n   */\n\n\n  static getCssDependency(webpack) {\n    /**\n     * Prevent creation of multiple CssDependency classes to allow other integrations to get the current CssDependency.\n     */\n    if (cssDependencyCache.has(webpack)) {\n      return (\n        /** @type {CssDependencyConstructor} */\n        cssDependencyCache.get(webpack)\n      );\n    }\n\n    class CssDependency extends webpack.Dependency {\n      /**\n       * @param {CssDependencyOptions} loaderDependency\n       * @param {string | null} context\n       * @param {number} identifierIndex\n       */\n      constructor({\n        identifier,\n        content,\n        layer,\n        supports,\n        media,\n        sourceMap\n      }, context, identifierIndex) {\n        super();\n        this.identifier = identifier;\n        this.identifierIndex = identifierIndex;\n        this.content = content;\n        this.layer = layer;\n        this.supports = supports;\n        this.media = media;\n        this.sourceMap = sourceMap;\n        this.context = context;\n        /** @type {{ [key: string]: Source } | undefined}} */\n        // eslint-disable-next-line no-undefined\n\n        this.assets = undefined;\n        /** @type {Map<string, AssetInfo> | undefined} */\n        // eslint-disable-next-line no-undefined\n\n        this.assetsInfo = undefined;\n      }\n      /**\n       * @returns {ReturnType<Dependency[\"getResourceIdentifier\"]>}\n       */\n\n\n      getResourceIdentifier() {\n        return `css-module-${this.identifier}-${this.identifierIndex}`;\n      }\n      /**\n       * @returns {ReturnType<Dependency[\"getModuleEvaluationSideEffectsState\"]>}\n       */\n      // eslint-disable-next-line class-methods-use-this\n\n\n      getModuleEvaluationSideEffectsState() {\n        return webpack.ModuleGraphConnection.TRANSITIVE_ONLY;\n      }\n      /**\n       * @param {Parameters<Dependency[\"serialize\"]>[0]} context\n       */\n\n\n      serialize(context) {\n        const {\n          write\n        } = context;\n        write(this.identifier);\n        write(this.content);\n        write(this.layer);\n        write(this.supports);\n        write(this.media);\n        write(this.sourceMap);\n        write(this.context);\n        write(this.identifierIndex);\n        write(this.assets);\n        write(this.assetsInfo);\n        super.serialize(context);\n      }\n      /**\n       * @param {Parameters<Dependency[\"deserialize\"]>[0]} context\n       */\n\n\n      deserialize(context) {\n        super.deserialize(context);\n      }\n\n    }\n\n    cssDependencyCache.set(webpack, CssDependency);\n    webpack.util.serialization.register(CssDependency, path.resolve(__dirname, \"CssDependency\"), // @ts-ignore\n    null, {\n      serialize(instance, context) {\n        instance.serialize(context);\n      },\n\n      deserialize(context) {\n        const {\n          read\n        } = context;\n        const dep = new CssDependency({\n          identifier: read(),\n          content: read(),\n          layer: read(),\n          supports: read(),\n          media: read(),\n          sourceMap: read()\n        }, read(), read());\n        const assets = read();\n        const assetsInfo = read();\n        dep.assets = assets;\n        dep.assetsInfo = assetsInfo;\n        dep.deserialize(context);\n        return dep;\n      }\n\n    });\n    return CssDependency;\n  }\n  /**\n   * @param {PluginOptions} [options]\n   */\n\n\n  constructor(options = {}) {\n    validate(\n    /** @type {Schema} */\n    schema, options, {\n      baseDataPath: \"options\"\n    });\n    /**\n     * @private\n     * @type {WeakMap<Chunk, Set<CssModule>>}\n     * @private\n     */\n\n    this._sortedModulesCache = new WeakMap();\n    /**\n     * @private\n     * @type {NormalizedPluginOptions}\n     */\n\n    this.options = Object.assign({\n      filename: DEFAULT_FILENAME,\n      ignoreOrder: false,\n      // TODO remove in the next major release\n      // eslint-disable-next-line no-undefined\n      experimentalUseImportModule: undefined,\n      runtime: true\n    }, options);\n    /**\n     * @private\n     * @type {RuntimeOptions}\n     */\n\n    this.runtimeOptions = {\n      insert: options.insert,\n      linkType: // Todo in next major release set default to \"false\"\n      typeof options.linkType === \"boolean\" &&\n      /** @type {boolean} */\n      options.linkType === true || typeof options.linkType === \"undefined\" ? \"text/css\" : options.linkType,\n      attributes: options.attributes\n    };\n\n    if (!this.options.chunkFilename) {\n      const {\n        filename\n      } = this.options;\n\n      if (typeof filename !== \"function\") {\n        const hasName =\n        /** @type {string} */\n        filename.includes(\"[name]\");\n        const hasId =\n        /** @type {string} */\n        filename.includes(\"[id]\");\n        const hasChunkHash =\n        /** @type {string} */\n        filename.includes(\"[chunkhash]\");\n        const hasContentHash =\n        /** @type {string} */\n        filename.includes(\"[contenthash]\"); // Anything changing depending on chunk is fine\n\n        if (hasChunkHash || hasContentHash || hasName || hasId) {\n          this.options.chunkFilename = filename;\n        } else {\n          // Otherwise prefix \"[id].\" in front of the basename to make it changing\n          this.options.chunkFilename =\n          /** @type {string} */\n          filename.replace(/(^|\\/)([^/]*(?:\\?|$))/, \"$1[id].$2\");\n        }\n      } else {\n        this.options.chunkFilename = \"[id].css\";\n      }\n    }\n  }\n  /**\n   * @param {Compiler} compiler\n   */\n\n\n  apply(compiler) {\n    const {\n      webpack\n    } = compiler;\n\n    if (this.options.experimentalUseImportModule) {\n      if (typeof\n      /** @type {Compiler[\"options\"][\"experiments\"] & { executeModule?: boolean }} */\n      compiler.options.experiments.executeModule === \"undefined\") {\n        /** @type {Compiler[\"options\"][\"experiments\"] & { executeModule?: boolean }} */\n        // eslint-disable-next-line no-param-reassign\n        compiler.options.experiments.executeModule = true;\n      }\n    } // TODO bug in webpack, remove it after it will be fixed\n    // webpack tries to `require` loader firstly when serializer doesn't found\n\n\n    if (!registered.has(webpack)) {\n      registered.add(webpack);\n      webpack.util.serialization.registerLoader(/^mini-css-extract-plugin\\//, trueFn);\n    }\n\n    const {\n      splitChunks\n    } = compiler.options.optimization;\n\n    if (splitChunks) {\n      if (\n      /** @type {string[]} */\n      splitChunks.defaultSizeTypes.includes(\"...\")) {\n        /** @type {string[]} */\n        splitChunks.defaultSizeTypes.push(MODULE_TYPE);\n      }\n    }\n\n    const CssModule = MiniCssExtractPlugin.getCssModule(webpack);\n    const CssDependency = MiniCssExtractPlugin.getCssDependency(webpack);\n    const {\n      NormalModule\n    } = compiler.webpack;\n    compiler.hooks.compilation.tap(pluginName, compilation => {\n      const {\n        loader: normalModuleHook\n      } = NormalModule.getCompilationHooks(compilation);\n      normalModuleHook.tap(pluginName,\n      /**\n       * @param {object} loaderContext\n       */\n      loaderContext => {\n        /** @type {object & { [pluginSymbol]: { experimentalUseImportModule: boolean | undefined } }} */\n        // eslint-disable-next-line no-param-reassign\n        loaderContext[pluginSymbol] = {\n          experimentalUseImportModule: this.options.experimentalUseImportModule\n        };\n      });\n    });\n    compiler.hooks.thisCompilation.tap(pluginName, compilation => {\n      class CssModuleFactory {\n        /**\n         * @param {{ dependencies: Dependency[] }} dependencies\n         * @param {(arg0?: Error, arg1?: TODO) => void} callback\n         */\n        // eslint-disable-next-line class-methods-use-this\n        create({\n          dependencies: [dependency]\n        }, callback) {\n          // eslint-disable-next-line no-undefined\n          callback(undefined, new CssModule(\n          /** @type {CssDependency} */\n          dependency));\n        }\n\n      }\n\n      compilation.dependencyFactories.set(CssDependency, new CssModuleFactory());\n\n      class CssDependencyTemplate {\n        // eslint-disable-next-line class-methods-use-this\n        apply() {}\n\n      }\n\n      compilation.dependencyTemplates.set(CssDependency, new CssDependencyTemplate());\n      compilation.hooks.renderManifest.tap(pluginName,\n      /**\n       * @param {ReturnType<Compilation[\"getRenderManifest\"]>} result\n       * @param {Parameters<Compilation[\"getRenderManifest\"]>[0]} chunk\n       * @returns {TODO}\n       */\n      (result, {\n        chunk\n      }) => {\n        const {\n          chunkGraph\n        } = compilation;\n        const {\n          HotUpdateChunk\n        } = webpack; // We don't need hot update chunks for css\n        // We will use the real asset instead to update\n\n        if (chunk instanceof HotUpdateChunk) {\n          return;\n        }\n        /** @type {CssModule[]} */\n\n\n        const renderedModules = Array.from(\n        /** @type {CssModule[]} */\n        this.getChunkModules(chunk, chunkGraph)).filter(module => module.type === MODULE_TYPE);\n        const filenameTemplate =\n        /** @type {string} */\n        chunk.canBeInitial() ? this.options.filename : this.options.chunkFilename;\n\n        if (renderedModules.length > 0) {\n          result.push({\n            render: () => this.renderContentAsset(compiler, compilation, chunk, renderedModules, compilation.runtimeTemplate.requestShortener, filenameTemplate, {\n              contentHashType: MODULE_TYPE,\n              chunk\n            }),\n            filenameTemplate,\n            pathOptions: {\n              chunk,\n              contentHashType: MODULE_TYPE\n            },\n            identifier: `${pluginName}.${chunk.id}`,\n            hash: chunk.contentHash[MODULE_TYPE]\n          });\n        }\n      });\n      compilation.hooks.contentHash.tap(pluginName, chunk => {\n        const {\n          outputOptions,\n          chunkGraph\n        } = compilation;\n        const modules = this.sortModules(compilation, chunk,\n        /** @type {CssModule[]} */\n        chunkGraph.getChunkModulesIterableBySourceType(chunk, MODULE_TYPE), compilation.runtimeTemplate.requestShortener);\n\n        if (modules) {\n          const {\n            hashFunction,\n            hashDigest,\n            hashDigestLength\n          } = outputOptions;\n          const {\n            createHash\n          } = compiler.webpack.util;\n          const hash = createHash(\n          /** @type {string} */\n          hashFunction);\n\n          for (const m of modules) {\n            hash.update(chunkGraph.getModuleHash(m, chunk.runtime));\n          } // eslint-disable-next-line no-param-reassign\n\n\n          chunk.contentHash[MODULE_TYPE] =\n          /** @type {string} */\n          hash.digest(hashDigest).substring(0, hashDigestLength);\n        }\n      }); // All the code below is dedicated to the runtime and can be skipped when the `runtime` option is `false`\n\n      if (!this.options.runtime) {\n        return;\n      }\n\n      const {\n        Template,\n        RuntimeGlobals,\n        RuntimeModule,\n        runtime\n      } = webpack;\n      /**\n       * @param {Chunk} mainChunk\n       * @param {Compilation} compilation\n       * @returns {Record<string, number>}\n       */\n      // eslint-disable-next-line no-shadow\n\n      const getCssChunkObject = (mainChunk, compilation) => {\n        /** @type {Record<string, number>} */\n        const obj = {};\n        const {\n          chunkGraph\n        } = compilation;\n\n        for (const chunk of mainChunk.getAllAsyncChunks()) {\n          const modules = chunkGraph.getOrderedChunkModulesIterable(chunk, compareModulesByIdentifier);\n\n          for (const module of modules) {\n            if (module.type === MODULE_TYPE) {\n              obj[\n              /** @type {string} */\n              chunk.id] = 1;\n              break;\n            }\n          }\n        }\n\n        return obj;\n      };\n\n      class CssLoadingRuntimeModule extends RuntimeModule {\n        /**\n         * @param {Set<string>} runtimeRequirements\n         * @param {RuntimeOptions} runtimeOptions\n         */\n        constructor(runtimeRequirements, runtimeOptions) {\n          super(\"css loading\", 10);\n          this.runtimeRequirements = runtimeRequirements;\n          this.runtimeOptions = runtimeOptions;\n        }\n\n        generate() {\n          const {\n            chunk,\n            runtimeRequirements\n          } = this;\n          const {\n            runtimeTemplate,\n            outputOptions: {\n              crossOriginLoading\n            }\n          } = this.compilation;\n          const chunkMap = getCssChunkObject(chunk, this.compilation);\n          const withLoading = runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers) && Object.keys(chunkMap).length > 0;\n          const withHmr = runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);\n\n          if (!withLoading && !withHmr) {\n            return \"\";\n          }\n\n          return Template.asString([`var createStylesheet = ${runtimeTemplate.basicFunction(\"chunkId, fullhref, resolve, reject\", ['var linkTag = document.createElement(\"link\");', this.runtimeOptions.attributes ? Template.asString(Object.entries(this.runtimeOptions.attributes).map(entry => {\n            const [key, value] = entry;\n            return `linkTag.setAttribute(${JSON.stringify(key)}, ${JSON.stringify(value)});`;\n          })) : \"\", 'linkTag.rel = \"stylesheet\";', this.runtimeOptions.linkType ? `linkTag.type = ${JSON.stringify(this.runtimeOptions.linkType)};` : \"\", `var onLinkComplete = ${runtimeTemplate.basicFunction(\"event\", [\"// avoid mem leaks.\", \"linkTag.onerror = linkTag.onload = null;\", \"if (event.type === 'load') {\", Template.indent([\"resolve();\"]), \"} else {\", Template.indent([\"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\", \"var realHref = event && event.target && event.target.href || fullhref;\", 'var err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\\\n(\" + realHref + \")\");', 'err.code = \"CSS_CHUNK_LOAD_FAILED\";', \"err.type = errorType;\", \"err.request = realHref;\", \"linkTag.parentNode.removeChild(linkTag)\", \"reject(err);\"]), \"}\"])}`, \"linkTag.onerror = linkTag.onload = onLinkComplete;\", \"linkTag.href = fullhref;\", crossOriginLoading ? Template.asString([`if (linkTag.href.indexOf(window.location.origin + '/') !== 0) {`, Template.indent(`linkTag.crossOrigin = ${JSON.stringify(crossOriginLoading)};`), \"}\"]) : \"\", typeof this.runtimeOptions.insert !== \"undefined\" ? typeof this.runtimeOptions.insert === \"function\" ? `(${this.runtimeOptions.insert.toString()})(linkTag)` : Template.asString([`var target = document.querySelector(\"${this.runtimeOptions.insert}\");`, `target.parentNode.insertBefore(linkTag, target.nextSibling);`]) : Template.asString([\"document.head.appendChild(linkTag);\"]), \"return linkTag;\"])};`, `var findStylesheet = ${runtimeTemplate.basicFunction(\"href, fullhref\", ['var existingLinkTags = document.getElementsByTagName(\"link\");', \"for(var i = 0; i < existingLinkTags.length; i++) {\", Template.indent([\"var tag = existingLinkTags[i];\", 'var dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");', 'if(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;']), \"}\", 'var existingStyleTags = document.getElementsByTagName(\"style\");', \"for(var i = 0; i < existingStyleTags.length; i++) {\", Template.indent([\"var tag = existingStyleTags[i];\", 'var dataHref = tag.getAttribute(\"data-href\");', \"if(dataHref === href || dataHref === fullhref) return tag;\"]), \"}\"])};`, `var loadStylesheet = ${runtimeTemplate.basicFunction(\"chunkId\", `return new Promise(${runtimeTemplate.basicFunction(\"resolve, reject\", [`var href = ${RuntimeGlobals.require}.miniCssF(chunkId);`, `var fullhref = ${RuntimeGlobals.publicPath} + href;`, \"if(findStylesheet(href, fullhref)) return resolve();\", \"createStylesheet(chunkId, fullhref, resolve, reject);\"])});`)}`, withLoading ? Template.asString([\"// object to store loaded CSS chunks\", \"var installedCssChunks = {\", Template.indent(\n          /** @type {string[]} */\n          chunk.ids.map(id => `${JSON.stringify(id)}: 0`).join(\",\\n\")), \"};\", \"\", `${RuntimeGlobals.ensureChunkHandlers}.miniCss = ${runtimeTemplate.basicFunction(\"chunkId, promises\", [`var cssChunks = ${JSON.stringify(chunkMap)};`, \"if(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\", \"else if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\", Template.indent([`promises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(${runtimeTemplate.basicFunction(\"\", \"installedCssChunks[chunkId] = 0;\")}, ${runtimeTemplate.basicFunction(\"e\", [\"delete installedCssChunks[chunkId];\", \"throw e;\"])}));`]), \"}\"])};`]) : \"// no chunk loading\", \"\", withHmr ? Template.asString([\"var oldTags = [];\", \"var newTags = [];\", `var applyHandler = ${runtimeTemplate.basicFunction(\"options\", [`return { dispose: ${runtimeTemplate.basicFunction(\"\", [\"for(var i = 0; i < oldTags.length; i++) {\", Template.indent([\"var oldTag = oldTags[i];\", \"if(oldTag.parentNode) oldTag.parentNode.removeChild(oldTag);\"]), \"}\", \"oldTags.length = 0;\"])}, apply: ${runtimeTemplate.basicFunction(\"\", ['for(var i = 0; i < newTags.length; i++) newTags[i].rel = \"stylesheet\";', \"newTags.length = 0;\"])} };`])}`, `${RuntimeGlobals.hmrDownloadUpdateHandlers}.miniCss = ${runtimeTemplate.basicFunction(\"chunkIds, removedChunks, removedModules, promises, applyHandlers, updatedModulesList\", [\"applyHandlers.push(applyHandler);\", `chunkIds.forEach(${runtimeTemplate.basicFunction(\"chunkId\", [`var href = ${RuntimeGlobals.require}.miniCssF(chunkId);`, `var fullhref = ${RuntimeGlobals.publicPath} + href;`, \"var oldTag = findStylesheet(href, fullhref);\", \"if(!oldTag) return;\", `promises.push(new Promise(${runtimeTemplate.basicFunction(\"resolve, reject\", [`var tag = createStylesheet(chunkId, fullhref, ${runtimeTemplate.basicFunction(\"\", ['tag.as = \"style\";', 'tag.rel = \"preload\";', \"resolve();\"])}, reject);`, \"oldTags.push(oldTag);\", \"newTags.push(tag);\"])}));`])});`])}`]) : \"// no hmr\"]);\n        }\n\n      }\n\n      const enabledChunks = new WeakSet();\n      /**\n       * @param {Chunk} chunk\n       * @param {Set<string>} set\n       */\n\n      const handler = (chunk, set) => {\n        if (enabledChunks.has(chunk)) {\n          return;\n        }\n\n        enabledChunks.add(chunk);\n\n        if (typeof this.options.chunkFilename === \"string\" && /\\[(full)?hash(:\\d+)?\\]/.test(this.options.chunkFilename)) {\n          set.add(RuntimeGlobals.getFullHash);\n        }\n\n        set.add(RuntimeGlobals.publicPath);\n        compilation.addRuntimeModule(chunk, new runtime.GetChunkFilenameRuntimeModule(MODULE_TYPE, \"mini-css\", `${RuntimeGlobals.require}.miniCssF`,\n        /**\n         * @param {Chunk} referencedChunk\n         * @returns {TODO}\n         */\n        referencedChunk => {\n          if (!referencedChunk.contentHash[MODULE_TYPE]) {\n            return false;\n          }\n\n          return referencedChunk.canBeInitial() ? this.options.filename : this.options.chunkFilename;\n        }, false));\n        compilation.addRuntimeModule(chunk, new CssLoadingRuntimeModule(set, this.runtimeOptions));\n      };\n\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunkHandlers).tap(pluginName, handler);\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hmrDownloadUpdateHandlers).tap(pluginName, handler);\n    });\n  }\n  /**\n   * @private\n   * @param {Chunk} chunk\n   * @param {ChunkGraph} chunkGraph\n   * @returns {Iterable<Module>}\n   */\n\n\n  getChunkModules(chunk, chunkGraph) {\n    return typeof chunkGraph !== \"undefined\" ? chunkGraph.getOrderedChunkModulesIterable(chunk, compareModulesByIdentifier) : chunk.modulesIterable;\n  }\n  /**\n   * @private\n   * @param {Compilation} compilation\n   * @param {Chunk} chunk\n   * @param {CssModule[]} modules\n   * @param {Compilation[\"requestShortener\"]} requestShortener\n   * @returns {Set<CssModule>}\n   */\n\n\n  sortModules(compilation, chunk, modules, requestShortener) {\n    let usedModules = this._sortedModulesCache.get(chunk);\n\n    if (usedModules || !modules) {\n      return (\n        /** @type {Set<CssModule>} */\n        usedModules\n      );\n    }\n    /** @type {CssModule[]} */\n\n\n    const modulesList = [...modules]; // Store dependencies for modules\n\n    /** @type {Map<CssModule, Set<CssModule>>} */\n\n    const moduleDependencies = new Map(modulesList.map(m => [m,\n    /** @type {Set<CssModule>} */\n    new Set()]));\n    /** @type {Map<CssModule, Map<CssModule, Set<ChunkGroup>>>} */\n\n    const moduleDependenciesReasons = new Map(modulesList.map(m => [m, new Map()])); // Get ordered list of modules per chunk group\n    // This loop also gathers dependencies from the ordered lists\n    // Lists are in reverse order to allow to use Array.pop()\n\n    /** @type {CssModule[][]} */\n\n    const modulesByChunkGroup = Array.from(chunk.groupsIterable, chunkGroup => {\n      const sortedModules = modulesList.map(module => {\n        return {\n          module,\n          index: chunkGroup.getModulePostOrderIndex(module)\n        };\n      }) // eslint-disable-next-line no-undefined\n      .filter(item => item.index !== undefined).sort((a, b) => b.index - a.index).map(item => item.module);\n\n      for (let i = 0; i < sortedModules.length; i++) {\n        const set = moduleDependencies.get(sortedModules[i]);\n        const reasons =\n        /** @type {Map<CssModule, Set<ChunkGroup>>} */\n        moduleDependenciesReasons.get(sortedModules[i]);\n\n        for (let j = i + 1; j < sortedModules.length; j++) {\n          const module = sortedModules[j];\n          /** @type {Set<CssModule>} */\n\n          set.add(module);\n          const reason = reasons.get(module) ||\n          /** @type {Set<ChunkGroup>} */\n          new Set();\n          reason.add(chunkGroup);\n          reasons.set(module, reason);\n        }\n      }\n\n      return sortedModules;\n    }); // set with already included modules in correct order\n\n    usedModules = new Set();\n    /**\n     * @param {CssModule} m\n     * @returns {boolean}\n     */\n\n    const unusedModulesFilter = m => !\n    /** @type {Set<CssModule>} */\n    usedModules.has(m);\n\n    while (usedModules.size < modulesList.length) {\n      let success = false;\n      let bestMatch;\n      let bestMatchDeps; // get first module where dependencies are fulfilled\n\n      for (const list of modulesByChunkGroup) {\n        // skip and remove already added modules\n        while (list.length > 0 && usedModules.has(list[list.length - 1])) {\n          list.pop();\n        } // skip empty lists\n\n\n        if (list.length !== 0) {\n          const module = list[list.length - 1];\n          const deps = moduleDependencies.get(module); // determine dependencies that are not yet included\n\n          const failedDeps = Array.from(\n          /** @type {Set<CssModule>} */\n          deps).filter(unusedModulesFilter); // store best match for fallback behavior\n\n          if (!bestMatchDeps || bestMatchDeps.length > failedDeps.length) {\n            bestMatch = list;\n            bestMatchDeps = failedDeps;\n          }\n\n          if (failedDeps.length === 0) {\n            // use this module and remove it from list\n            usedModules.add(\n            /** @type {CssModule} */\n            list.pop());\n            success = true;\n            break;\n          }\n        }\n      }\n\n      if (!success) {\n        // no module found => there is a conflict\n        // use list with fewest failed deps\n        // and emit a warning\n        const fallbackModule =\n        /** @type {CssModule[]} */\n        bestMatch.pop();\n\n        if (!this.options.ignoreOrder) {\n          const reasons = moduleDependenciesReasons.get(\n          /** @type {CssModule} */\n          fallbackModule);\n          compilation.warnings.push(\n          /** @type {WebpackError} */\n          new Error([`chunk ${chunk.name || chunk.id} [${pluginName}]`, \"Conflicting order. Following module has been added:\", ` * ${\n          /** @type {CssModule} */\n          fallbackModule.readableIdentifier(requestShortener)}`, \"despite it was not able to fulfill desired ordering with these modules:\", ...\n          /** @type {CssModule[]} */\n          bestMatchDeps.map(m => {\n            const goodReasonsMap = moduleDependenciesReasons.get(m);\n            const goodReasons = goodReasonsMap && goodReasonsMap.get(\n            /** @type {CssModule} */\n            fallbackModule);\n            const failedChunkGroups = Array.from(\n            /** @type {Set<ChunkGroup>} */\n\n            /** @type {Map<CssModule, Set<ChunkGroup>>} */\n            reasons.get(m), cg => cg.name).join(\", \");\n            const goodChunkGroups = goodReasons && Array.from(goodReasons, cg => cg.name).join(\", \");\n            return [` * ${m.readableIdentifier(requestShortener)}`, `   - couldn't fulfill desired order of chunk group(s) ${failedChunkGroups}`, goodChunkGroups && `   - while fulfilling desired order of chunk group(s) ${goodChunkGroups}`].filter(Boolean).join(\"\\n\");\n          })].join(\"\\n\")));\n        }\n\n        usedModules.add(\n        /** @type {CssModule} */\n        fallbackModule);\n      }\n    }\n\n    this._sortedModulesCache.set(chunk, usedModules);\n\n    return usedModules;\n  }\n  /**\n   * @private\n   * @param {Compiler} compiler\n   * @param {Compilation} compilation\n   * @param {Chunk} chunk\n   * @param {CssModule[]} modules\n   * @param {Compiler[\"requestShortener\"]} requestShortener\n   * @param {string} filenameTemplate\n   * @param {Parameters<Exclude<Required<Configuration>['output']['filename'], string | undefined>>[0]} pathData\n   * @returns {Source}\n   */\n\n\n  renderContentAsset(compiler, compilation, chunk, modules, requestShortener, filenameTemplate, pathData) {\n    const usedModules = this.sortModules(compilation, chunk, modules, requestShortener);\n    const {\n      ConcatSource,\n      SourceMapSource,\n      RawSource\n    } = compiler.webpack.sources;\n    const source = new ConcatSource();\n    const externalsSource = new ConcatSource();\n\n    for (const module of usedModules) {\n      let content = module.content.toString();\n      const readableIdentifier = module.readableIdentifier(requestShortener);\n      const startsWithAtRuleImport = /^@import url/.test(content);\n      let header;\n\n      if (compilation.outputOptions.pathinfo) {\n        // From https://github.com/webpack/webpack/blob/29eff8a74ecc2f87517b627dee451c2af9ed3f3f/lib/ModuleInfoHeaderPlugin.js#L191-L194\n        const reqStr = readableIdentifier.replace(/\\*\\//g, \"*_/\");\n        const reqStrStar = \"*\".repeat(reqStr.length);\n        const headerStr = `/*!****${reqStrStar}****!*\\\\\\n  !*** ${reqStr} ***!\\n  \\\\****${reqStrStar}****/\\n`;\n        header = new RawSource(headerStr);\n      }\n\n      if (startsWithAtRuleImport) {\n        if (typeof header !== \"undefined\") {\n          externalsSource.add(header);\n        } // HACK for IE\n        // http://stackoverflow.com/a/14676665/1458162\n\n\n        if (module.media) {\n          // insert media into the @import\n          // this is rar\n          // TODO improve this and parse the CSS to support multiple medias\n          content = content.replace(/;|\\s*$/, module.media);\n        }\n\n        externalsSource.add(content);\n        externalsSource.add(\"\\n\");\n      } else {\n        if (typeof header !== \"undefined\") {\n          source.add(header);\n        }\n\n        if (module.supports) {\n          source.add(`@supports (${module.supports}) {\\n`);\n        }\n\n        if (module.media) {\n          source.add(`@media ${module.media} {\\n`);\n        }\n\n        const needLayer = typeof module.layer !== \"undefined\";\n\n        if (needLayer) {\n          source.add(`@layer${module.layer.length > 0 ? ` ${module.layer}` : \"\"} {\\n`);\n        }\n\n        const {\n          path: filename\n        } = compilation.getPathWithInfo(filenameTemplate, pathData);\n        const undoPath = getUndoPath(filename, compiler.outputPath, false); // replacements\n\n        content = content.replace(new RegExp(ABSOLUTE_PUBLIC_PATH, \"g\"), \"\");\n        content = content.replace(new RegExp(SINGLE_DOT_PATH_SEGMENT, \"g\"), \".\");\n        content = content.replace(new RegExp(AUTO_PUBLIC_PATH, \"g\"), undoPath);\n        const entryOptions = chunk.getEntryOptions();\n        const baseUriReplacement = entryOptions && entryOptions.baseUri || undoPath;\n        content = content.replace(new RegExp(BASE_URI, \"g\"), baseUriReplacement);\n\n        if (module.sourceMap) {\n          source.add(new SourceMapSource(content, readableIdentifier, module.sourceMap.toString()));\n        } else {\n          source.add(new RawSource(content));\n        }\n\n        source.add(\"\\n\");\n\n        if (needLayer) {\n          source.add(\"}\\n\");\n        }\n\n        if (module.media) {\n          source.add(\"}\\n\");\n        }\n\n        if (module.supports) {\n          source.add(\"}\\n\");\n        }\n      }\n    }\n\n    return new ConcatSource(externalsSource, source);\n  }\n\n}\n\nMiniCssExtractPlugin.pluginName = pluginName;\nMiniCssExtractPlugin.pluginSymbol = pluginSymbol;\nMiniCssExtractPlugin.loader = require.resolve(\"./loader\");\nmodule.exports = MiniCssExtractPlugin;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}