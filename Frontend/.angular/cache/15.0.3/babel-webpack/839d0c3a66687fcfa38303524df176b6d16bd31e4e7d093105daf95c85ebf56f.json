{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) 2015-present, Waysact Pty Ltd\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Plugin = void 0;\nconst path_1 = require(\"path\");\nconst fs_1 = require(\"fs\");\nconst assert = __importStar(require(\"typed-assert\"));\nconst util_1 = require(\"./util\");\nconst assetTypeIntegrityKeys = [[\"js\", \"jsIntegrity\"], [\"css\", \"cssIntegrity\"]];\nclass Plugin {\n  constructor(compilation, options, reporter) {\n    /**\n     * @internal\n     */\n    this.assetIntegrity = new Map();\n    /**\n     * @internal\n     */\n    this.inverseAssetIntegrity = new Map();\n    /**\n     * @internal\n     */\n    this.hwpPublicPath = null;\n    /**\n     * @internal\n     */\n    this.sortedSccChunks = [];\n    /**\n     * @internal\n     */\n    this.chunkManifest = new Map();\n    /**\n     * @internal\n     */\n    this.hashByChunkId = new Map();\n    /**\n     * @internal\n     */\n    this.addMissingIntegrityHashes = assets => {\n      Object.keys(assets).forEach(assetKey => {\n        const asset = assets[assetKey];\n        let source;\n        try {\n          source = asset.source();\n        } catch (_) {\n          return;\n        }\n        this.updateAssetIntegrity(assetKey, util_1.computeIntegrity(this.options.hashFuncNames, source));\n      });\n    };\n    /**\n     * @internal\n     */\n    this.replaceAsset = (compiler, assets, hashByChunkId, chunkFile) => {\n      const oldSource = assets[chunkFile].source();\n      const hashFuncNames = this.options.hashFuncNames;\n      const newAsset = new compiler.webpack.sources.ReplaceSource(assets[chunkFile], chunkFile);\n      Array.from(hashByChunkId.entries()).forEach(idAndHash => {\n        const magicMarker = util_1.makePlaceholder(hashFuncNames, idAndHash[0]);\n        const magicMarkerPos = oldSource.indexOf(magicMarker);\n        if (magicMarkerPos >= 0) {\n          newAsset.replace(magicMarkerPos, magicMarkerPos + magicMarker.length - 1, idAndHash[1], chunkFile);\n        }\n      });\n      assets[chunkFile] = newAsset;\n      return newAsset;\n    };\n    this.warnAboutLongTermCaching = assetInfo => {\n      if ((assetInfo.fullhash || assetInfo.chunkhash || assetInfo.modulehash || assetInfo.contenthash) && !(assetInfo.contenthash && this.compilation.compiler.options.optimization.realContentHash)) {\n        this.reporter.warnOnce(\"Using [hash], [fullhash], [modulehash], or [chunkhash] is dangerous \\\nwith SRI. The same is true for [contenthash] when realContentHash is disabled. \\\nUse [contenthash] and ensure realContentHash is enabled. See the README for \\\nmore information.\");\n      }\n    };\n    /**\n     * @internal\n     */\n    this.processChunk = (chunk, assets) => {\n      Array.from(util_1.findChunks(chunk)).reverse().forEach(chunk => this.processChunkAssets(chunk, assets));\n    };\n    this.processChunkAssets = (childChunk, assets) => {\n      const files = Array.from(childChunk.files);\n      files.forEach(sourcePath => {\n        if (assets[sourcePath]) {\n          this.warnIfHotUpdate(assets[sourcePath].source());\n          const newAsset = this.replaceAsset(this.compilation.compiler, assets, this.hashByChunkId, sourcePath);\n          const integrity = util_1.computeIntegrity(this.options.hashFuncNames, newAsset.source());\n          if (childChunk.id !== null) {\n            this.hashByChunkId.set(childChunk.id, integrity);\n          }\n          this.updateAssetIntegrity(sourcePath, integrity);\n          this.compilation.updateAsset(sourcePath, x => x, assetInfo => {\n            if (!assetInfo) {\n              return undefined;\n            }\n            this.warnAboutLongTermCaching(assetInfo);\n            return {\n              ...assetInfo,\n              contenthash: Array.isArray(assetInfo.contenthash) ? [...new Set([...assetInfo.contenthash, integrity])] : assetInfo.contenthash ? [assetInfo.contenthash, integrity] : integrity\n            };\n          });\n        } else {\n          this.reporter.warnOnce(`No asset found for source path '${sourcePath}', options are ${Object.keys(assets).join(\", \")}`);\n        }\n      });\n    };\n    /**\n     * @internal\n     */\n    this.addAttribute = (elName, source) => {\n      if (!this.compilation.outputOptions.crossOriginLoading) {\n        this.reporter.errorOnce(\"webpack option output.crossOriginLoading not set, code splitting will not work!\");\n      }\n      return this.compilation.compiler.webpack.Template.asString([source, elName + `.integrity = ${util_1.sriHashVariableReference}[chunkId];`, elName + \".crossOrigin = \" + JSON.stringify(this.compilation.outputOptions.crossOriginLoading) + \";\"]);\n    };\n    /**\n     * @internal\n     */\n    this.processAssets = assets => {\n      if (this.options.hashLoading === \"lazy\") {\n        for (const scc of this.sortedSccChunks) {\n          for (const chunk of scc.nodes) {\n            this.processChunkAssets(chunk, assets);\n          }\n        }\n      } else {\n        Array.from(this.compilation.chunks).filter(chunk => chunk.hasRuntime()).forEach(chunk => {\n          this.processChunk(chunk, assets);\n        });\n      }\n      this.addMissingIntegrityHashes(assets);\n    };\n    /**\n     * @internal\n     */\n    this.hwpAssetPath = src => {\n      assert.isNotNull(this.hwpPublicPath);\n      return path_1.relative(this.hwpPublicPath, src);\n    };\n    /**\n     * @internal\n     */\n    this.getIntegrityChecksumForAsset = (assets, src) => {\n      if (this.assetIntegrity.has(src)) {\n        return this.assetIntegrity.get(src);\n      }\n      const normalizedSrc = util_1.normalizePath(src);\n      const normalizedKey = Object.keys(assets).find(assetKey => util_1.normalizePath(assetKey) === normalizedSrc);\n      if (normalizedKey) {\n        return this.assetIntegrity.get(normalizedKey);\n      }\n      return undefined;\n    };\n    /**\n     * @internal\n     */\n    this.processTag = tag => {\n      if (tag.attributes && Object.prototype.hasOwnProperty.call(tag.attributes, \"integrity\")) {\n        return;\n      }\n      const tagSrc = util_1.getTagSrc(tag);\n      if (!tagSrc) {\n        return;\n      }\n      const src = this.hwpAssetPath(tagSrc);\n      tag.attributes.integrity = this.getIntegrityChecksumForAsset(this.compilation.assets, src) || util_1.computeIntegrity(this.options.hashFuncNames, fs_1.readFileSync(path_1.join(this.compilation.compiler.outputPath, src)));\n      tag.attributes.crossorigin = this.compilation.compiler.options.output.crossOriginLoading || \"anonymous\";\n    };\n    /**\n     * @internal\n     */\n    this.beforeRuntimeRequirements = () => {\n      if (this.options.hashLoading === \"lazy\") {\n        const [sortedSccChunks, chunkManifest] = util_1.getChunkToManifestMap(this.compilation.chunks);\n        this.sortedSccChunks = sortedSccChunks;\n        this.chunkManifest = chunkManifest;\n      }\n      this.hashByChunkId.clear();\n    };\n    this.handleHwpPluginArgs = ({\n      assets\n    }) => {\n      this.hwpPublicPath = assets.publicPath;\n      assetTypeIntegrityKeys.forEach(([a, b]) => {\n        if (b) {\n          assets[b] = assets[a].map(filePath => this.getIntegrityChecksumForAsset(this.compilation.assets, this.hwpAssetPath(filePath))).filter(util_1.notNil);\n        }\n      });\n    };\n    this.updateHash = (input, oldHash) => {\n      const assetKey = this.inverseAssetIntegrity.get(oldHash);\n      if (assetKey && input.length === 1) {\n        const newIntegrity = util_1.computeIntegrity(this.options.hashFuncNames, input[0]);\n        this.inverseAssetIntegrity.delete(oldHash);\n        this.assetIntegrity.delete(assetKey);\n        this.updateAssetIntegrity(assetKey, newIntegrity);\n        return newIntegrity;\n      }\n      return undefined;\n    };\n    this.handleHwpBodyTags = ({\n      headTags,\n      bodyTags\n    }) => {\n      this.addMissingIntegrityHashes(this.compilation.assets);\n      headTags.concat(bodyTags).forEach(tag => this.processTag(tag));\n    };\n    this.compilation = compilation;\n    this.options = options;\n    this.reporter = reporter;\n  }\n  /**\n   * @internal\n   */\n  warnIfHotUpdate(source) {\n    if (source.indexOf(\"webpackHotUpdate\") >= 0) {\n      this.reporter.warnOnce(\"webpack-subresource-integrity may interfere with hot reloading. \" + \"Consider disabling this plugin in development mode.\");\n    }\n  }\n  /**\n   * @internal\n   */\n  updateAssetIntegrity(assetKey, integrity) {\n    if (!this.assetIntegrity.has(assetKey)) {\n      this.assetIntegrity.set(assetKey, integrity);\n      this.inverseAssetIntegrity.set(integrity, assetKey);\n    }\n  }\n  getChildChunksToAddToChunkManifest(chunk) {\n    var _a;\n    return (_a = this.chunkManifest.get(chunk)) !== null && _a !== void 0 ? _a : new Set();\n  }\n}\nexports.Plugin = Plugin;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","Plugin","path_1","require","fs_1","assert","util_1","assetTypeIntegrityKeys","constructor","compilation","options","reporter","assetIntegrity","Map","inverseAssetIntegrity","hwpPublicPath","sortedSccChunks","chunkManifest","hashByChunkId","addMissingIntegrityHashes","assets","keys","forEach","assetKey","asset","source","_","updateAssetIntegrity","computeIntegrity","hashFuncNames","replaceAsset","compiler","chunkFile","oldSource","newAsset","webpack","sources","ReplaceSource","Array","from","entries","idAndHash","magicMarker","makePlaceholder","magicMarkerPos","indexOf","replace","length","warnAboutLongTermCaching","assetInfo","fullhash","chunkhash","modulehash","contenthash","optimization","realContentHash","warnOnce","processChunk","chunk","findChunks","reverse","processChunkAssets","childChunk","files","sourcePath","warnIfHotUpdate","integrity","id","set","updateAsset","x","isArray","Set","join","addAttribute","elName","outputOptions","crossOriginLoading","errorOnce","Template","asString","sriHashVariableReference","JSON","stringify","processAssets","hashLoading","scc","nodes","chunks","filter","hasRuntime","hwpAssetPath","src","isNotNull","relative","getIntegrityChecksumForAsset","has","normalizedSrc","normalizePath","normalizedKey","find","processTag","tag","attributes","tagSrc","getTagSrc","readFileSync","outputPath","crossorigin","output","beforeRuntimeRequirements","getChunkToManifestMap","clear","handleHwpPluginArgs","publicPath","a","b","map","filePath","notNil","updateHash","input","oldHash","newIntegrity","delete","handleHwpBodyTags","headTags","bodyTags","concat","getChildChunksToAddToChunkManifest","_a"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/webpack-subresource-integrity/plugin.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) 2015-present, Waysact Pty Ltd\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Plugin = void 0;\nconst path_1 = require(\"path\");\nconst fs_1 = require(\"fs\");\nconst assert = __importStar(require(\"typed-assert\"));\nconst util_1 = require(\"./util\");\nconst assetTypeIntegrityKeys = [\n    [\"js\", \"jsIntegrity\"],\n    [\"css\", \"cssIntegrity\"],\n];\nclass Plugin {\n    constructor(compilation, options, reporter) {\n        /**\n         * @internal\n         */\n        this.assetIntegrity = new Map();\n        /**\n         * @internal\n         */\n        this.inverseAssetIntegrity = new Map();\n        /**\n         * @internal\n         */\n        this.hwpPublicPath = null;\n        /**\n         * @internal\n         */\n        this.sortedSccChunks = [];\n        /**\n         * @internal\n         */\n        this.chunkManifest = new Map();\n        /**\n         * @internal\n         */\n        this.hashByChunkId = new Map();\n        /**\n         * @internal\n         */\n        this.addMissingIntegrityHashes = (assets) => {\n            Object.keys(assets).forEach((assetKey) => {\n                const asset = assets[assetKey];\n                let source;\n                try {\n                    source = asset.source();\n                }\n                catch (_) {\n                    return;\n                }\n                this.updateAssetIntegrity(assetKey, util_1.computeIntegrity(this.options.hashFuncNames, source));\n            });\n        };\n        /**\n         * @internal\n         */\n        this.replaceAsset = (compiler, assets, hashByChunkId, chunkFile) => {\n            const oldSource = assets[chunkFile].source();\n            const hashFuncNames = this.options.hashFuncNames;\n            const newAsset = new compiler.webpack.sources.ReplaceSource(assets[chunkFile], chunkFile);\n            Array.from(hashByChunkId.entries()).forEach((idAndHash) => {\n                const magicMarker = util_1.makePlaceholder(hashFuncNames, idAndHash[0]);\n                const magicMarkerPos = oldSource.indexOf(magicMarker);\n                if (magicMarkerPos >= 0) {\n                    newAsset.replace(magicMarkerPos, magicMarkerPos + magicMarker.length - 1, idAndHash[1], chunkFile);\n                }\n            });\n            assets[chunkFile] = newAsset;\n            return newAsset;\n        };\n        this.warnAboutLongTermCaching = (assetInfo) => {\n            if ((assetInfo.fullhash ||\n                assetInfo.chunkhash ||\n                assetInfo.modulehash ||\n                assetInfo.contenthash) &&\n                !(assetInfo.contenthash &&\n                    this.compilation.compiler.options.optimization.realContentHash)) {\n                this.reporter.warnOnce(\"Using [hash], [fullhash], [modulehash], or [chunkhash] is dangerous \\\nwith SRI. The same is true for [contenthash] when realContentHash is disabled. \\\nUse [contenthash] and ensure realContentHash is enabled. See the README for \\\nmore information.\");\n            }\n        };\n        /**\n         * @internal\n         */\n        this.processChunk = (chunk, assets) => {\n            Array.from(util_1.findChunks(chunk))\n                .reverse()\n                .forEach((chunk) => this.processChunkAssets(chunk, assets));\n        };\n        this.processChunkAssets = (childChunk, assets) => {\n            const files = Array.from(childChunk.files);\n            files.forEach((sourcePath) => {\n                if (assets[sourcePath]) {\n                    this.warnIfHotUpdate(assets[sourcePath].source());\n                    const newAsset = this.replaceAsset(this.compilation.compiler, assets, this.hashByChunkId, sourcePath);\n                    const integrity = util_1.computeIntegrity(this.options.hashFuncNames, newAsset.source());\n                    if (childChunk.id !== null) {\n                        this.hashByChunkId.set(childChunk.id, integrity);\n                    }\n                    this.updateAssetIntegrity(sourcePath, integrity);\n                    this.compilation.updateAsset(sourcePath, (x) => x, (assetInfo) => {\n                        if (!assetInfo) {\n                            return undefined;\n                        }\n                        this.warnAboutLongTermCaching(assetInfo);\n                        return {\n                            ...assetInfo,\n                            contenthash: Array.isArray(assetInfo.contenthash)\n                                ? [...new Set([...assetInfo.contenthash, integrity])]\n                                : assetInfo.contenthash\n                                    ? [assetInfo.contenthash, integrity]\n                                    : integrity,\n                        };\n                    });\n                }\n                else {\n                    this.reporter.warnOnce(`No asset found for source path '${sourcePath}', options are ${Object.keys(assets).join(\", \")}`);\n                }\n            });\n        };\n        /**\n         * @internal\n         */\n        this.addAttribute = (elName, source) => {\n            if (!this.compilation.outputOptions.crossOriginLoading) {\n                this.reporter.errorOnce(\"webpack option output.crossOriginLoading not set, code splitting will not work!\");\n            }\n            return this.compilation.compiler.webpack.Template.asString([\n                source,\n                elName + `.integrity = ${util_1.sriHashVariableReference}[chunkId];`,\n                elName +\n                    \".crossOrigin = \" +\n                    JSON.stringify(this.compilation.outputOptions.crossOriginLoading) +\n                    \";\",\n            ]);\n        };\n        /**\n         * @internal\n         */\n        this.processAssets = (assets) => {\n            if (this.options.hashLoading === \"lazy\") {\n                for (const scc of this.sortedSccChunks) {\n                    for (const chunk of scc.nodes) {\n                        this.processChunkAssets(chunk, assets);\n                    }\n                }\n            }\n            else {\n                Array.from(this.compilation.chunks)\n                    .filter((chunk) => chunk.hasRuntime())\n                    .forEach((chunk) => {\n                    this.processChunk(chunk, assets);\n                });\n            }\n            this.addMissingIntegrityHashes(assets);\n        };\n        /**\n         * @internal\n         */\n        this.hwpAssetPath = (src) => {\n            assert.isNotNull(this.hwpPublicPath);\n            return path_1.relative(this.hwpPublicPath, src);\n        };\n        /**\n         * @internal\n         */\n        this.getIntegrityChecksumForAsset = (assets, src) => {\n            if (this.assetIntegrity.has(src)) {\n                return this.assetIntegrity.get(src);\n            }\n            const normalizedSrc = util_1.normalizePath(src);\n            const normalizedKey = Object.keys(assets).find((assetKey) => util_1.normalizePath(assetKey) === normalizedSrc);\n            if (normalizedKey) {\n                return this.assetIntegrity.get(normalizedKey);\n            }\n            return undefined;\n        };\n        /**\n         * @internal\n         */\n        this.processTag = (tag) => {\n            if (tag.attributes &&\n                Object.prototype.hasOwnProperty.call(tag.attributes, \"integrity\")) {\n                return;\n            }\n            const tagSrc = util_1.getTagSrc(tag);\n            if (!tagSrc) {\n                return;\n            }\n            const src = this.hwpAssetPath(tagSrc);\n            tag.attributes.integrity =\n                this.getIntegrityChecksumForAsset(this.compilation.assets, src) ||\n                    util_1.computeIntegrity(this.options.hashFuncNames, fs_1.readFileSync(path_1.join(this.compilation.compiler.outputPath, src)));\n            tag.attributes.crossorigin =\n                this.compilation.compiler.options.output.crossOriginLoading ||\n                    \"anonymous\";\n        };\n        /**\n         * @internal\n         */\n        this.beforeRuntimeRequirements = () => {\n            if (this.options.hashLoading === \"lazy\") {\n                const [sortedSccChunks, chunkManifest] = util_1.getChunkToManifestMap(this.compilation.chunks);\n                this.sortedSccChunks = sortedSccChunks;\n                this.chunkManifest = chunkManifest;\n            }\n            this.hashByChunkId.clear();\n        };\n        this.handleHwpPluginArgs = ({ assets }) => {\n            this.hwpPublicPath = assets.publicPath;\n            assetTypeIntegrityKeys.forEach(([a, b]) => {\n                if (b) {\n                    assets[b] = assets[a]\n                        .map((filePath) => this.getIntegrityChecksumForAsset(this.compilation.assets, this.hwpAssetPath(filePath)))\n                        .filter(util_1.notNil);\n                }\n            });\n        };\n        this.updateHash = (input, oldHash) => {\n            const assetKey = this.inverseAssetIntegrity.get(oldHash);\n            if (assetKey && input.length === 1) {\n                const newIntegrity = util_1.computeIntegrity(this.options.hashFuncNames, input[0]);\n                this.inverseAssetIntegrity.delete(oldHash);\n                this.assetIntegrity.delete(assetKey);\n                this.updateAssetIntegrity(assetKey, newIntegrity);\n                return newIntegrity;\n            }\n            return undefined;\n        };\n        this.handleHwpBodyTags = ({ headTags, bodyTags, }) => {\n            this.addMissingIntegrityHashes(this.compilation.assets);\n            headTags\n                .concat(bodyTags)\n                .forEach((tag) => this.processTag(tag));\n        };\n        this.compilation = compilation;\n        this.options = options;\n        this.reporter = reporter;\n    }\n    /**\n     * @internal\n     */\n    warnIfHotUpdate(source) {\n        if (source.indexOf(\"webpackHotUpdate\") >= 0) {\n            this.reporter.warnOnce(\"webpack-subresource-integrity may interfere with hot reloading. \" +\n                \"Consider disabling this plugin in development mode.\");\n        }\n    }\n    /**\n     * @internal\n     */\n    updateAssetIntegrity(assetKey, integrity) {\n        if (!this.assetIntegrity.has(assetKey)) {\n            this.assetIntegrity.set(assetKey, integrity);\n            this.inverseAssetIntegrity.set(integrity, assetKey);\n        }\n    }\n    getChildChunksToAddToChunkManifest(chunk) {\n        var _a;\n        return (_a = this.chunkManifest.get(chunk)) !== null && _a !== void 0 ? _a : new Set();\n    }\n}\nexports.Plugin = Plugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}