{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst remapping_1 = __importDefault(require(\"@ampproject/remapping\"));\nconst terser_1 = require(\"terser\");\nconst esbuild_executor_1 = require(\"./esbuild-executor\");\n/**\n * The cached esbuild executor.\n * This will automatically use the native or WASM version based on platform and availability\n * with the native version given priority due to its superior performance.\n */\nlet esbuild;\n/**\n * Handles optimization requests sent from the main thread via the `JavaScriptOptimizerPlugin`.\n */\nfunction default_1(_x) {\n  return _default_.apply(this, arguments);\n}\nfunction _default_() {\n  _default_ = _asyncToGenerator(function* ({\n    asset,\n    options\n  }) {\n    // esbuild is used as a first pass\n    const esbuildResult = yield optimizeWithEsbuild(asset.code, asset.name, options);\n    // terser is used as a second pass\n    const terserResult = yield optimizeWithTerser(asset.name, esbuildResult.code, options.sourcemap, options.advanced);\n    // Merge intermediate sourcemaps with input sourcemap if enabled\n    let fullSourcemap;\n    if (options.sourcemap) {\n      const partialSourcemaps = [];\n      if (esbuildResult.map) {\n        partialSourcemaps.unshift(JSON.parse(esbuildResult.map));\n      }\n      if (terserResult.map) {\n        partialSourcemaps.unshift(terserResult.map);\n      }\n      if (asset.map) {\n        partialSourcemaps.push(asset.map);\n      }\n      fullSourcemap = (0, remapping_1.default)(partialSourcemaps, () => null);\n    }\n    return {\n      name: asset.name,\n      code: terserResult.code,\n      map: fullSourcemap\n    };\n  });\n  return _default_.apply(this, arguments);\n}\nexports.default = default_1;\n/**\n * Optimizes a JavaScript asset using esbuild.\n *\n * @param content The JavaScript asset source content to optimize.\n * @param name The name of the JavaScript asset. Used to generate source maps.\n * @param options The optimization request options to apply to the content.\n * @returns A promise that resolves with the optimized code, source map, and any warnings.\n */\nfunction optimizeWithEsbuild(_x2, _x3, _x4) {\n  return _optimizeWithEsbuild.apply(this, arguments);\n}\n/**\n * Optimizes a JavaScript asset using terser.\n *\n * @param name The name of the JavaScript asset. Used to generate source maps.\n * @param code The JavaScript asset source content to optimize.\n * @param sourcemaps If true, generate an output source map for the optimized code.\n * @param advanced Controls advanced optimizations.\n * @returns A promise that resolves with the optimized code and source map.\n */\nfunction _optimizeWithEsbuild() {\n  _optimizeWithEsbuild = _asyncToGenerator(function* (content, name, options) {\n    if (!esbuild) {\n      esbuild = new esbuild_executor_1.EsbuildExecutor(options.alwaysUseWasm);\n    }\n    return esbuild.transform(content, {\n      minifyIdentifiers: !options.keepIdentifierNames,\n      minifySyntax: true,\n      // NOTE: Disabling whitespace ensures unused pure annotations are kept\n      minifyWhitespace: false,\n      pure: ['forwardRef'],\n      legalComments: options.removeLicenses ? 'none' : 'inline',\n      sourcefile: name,\n      sourcemap: options.sourcemap && 'external',\n      define: options.define,\n      // This option should always be disabled for browser builds as we don't rely on `.name`\n      // and causes deadcode to be retained which makes `NG_BUILD_MANGLE` unusable to investigate tree-shaking issues.\n      // We enable `keepNames` only for server builds as Domino relies on `.name`.\n      // Once we no longer rely on Domino for SSR we should be able to remove this.\n      keepNames: options.keepNames,\n      target: options.target\n    });\n  });\n  return _optimizeWithEsbuild.apply(this, arguments);\n}\nfunction optimizeWithTerser(_x5, _x6, _x7, _x8) {\n  return _optimizeWithTerser.apply(this, arguments);\n}\nfunction _optimizeWithTerser() {\n  _optimizeWithTerser = _asyncToGenerator(function* (name, code, sourcemaps, advanced) {\n    const result = yield (0, terser_1.minify)({\n      [name]: code\n    }, {\n      compress: {\n        passes: advanced ? 2 : 1,\n        pure_getters: advanced\n      },\n      // Set to ES2015 to prevent higher level features from being introduced when browserslist\n      // contains older browsers. The build system requires browsers to support ES2015 at a minimum.\n      ecma: 2015,\n      // esbuild in the first pass is used to minify identifiers instead of mangle here\n      mangle: false,\n      // esbuild in the first pass is used to minify function names\n      keep_fnames: true,\n      format: {\n        // ASCII output is enabled here as well to prevent terser from converting back to UTF-8\n        ascii_only: true,\n        wrap_func_args: false\n      },\n      sourceMap: sourcemaps && {\n        asObject: true\n        // typings don't include asObject option\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }\n    });\n\n    if (!result.code) {\n      throw new Error('Terser failed for unknown reason.');\n    }\n    return {\n      code: result.code,\n      map: result.map\n    };\n  });\n  return _optimizeWithTerser.apply(this, arguments);\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","remapping_1","require","terser_1","esbuild_executor_1","esbuild","default_1","asset","options","esbuildResult","optimizeWithEsbuild","code","name","terserResult","optimizeWithTerser","sourcemap","advanced","fullSourcemap","partialSourcemaps","map","unshift","JSON","parse","push","default","content","EsbuildExecutor","alwaysUseWasm","transform","minifyIdentifiers","keepIdentifierNames","minifySyntax","minifyWhitespace","pure","legalComments","removeLicenses","sourcefile","define","keepNames","target","sourcemaps","result","minify","compress","passes","pure_getters","ecma","mangle","keep_fnames","format","ascii_only","wrap_func_args","sourceMap","asObject","Error"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/webpack/plugins/javascript-optimizer-worker.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst remapping_1 = __importDefault(require(\"@ampproject/remapping\"));\nconst terser_1 = require(\"terser\");\nconst esbuild_executor_1 = require(\"./esbuild-executor\");\n/**\n * The cached esbuild executor.\n * This will automatically use the native or WASM version based on platform and availability\n * with the native version given priority due to its superior performance.\n */\nlet esbuild;\n/**\n * Handles optimization requests sent from the main thread via the `JavaScriptOptimizerPlugin`.\n */\nasync function default_1({ asset, options }) {\n    // esbuild is used as a first pass\n    const esbuildResult = await optimizeWithEsbuild(asset.code, asset.name, options);\n    // terser is used as a second pass\n    const terserResult = await optimizeWithTerser(asset.name, esbuildResult.code, options.sourcemap, options.advanced);\n    // Merge intermediate sourcemaps with input sourcemap if enabled\n    let fullSourcemap;\n    if (options.sourcemap) {\n        const partialSourcemaps = [];\n        if (esbuildResult.map) {\n            partialSourcemaps.unshift(JSON.parse(esbuildResult.map));\n        }\n        if (terserResult.map) {\n            partialSourcemaps.unshift(terserResult.map);\n        }\n        if (asset.map) {\n            partialSourcemaps.push(asset.map);\n        }\n        fullSourcemap = (0, remapping_1.default)(partialSourcemaps, () => null);\n    }\n    return { name: asset.name, code: terserResult.code, map: fullSourcemap };\n}\nexports.default = default_1;\n/**\n * Optimizes a JavaScript asset using esbuild.\n *\n * @param content The JavaScript asset source content to optimize.\n * @param name The name of the JavaScript asset. Used to generate source maps.\n * @param options The optimization request options to apply to the content.\n * @returns A promise that resolves with the optimized code, source map, and any warnings.\n */\nasync function optimizeWithEsbuild(content, name, options) {\n    if (!esbuild) {\n        esbuild = new esbuild_executor_1.EsbuildExecutor(options.alwaysUseWasm);\n    }\n    return esbuild.transform(content, {\n        minifyIdentifiers: !options.keepIdentifierNames,\n        minifySyntax: true,\n        // NOTE: Disabling whitespace ensures unused pure annotations are kept\n        minifyWhitespace: false,\n        pure: ['forwardRef'],\n        legalComments: options.removeLicenses ? 'none' : 'inline',\n        sourcefile: name,\n        sourcemap: options.sourcemap && 'external',\n        define: options.define,\n        // This option should always be disabled for browser builds as we don't rely on `.name`\n        // and causes deadcode to be retained which makes `NG_BUILD_MANGLE` unusable to investigate tree-shaking issues.\n        // We enable `keepNames` only for server builds as Domino relies on `.name`.\n        // Once we no longer rely on Domino for SSR we should be able to remove this.\n        keepNames: options.keepNames,\n        target: options.target,\n    });\n}\n/**\n * Optimizes a JavaScript asset using terser.\n *\n * @param name The name of the JavaScript asset. Used to generate source maps.\n * @param code The JavaScript asset source content to optimize.\n * @param sourcemaps If true, generate an output source map for the optimized code.\n * @param advanced Controls advanced optimizations.\n * @returns A promise that resolves with the optimized code and source map.\n */\nasync function optimizeWithTerser(name, code, sourcemaps, advanced) {\n    const result = await (0, terser_1.minify)({ [name]: code }, {\n        compress: {\n            passes: advanced ? 2 : 1,\n            pure_getters: advanced,\n        },\n        // Set to ES2015 to prevent higher level features from being introduced when browserslist\n        // contains older browsers. The build system requires browsers to support ES2015 at a minimum.\n        ecma: 2015,\n        // esbuild in the first pass is used to minify identifiers instead of mangle here\n        mangle: false,\n        // esbuild in the first pass is used to minify function names\n        keep_fnames: true,\n        format: {\n            // ASCII output is enabled here as well to prevent terser from converting back to UTF-8\n            ascii_only: true,\n            wrap_func_args: false,\n        },\n        sourceMap: sourcemaps &&\n            {\n                asObject: true,\n                // typings don't include asObject option\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            },\n    });\n    if (!result.code) {\n        throw new Error('Terser failed for unknown reason.');\n    }\n    return { code: result.code, map: result.map };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}