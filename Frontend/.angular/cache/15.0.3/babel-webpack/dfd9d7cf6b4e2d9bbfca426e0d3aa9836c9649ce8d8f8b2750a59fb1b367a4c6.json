{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.postcss = void 0;\nconst loader_utils_1 = require(\"loader-utils\");\nconst path = __importStar(require(\"path\"));\nconst url = __importStar(require(\"url\"));\nconst error_1 = require(\"../../utils/error\");\nfunction wrapUrl(url) {\n  let wrappedUrl;\n  const hasSingleQuotes = url.indexOf(\"'\") >= 0;\n  if (hasSingleQuotes) {\n    wrappedUrl = `\"${url}\"`;\n  } else {\n    wrappedUrl = `'${url}'`;\n  }\n  return `url(${wrappedUrl})`;\n}\nfunction resolve(_x, _x2, _x3) {\n  return _resolve.apply(this, arguments);\n}\nfunction _resolve() {\n  _resolve = _asyncToGenerator(function* (file, base, resolver) {\n    try {\n      return yield resolver('./' + file, base);\n    } catch {\n      return resolver(file, base);\n    }\n  });\n  return _resolve.apply(this, arguments);\n}\nexports.postcss = true;\nfunction default_1(options) {\n  if (!options) {\n    throw new Error('No options were specified to \"postcss-cli-resources\".');\n  }\n  const {\n    deployUrl = '',\n    resourcesOutputPath = '',\n    filename,\n    loader,\n    emitFile,\n    extracted\n  } = options;\n  const process = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (inputUrl, context, resourceCache) {\n      // If root-relative, absolute or protocol relative url, leave as is\n      if (/^((?:\\w+:)?\\/\\/|data:|chrome:|#)/.test(inputUrl)) {\n        return inputUrl;\n      }\n      if (/^\\//.test(inputUrl)) {\n        return inputUrl;\n      }\n      // If starts with a caret, remove and return remainder\n      // this supports bypassing asset processing\n      if (inputUrl.startsWith('^')) {\n        return inputUrl.slice(1);\n      }\n      const cacheKey = path.resolve(context, inputUrl);\n      const cachedUrl = resourceCache.get(cacheKey);\n      if (cachedUrl) {\n        return cachedUrl;\n      }\n      if (inputUrl.startsWith('~')) {\n        inputUrl = inputUrl.slice(1);\n      }\n      const {\n        pathname,\n        hash,\n        search\n      } = url.parse(inputUrl.replace(/\\\\/g, '/'));\n      const resolver = (file, base) => new Promise((resolve, reject) => {\n        loader.resolve(base, decodeURI(file), (err, result) => {\n          if (err) {\n            reject(err);\n            return;\n          }\n          resolve(result);\n        });\n      });\n      const result = yield resolve(pathname, context, resolver);\n      return new Promise((resolve, reject) => {\n        loader.fs.readFile(result, (err, content) => {\n          if (err) {\n            reject(err);\n            return;\n          }\n          let outputPath = (0, loader_utils_1.interpolateName)({\n            resourcePath: result\n          }, filename(result), {\n            content,\n            context: loader.context || loader.rootContext\n          }).replace(/\\\\|\\//g, '-');\n          if (resourcesOutputPath) {\n            outputPath = path.posix.join(resourcesOutputPath, outputPath);\n          }\n          loader.addDependency(result);\n          if (emitFile) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            loader.emitFile(outputPath, content, undefined, {\n              sourceFilename: result\n            });\n          }\n          let outputUrl = outputPath.replace(/\\\\/g, '/');\n          if (hash || search) {\n            outputUrl = url.format({\n              pathname: outputUrl,\n              hash,\n              search\n            });\n          }\n          if (deployUrl && !extracted) {\n            outputUrl = url.resolve(deployUrl, outputUrl);\n          }\n          resourceCache.set(cacheKey, outputUrl);\n          resolve(outputUrl);\n        });\n      });\n    });\n    return function process(_x4, _x5, _x6) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  const resourceCache = new Map();\n  const processed = Symbol('postcss-cli-resources');\n  return {\n    postcssPlugin: 'postcss-cli-resources',\n    Declaration(decl) {\n      return _asyncToGenerator(function* () {\n        if (!decl.value.includes('url') || processed in decl) {\n          return;\n        }\n        const value = decl.value;\n        const urlRegex = /url(?:\\(\\s*(['\"]?))(.*?)(?:\\1\\s*\\))/g;\n        const segments = [];\n        let match;\n        let lastIndex = 0;\n        let modified = false;\n        // We want to load it relative to the file that imports\n        const inputFile = decl.source && decl.source.input.file;\n        const context = inputFile && path.dirname(inputFile) || loader.context;\n        while (match = urlRegex.exec(value)) {\n          const originalUrl = match[2];\n          let processedUrl;\n          try {\n            processedUrl = yield process(originalUrl, context, resourceCache);\n          } catch (err) {\n            (0, error_1.assertIsError)(err);\n            loader.emitError(decl.error(err.message, {\n              word: originalUrl\n            }));\n            continue;\n          }\n          if (lastIndex < match.index) {\n            segments.push(value.slice(lastIndex, match.index));\n          }\n          if (!processedUrl || originalUrl === processedUrl) {\n            segments.push(match[0]);\n          } else {\n            segments.push(wrapUrl(processedUrl));\n            modified = true;\n          }\n          lastIndex = match.index + match[0].length;\n        }\n        if (lastIndex < value.length) {\n          segments.push(value.slice(lastIndex));\n        }\n        if (modified) {\n          decl.value = segments.join('');\n        }\n        decl[processed] = true;\n      })();\n    }\n  };\n}\nexports.default = default_1;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","postcss","loader_utils_1","require","path","url","error_1","wrapUrl","wrappedUrl","hasSingleQuotes","indexOf","resolve","file","base","resolver","default_1","options","Error","deployUrl","resourcesOutputPath","filename","loader","emitFile","extracted","process","inputUrl","context","resourceCache","test","startsWith","slice","cacheKey","cachedUrl","pathname","hash","search","parse","replace","Promise","reject","decodeURI","err","fs","readFile","content","outputPath","interpolateName","resourcePath","rootContext","posix","join","addDependency","sourceFilename","outputUrl","format","set","Map","processed","Symbol","postcssPlugin","Declaration","decl","includes","urlRegex","segments","match","lastIndex","modified","inputFile","source","input","dirname","exec","originalUrl","processedUrl","assertIsError","emitError","error","message","word","index","push","length","default"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/webpack/plugins/postcss-cli-resources.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.postcss = void 0;\nconst loader_utils_1 = require(\"loader-utils\");\nconst path = __importStar(require(\"path\"));\nconst url = __importStar(require(\"url\"));\nconst error_1 = require(\"../../utils/error\");\nfunction wrapUrl(url) {\n    let wrappedUrl;\n    const hasSingleQuotes = url.indexOf(\"'\") >= 0;\n    if (hasSingleQuotes) {\n        wrappedUrl = `\"${url}\"`;\n    }\n    else {\n        wrappedUrl = `'${url}'`;\n    }\n    return `url(${wrappedUrl})`;\n}\nasync function resolve(file, base, resolver) {\n    try {\n        return await resolver('./' + file, base);\n    }\n    catch {\n        return resolver(file, base);\n    }\n}\nexports.postcss = true;\nfunction default_1(options) {\n    if (!options) {\n        throw new Error('No options were specified to \"postcss-cli-resources\".');\n    }\n    const { deployUrl = '', resourcesOutputPath = '', filename, loader, emitFile, extracted, } = options;\n    const process = async (inputUrl, context, resourceCache) => {\n        // If root-relative, absolute or protocol relative url, leave as is\n        if (/^((?:\\w+:)?\\/\\/|data:|chrome:|#)/.test(inputUrl)) {\n            return inputUrl;\n        }\n        if (/^\\//.test(inputUrl)) {\n            return inputUrl;\n        }\n        // If starts with a caret, remove and return remainder\n        // this supports bypassing asset processing\n        if (inputUrl.startsWith('^')) {\n            return inputUrl.slice(1);\n        }\n        const cacheKey = path.resolve(context, inputUrl);\n        const cachedUrl = resourceCache.get(cacheKey);\n        if (cachedUrl) {\n            return cachedUrl;\n        }\n        if (inputUrl.startsWith('~')) {\n            inputUrl = inputUrl.slice(1);\n        }\n        const { pathname, hash, search } = url.parse(inputUrl.replace(/\\\\/g, '/'));\n        const resolver = (file, base) => new Promise((resolve, reject) => {\n            loader.resolve(base, decodeURI(file), (err, result) => {\n                if (err) {\n                    reject(err);\n                    return;\n                }\n                resolve(result);\n            });\n        });\n        const result = await resolve(pathname, context, resolver);\n        return new Promise((resolve, reject) => {\n            loader.fs.readFile(result, (err, content) => {\n                if (err) {\n                    reject(err);\n                    return;\n                }\n                let outputPath = (0, loader_utils_1.interpolateName)({ resourcePath: result }, filename(result), {\n                    content,\n                    context: loader.context || loader.rootContext,\n                }).replace(/\\\\|\\//g, '-');\n                if (resourcesOutputPath) {\n                    outputPath = path.posix.join(resourcesOutputPath, outputPath);\n                }\n                loader.addDependency(result);\n                if (emitFile) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    loader.emitFile(outputPath, content, undefined, { sourceFilename: result });\n                }\n                let outputUrl = outputPath.replace(/\\\\/g, '/');\n                if (hash || search) {\n                    outputUrl = url.format({ pathname: outputUrl, hash, search });\n                }\n                if (deployUrl && !extracted) {\n                    outputUrl = url.resolve(deployUrl, outputUrl);\n                }\n                resourceCache.set(cacheKey, outputUrl);\n                resolve(outputUrl);\n            });\n        });\n    };\n    const resourceCache = new Map();\n    const processed = Symbol('postcss-cli-resources');\n    return {\n        postcssPlugin: 'postcss-cli-resources',\n        async Declaration(decl) {\n            if (!decl.value.includes('url') || processed in decl) {\n                return;\n            }\n            const value = decl.value;\n            const urlRegex = /url(?:\\(\\s*(['\"]?))(.*?)(?:\\1\\s*\\))/g;\n            const segments = [];\n            let match;\n            let lastIndex = 0;\n            let modified = false;\n            // We want to load it relative to the file that imports\n            const inputFile = decl.source && decl.source.input.file;\n            const context = (inputFile && path.dirname(inputFile)) || loader.context;\n            while ((match = urlRegex.exec(value))) {\n                const originalUrl = match[2];\n                let processedUrl;\n                try {\n                    processedUrl = await process(originalUrl, context, resourceCache);\n                }\n                catch (err) {\n                    (0, error_1.assertIsError)(err);\n                    loader.emitError(decl.error(err.message, { word: originalUrl }));\n                    continue;\n                }\n                if (lastIndex < match.index) {\n                    segments.push(value.slice(lastIndex, match.index));\n                }\n                if (!processedUrl || originalUrl === processedUrl) {\n                    segments.push(match[0]);\n                }\n                else {\n                    segments.push(wrapUrl(processedUrl));\n                    modified = true;\n                }\n                lastIndex = match.index + match[0].length;\n            }\n            if (lastIndex < value.length) {\n                segments.push(value.slice(lastIndex));\n            }\n            if (modified) {\n                decl.value = segments.join('');\n            }\n            decl[processed] = true;\n        },\n    };\n}\nexports.default = default_1;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}