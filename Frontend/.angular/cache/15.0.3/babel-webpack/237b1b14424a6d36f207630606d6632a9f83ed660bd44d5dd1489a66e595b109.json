{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SuppressExtractedTextChunksWebpackPlugin = void 0;\n/**\n * Remove .js files from entry points consisting entirely of stylesheets.\n * To be used together with mini-css-extract-plugin.\n */\nclass SuppressExtractedTextChunksWebpackPlugin {\n  apply(compiler) {\n    compiler.hooks.compilation.tap('SuppressExtractedTextChunks', compilation => {\n      compilation.hooks.chunkAsset.tap('SuppressExtractedTextChunks', (chunk, filename) => {\n        // Remove only JavaScript assets\n        if (!filename.endsWith('.js')) {\n          return;\n        }\n        // Only chunks with a css asset should have JavaScript assets removed\n        let hasCssFile = false;\n        for (const file of chunk.files) {\n          if (file.endsWith('.css')) {\n            hasCssFile = true;\n            break;\n          }\n        }\n        if (!hasCssFile) {\n          return;\n        }\n        // Only chunks with all CSS entry dependencies should have JavaScript assets removed\n        let cssOnly = false;\n        const entryModules = compilation.chunkGraph.getChunkEntryModulesIterable(chunk);\n        for (const module of entryModules) {\n          cssOnly = module.dependencies.every(dependency => dependency.constructor.name === 'CssDependency');\n          if (!cssOnly) {\n            break;\n          }\n        }\n        if (cssOnly) {\n          chunk.files.delete(filename);\n          compilation.deleteAsset(filename);\n        }\n      });\n    });\n  }\n}\nexports.SuppressExtractedTextChunksWebpackPlugin = SuppressExtractedTextChunksWebpackPlugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","SuppressExtractedTextChunksWebpackPlugin","apply","compiler","hooks","compilation","tap","chunkAsset","chunk","filename","endsWith","hasCssFile","file","files","cssOnly","entryModules","chunkGraph","getChunkEntryModulesIterable","module","dependencies","every","dependency","constructor","name","delete","deleteAsset"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/webpack/plugins/suppress-entry-chunks-webpack-plugin.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuppressExtractedTextChunksWebpackPlugin = void 0;\n/**\n * Remove .js files from entry points consisting entirely of stylesheets.\n * To be used together with mini-css-extract-plugin.\n */\nclass SuppressExtractedTextChunksWebpackPlugin {\n    apply(compiler) {\n        compiler.hooks.compilation.tap('SuppressExtractedTextChunks', (compilation) => {\n            compilation.hooks.chunkAsset.tap('SuppressExtractedTextChunks', (chunk, filename) => {\n                // Remove only JavaScript assets\n                if (!filename.endsWith('.js')) {\n                    return;\n                }\n                // Only chunks with a css asset should have JavaScript assets removed\n                let hasCssFile = false;\n                for (const file of chunk.files) {\n                    if (file.endsWith('.css')) {\n                        hasCssFile = true;\n                        break;\n                    }\n                }\n                if (!hasCssFile) {\n                    return;\n                }\n                // Only chunks with all CSS entry dependencies should have JavaScript assets removed\n                let cssOnly = false;\n                const entryModules = compilation.chunkGraph.getChunkEntryModulesIterable(chunk);\n                for (const module of entryModules) {\n                    cssOnly = module.dependencies.every((dependency) => dependency.constructor.name === 'CssDependency');\n                    if (!cssOnly) {\n                        break;\n                    }\n                }\n                if (cssOnly) {\n                    chunk.files.delete(filename);\n                    compilation.deleteAsset(filename);\n                }\n            });\n        });\n    }\n}\nexports.SuppressExtractedTextChunksWebpackPlugin = SuppressExtractedTextChunksWebpackPlugin;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,wCAAwC,GAAG,KAAK,CAAC;AACzD;AACA;AACA;AACA;AACA,MAAMA,wCAAwC,CAAC;EAC3CC,KAAK,CAACC,QAAQ,EAAE;IACZA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,6BAA6B,EAAGD,WAAW,IAAK;MAC3EA,WAAW,CAACD,KAAK,CAACG,UAAU,CAACD,GAAG,CAAC,6BAA6B,EAAE,CAACE,KAAK,EAAEC,QAAQ,KAAK;QACjF;QACA,IAAI,CAACA,QAAQ,CAACC,QAAQ,CAAC,KAAK,CAAC,EAAE;UAC3B;QACJ;QACA;QACA,IAAIC,UAAU,GAAG,KAAK;QACtB,KAAK,MAAMC,IAAI,IAAIJ,KAAK,CAACK,KAAK,EAAE;UAC5B,IAAID,IAAI,CAACF,QAAQ,CAAC,MAAM,CAAC,EAAE;YACvBC,UAAU,GAAG,IAAI;YACjB;UACJ;QACJ;QACA,IAAI,CAACA,UAAU,EAAE;UACb;QACJ;QACA;QACA,IAAIG,OAAO,GAAG,KAAK;QACnB,MAAMC,YAAY,GAAGV,WAAW,CAACW,UAAU,CAACC,4BAA4B,CAACT,KAAK,CAAC;QAC/E,KAAK,MAAMU,MAAM,IAAIH,YAAY,EAAE;UAC/BD,OAAO,GAAGI,MAAM,CAACC,YAAY,CAACC,KAAK,CAAEC,UAAU,IAAKA,UAAU,CAACC,WAAW,CAACC,IAAI,KAAK,eAAe,CAAC;UACpG,IAAI,CAACT,OAAO,EAAE;YACV;UACJ;QACJ;QACA,IAAIA,OAAO,EAAE;UACTN,KAAK,CAACK,KAAK,CAACW,MAAM,CAACf,QAAQ,CAAC;UAC5BJ,WAAW,CAACoB,WAAW,CAAChB,QAAQ,CAAC;QACrC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN;AACJ;AACAV,OAAO,CAACE,wCAAwC,GAAGA,wCAAwC"},"metadata":{},"sourceType":"script","externalDependencies":[]}