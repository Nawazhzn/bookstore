{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar _Spinner_isTTY;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Spinner = void 0;\nconst ora_1 = __importDefault(require(\"ora\"));\nconst color_1 = require(\"./color\");\nconst tty_1 = require(\"./tty\");\nclass Spinner {\n  constructor(text) {\n    /** When false, only fail messages will be displayed. */\n    this.enabled = true;\n    _Spinner_isTTY.set(this, (0, tty_1.isTTY)());\n    this.spinner = (0, ora_1.default)({\n      text,\n      // The below 2 options are needed because otherwise CTRL+C will be delayed\n      // when the underlying process is sync.\n      hideCursor: false,\n      discardStdin: false,\n      isEnabled: __classPrivateFieldGet(this, _Spinner_isTTY, \"f\")\n    });\n  }\n  set text(text) {\n    this.spinner.text = text;\n  }\n  get isSpinning() {\n    return this.spinner.isSpinning || !__classPrivateFieldGet(this, _Spinner_isTTY, \"f\");\n  }\n  succeed(text) {\n    if (this.enabled) {\n      this.spinner.succeed(text);\n    }\n  }\n  fail(text) {\n    this.spinner.fail(text && color_1.colors.redBright(text));\n  }\n  stop() {\n    this.spinner.stop();\n  }\n  start(text) {\n    if (this.enabled) {\n      this.spinner.start(text);\n    }\n  }\n}\nexports.Spinner = Spinner;\n_Spinner_isTTY = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","value","get","__importDefault","mod","__esModule","_Spinner_isTTY","Object","defineProperty","exports","Spinner","ora_1","require","color_1","tty_1","constructor","text","enabled","set","isTTY","spinner","default","hideCursor","discardStdin","isEnabled","isSpinning","succeed","fail","colors","redBright","stop","start","WeakMap"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/utils/spinner.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Spinner_isTTY;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Spinner = void 0;\nconst ora_1 = __importDefault(require(\"ora\"));\nconst color_1 = require(\"./color\");\nconst tty_1 = require(\"./tty\");\nclass Spinner {\n    constructor(text) {\n        /** When false, only fail messages will be displayed. */\n        this.enabled = true;\n        _Spinner_isTTY.set(this, (0, tty_1.isTTY)());\n        this.spinner = (0, ora_1.default)({\n            text,\n            // The below 2 options are needed because otherwise CTRL+C will be delayed\n            // when the underlying process is sync.\n            hideCursor: false,\n            discardStdin: false,\n            isEnabled: __classPrivateFieldGet(this, _Spinner_isTTY, \"f\"),\n        });\n    }\n    set text(text) {\n        this.spinner.text = text;\n    }\n    get isSpinning() {\n        return this.spinner.isSpinning || !__classPrivateFieldGet(this, _Spinner_isTTY, \"f\");\n    }\n    succeed(text) {\n        if (this.enabled) {\n            this.spinner.succeed(text);\n        }\n    }\n    fail(text) {\n        this.spinner.fail(text && color_1.colors.redBright(text));\n    }\n    stop() {\n        this.spinner.stop();\n    }\n    start(text) {\n        if (this.enabled) {\n            this.spinner.start(text);\n        }\n    }\n}\nexports.Spinner = Spinner;\n_Spinner_isTTY = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}