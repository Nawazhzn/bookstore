{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst codegen_1 = require(\"ajv/dist/compile/codegen\");\nconst _util_1 = require(\"./_util\");\nconst error = {\n  message: ({\n    params: {\n      schemaProp\n    }\n  }) => schemaProp ? (0, codegen_1.str)`should match case \"${schemaProp}\" schema` : (0, codegen_1.str)`should match default case schema`,\n  params: ({\n    params: {\n      schemaProp\n    }\n  }) => schemaProp ? (0, codegen_1._)`{failingCase: ${schemaProp}}` : (0, codegen_1._)`{failingDefault: true}`\n};\nfunction getDef(opts) {\n  const metaSchema = (0, _util_1.metaSchemaRef)(opts);\n  return [{\n    keyword: \"select\",\n    schemaType: [\"string\", \"number\", \"boolean\", \"null\"],\n    $data: true,\n    error,\n    dependencies: [\"selectCases\"],\n    code(cxt) {\n      const {\n        gen,\n        schemaCode,\n        parentSchema\n      } = cxt;\n      cxt.block$data(codegen_1.nil, () => {\n        const valid = gen.let(\"valid\", true);\n        const schValid = gen.name(\"_valid\");\n        const value = gen.const(\"value\", (0, codegen_1._)`${schemaCode} === null ? \"null\" : ${schemaCode}`);\n        gen.if(false); // optimizer should remove it from generated code\n        for (const schemaProp in parentSchema.selectCases) {\n          cxt.setParams({\n            schemaProp\n          });\n          gen.elseIf((0, codegen_1._)`\"\" + ${value} == ${schemaProp}`); // intentional ==, to match numbers and booleans\n          const schCxt = cxt.subschema({\n            keyword: \"selectCases\",\n            schemaProp\n          }, schValid);\n          cxt.mergeEvaluated(schCxt, codegen_1.Name);\n          gen.assign(valid, schValid);\n        }\n        gen.else();\n        if (parentSchema.selectDefault !== undefined) {\n          cxt.setParams({\n            schemaProp: undefined\n          });\n          const schCxt = cxt.subschema({\n            keyword: \"selectDefault\"\n          }, schValid);\n          cxt.mergeEvaluated(schCxt, codegen_1.Name);\n          gen.assign(valid, schValid);\n        }\n        gen.endIf();\n        cxt.pass(valid);\n      });\n    }\n  }, {\n    keyword: \"selectCases\",\n    dependencies: [\"select\"],\n    metaSchema: {\n      type: \"object\",\n      additionalProperties: metaSchema\n    }\n  }, {\n    keyword: \"selectDefault\",\n    dependencies: [\"select\", \"selectCases\"],\n    metaSchema\n  }];\n}\nexports.default = getDef;\nmodule.exports = getDef;","map":{"version":3,"names":["Object","defineProperty","exports","value","codegen_1","require","_util_1","error","message","params","schemaProp","str","_","getDef","opts","metaSchema","metaSchemaRef","keyword","schemaType","$data","dependencies","code","cxt","gen","schemaCode","parentSchema","block$data","nil","valid","let","schValid","name","const","if","selectCases","setParams","elseIf","schCxt","subschema","mergeEvaluated","Name","assign","else","selectDefault","undefined","endIf","pass","type","additionalProperties","default","module"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/ajv-keywords/dist/definitions/select.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"ajv/dist/compile/codegen\");\nconst _util_1 = require(\"./_util\");\nconst error = {\n    message: ({ params: { schemaProp } }) => schemaProp\n        ? (0, codegen_1.str) `should match case \"${schemaProp}\" schema`\n        : (0, codegen_1.str) `should match default case schema`,\n    params: ({ params: { schemaProp } }) => schemaProp ? (0, codegen_1._) `{failingCase: ${schemaProp}}` : (0, codegen_1._) `{failingDefault: true}`,\n};\nfunction getDef(opts) {\n    const metaSchema = (0, _util_1.metaSchemaRef)(opts);\n    return [\n        {\n            keyword: \"select\",\n            schemaType: [\"string\", \"number\", \"boolean\", \"null\"],\n            $data: true,\n            error,\n            dependencies: [\"selectCases\"],\n            code(cxt) {\n                const { gen, schemaCode, parentSchema } = cxt;\n                cxt.block$data(codegen_1.nil, () => {\n                    const valid = gen.let(\"valid\", true);\n                    const schValid = gen.name(\"_valid\");\n                    const value = gen.const(\"value\", (0, codegen_1._) `${schemaCode} === null ? \"null\" : ${schemaCode}`);\n                    gen.if(false); // optimizer should remove it from generated code\n                    for (const schemaProp in parentSchema.selectCases) {\n                        cxt.setParams({ schemaProp });\n                        gen.elseIf((0, codegen_1._) `\"\" + ${value} == ${schemaProp}`); // intentional ==, to match numbers and booleans\n                        const schCxt = cxt.subschema({ keyword: \"selectCases\", schemaProp }, schValid);\n                        cxt.mergeEvaluated(schCxt, codegen_1.Name);\n                        gen.assign(valid, schValid);\n                    }\n                    gen.else();\n                    if (parentSchema.selectDefault !== undefined) {\n                        cxt.setParams({ schemaProp: undefined });\n                        const schCxt = cxt.subschema({ keyword: \"selectDefault\" }, schValid);\n                        cxt.mergeEvaluated(schCxt, codegen_1.Name);\n                        gen.assign(valid, schValid);\n                    }\n                    gen.endIf();\n                    cxt.pass(valid);\n                });\n            },\n        },\n        {\n            keyword: \"selectCases\",\n            dependencies: [\"select\"],\n            metaSchema: {\n                type: \"object\",\n                additionalProperties: metaSchema,\n            },\n        },\n        {\n            keyword: \"selectDefault\",\n            dependencies: [\"select\", \"selectCases\"],\n            metaSchema,\n        },\n    ];\n}\nexports.default = getDef;\nmodule.exports = getDef;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}