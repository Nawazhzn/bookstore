{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FindTestsPlugin = void 0;\nconst assert_1 = __importDefault(require(\"assert\"));\nconst fs_1 = require(\"fs\");\nconst glob_1 = __importStar(require(\"glob\"));\nconst path_1 = require(\"path\");\nconst util_1 = require(\"util\");\nconst webpack_diagnostics_1 = require(\"../../utils/webpack-diagnostics\");\nconst globPromise = (0, util_1.promisify)(glob_1.default);\n/**\n * The name of the plugin provided to Webpack when tapping Webpack compiler hooks.\n */\nconst PLUGIN_NAME = 'angular-find-tests-plugin';\nclass FindTestsPlugin {\n  constructor(options) {\n    this.options = options;\n  }\n  apply(compiler) {\n    var _this = this;\n    const {\n      include = ['**/*.spec.ts'],\n      projectSourceRoot,\n      workspaceRoot\n    } = this.options;\n    const webpackOptions = compiler.options;\n    const entry = typeof webpackOptions.entry === 'function' ? webpackOptions.entry() : webpackOptions.entry;\n    let originalImport;\n    // Add tests files are part of the entry-point.\n    webpackOptions.entry = /*#__PURE__*/_asyncToGenerator(function* () {\n      const specFiles = yield findTests(include, workspaceRoot, projectSourceRoot);\n      if (!specFiles.length) {\n        (0, assert_1.default)(_this.compilation, 'Compilation cannot be undefined.');\n        (0, webpack_diagnostics_1.addError)(_this.compilation, `Specified patterns: \"${include.join(', ')}\" did not match any spec files.`);\n      }\n      const entrypoints = yield entry;\n      const entrypoint = entrypoints['main'];\n      if (!entrypoint.import) {\n        throw new Error(`Cannot find 'main' entrypoint.`);\n      }\n      originalImport !== null && originalImport !== void 0 ? originalImport : originalImport = entrypoint.import;\n      entrypoint.import = [...originalImport, ...specFiles];\n      return entrypoints;\n    });\n    compiler.hooks.thisCompilation.tap(PLUGIN_NAME, compilation => {\n      this.compilation = compilation;\n      compilation.contextDependencies.add(projectSourceRoot);\n    });\n  }\n}\nexports.FindTestsPlugin = FindTestsPlugin;\n// go through all patterns and find unique list of files\nfunction findTests(_x, _x2, _x3) {\n  return _findTests.apply(this, arguments);\n}\nfunction _findTests() {\n  _findTests = _asyncToGenerator(function* (patterns, workspaceRoot, projectSourceRoot) {\n    const matchingTestsPromises = patterns.map(pattern => findMatchingTests(pattern, workspaceRoot, projectSourceRoot));\n    const files = yield Promise.all(matchingTestsPromises);\n    // Unique file names\n    return [...new Set(files.flat())];\n  });\n  return _findTests.apply(this, arguments);\n}\nconst normalizePath = path => path.replace(/\\\\/g, '/');\nfunction findMatchingTests(_x4, _x5, _x6) {\n  return _findMatchingTests.apply(this, arguments);\n}\nfunction _findMatchingTests() {\n  _findMatchingTests = _asyncToGenerator(function* (pattern, workspaceRoot, projectSourceRoot) {\n    // normalize pattern, glob lib only accepts forward slashes\n    let normalizedPattern = normalizePath(pattern);\n    if (normalizedPattern.charAt(0) === '/') {\n      normalizedPattern = normalizedPattern.substring(1);\n    }\n    const relativeProjectRoot = normalizePath((0, path_1.relative)(workspaceRoot, projectSourceRoot) + '/');\n    // remove relativeProjectRoot to support relative paths from root\n    // such paths are easy to get when running scripts via IDEs\n    if (normalizedPattern.startsWith(relativeProjectRoot)) {\n      normalizedPattern = normalizedPattern.substring(relativeProjectRoot.length);\n    }\n    // special logic when pattern does not look like a glob\n    if (!(0, glob_1.hasMagic)(normalizedPattern)) {\n      if (yield isDirectory((0, path_1.join)(projectSourceRoot, normalizedPattern))) {\n        normalizedPattern = `${normalizedPattern}/**/*.spec.@(ts|tsx)`;\n      } else {\n        // see if matching spec file exists\n        const fileExt = (0, path_1.extname)(normalizedPattern);\n        // Replace extension to `.spec.ext`. Example: `src/app/app.component.ts`-> `src/app/app.component.spec.ts`\n        const potentialSpec = (0, path_1.join)(projectSourceRoot, (0, path_1.dirname)(normalizedPattern), `${(0, path_1.basename)(normalizedPattern, fileExt)}.spec${fileExt}`);\n        if (yield exists(potentialSpec)) {\n          return [potentialSpec];\n        }\n      }\n    }\n    return globPromise(normalizedPattern, {\n      cwd: projectSourceRoot,\n      root: projectSourceRoot,\n      nomount: true,\n      absolute: true,\n      ignore: ['**/node_modules/**']\n    });\n  });\n  return _findMatchingTests.apply(this, arguments);\n}\nfunction isDirectory(_x7) {\n  return _isDirectory.apply(this, arguments);\n}\nfunction _isDirectory() {\n  _isDirectory = _asyncToGenerator(function* (path) {\n    try {\n      const stats = yield fs_1.promises.stat(path);\n      return stats.isDirectory();\n    } catch {\n      return false;\n    }\n  });\n  return _isDirectory.apply(this, arguments);\n}\nfunction exists(_x8) {\n  return _exists.apply(this, arguments);\n}\nfunction _exists() {\n  _exists = _asyncToGenerator(function* (path) {\n    try {\n      yield fs_1.promises.access(path, fs_1.constants.F_OK);\n      return true;\n    } catch {\n      return false;\n    }\n  });\n  return _exists.apply(this, arguments);\n}","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","FindTestsPlugin","assert_1","require","fs_1","glob_1","path_1","util_1","webpack_diagnostics_1","globPromise","promisify","default","PLUGIN_NAME","constructor","options","apply","compiler","include","projectSourceRoot","workspaceRoot","webpackOptions","entry","originalImport","specFiles","findTests","length","compilation","addError","join","entrypoints","entrypoint","import","Error","hooks","thisCompilation","tap","contextDependencies","add","patterns","matchingTestsPromises","map","pattern","findMatchingTests","files","Promise","all","Set","flat","normalizePath","path","replace","normalizedPattern","charAt","substring","relativeProjectRoot","relative","startsWith","hasMagic","isDirectory","fileExt","extname","potentialSpec","dirname","basename","exists","cwd","root","nomount","absolute","ignore","stats","promises","stat","access","constants","F_OK"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/builders/karma/find-tests-plugin.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FindTestsPlugin = void 0;\nconst assert_1 = __importDefault(require(\"assert\"));\nconst fs_1 = require(\"fs\");\nconst glob_1 = __importStar(require(\"glob\"));\nconst path_1 = require(\"path\");\nconst util_1 = require(\"util\");\nconst webpack_diagnostics_1 = require(\"../../utils/webpack-diagnostics\");\nconst globPromise = (0, util_1.promisify)(glob_1.default);\n/**\n * The name of the plugin provided to Webpack when tapping Webpack compiler hooks.\n */\nconst PLUGIN_NAME = 'angular-find-tests-plugin';\nclass FindTestsPlugin {\n    constructor(options) {\n        this.options = options;\n    }\n    apply(compiler) {\n        const { include = ['**/*.spec.ts'], projectSourceRoot, workspaceRoot } = this.options;\n        const webpackOptions = compiler.options;\n        const entry = typeof webpackOptions.entry === 'function' ? webpackOptions.entry() : webpackOptions.entry;\n        let originalImport;\n        // Add tests files are part of the entry-point.\n        webpackOptions.entry = async () => {\n            const specFiles = await findTests(include, workspaceRoot, projectSourceRoot);\n            if (!specFiles.length) {\n                (0, assert_1.default)(this.compilation, 'Compilation cannot be undefined.');\n                (0, webpack_diagnostics_1.addError)(this.compilation, `Specified patterns: \"${include.join(', ')}\" did not match any spec files.`);\n            }\n            const entrypoints = await entry;\n            const entrypoint = entrypoints['main'];\n            if (!entrypoint.import) {\n                throw new Error(`Cannot find 'main' entrypoint.`);\n            }\n            originalImport !== null && originalImport !== void 0 ? originalImport : (originalImport = entrypoint.import);\n            entrypoint.import = [...originalImport, ...specFiles];\n            return entrypoints;\n        };\n        compiler.hooks.thisCompilation.tap(PLUGIN_NAME, (compilation) => {\n            this.compilation = compilation;\n            compilation.contextDependencies.add(projectSourceRoot);\n        });\n    }\n}\nexports.FindTestsPlugin = FindTestsPlugin;\n// go through all patterns and find unique list of files\nasync function findTests(patterns, workspaceRoot, projectSourceRoot) {\n    const matchingTestsPromises = patterns.map((pattern) => findMatchingTests(pattern, workspaceRoot, projectSourceRoot));\n    const files = await Promise.all(matchingTestsPromises);\n    // Unique file names\n    return [...new Set(files.flat())];\n}\nconst normalizePath = (path) => path.replace(/\\\\/g, '/');\nasync function findMatchingTests(pattern, workspaceRoot, projectSourceRoot) {\n    // normalize pattern, glob lib only accepts forward slashes\n    let normalizedPattern = normalizePath(pattern);\n    if (normalizedPattern.charAt(0) === '/') {\n        normalizedPattern = normalizedPattern.substring(1);\n    }\n    const relativeProjectRoot = normalizePath((0, path_1.relative)(workspaceRoot, projectSourceRoot) + '/');\n    // remove relativeProjectRoot to support relative paths from root\n    // such paths are easy to get when running scripts via IDEs\n    if (normalizedPattern.startsWith(relativeProjectRoot)) {\n        normalizedPattern = normalizedPattern.substring(relativeProjectRoot.length);\n    }\n    // special logic when pattern does not look like a glob\n    if (!(0, glob_1.hasMagic)(normalizedPattern)) {\n        if (await isDirectory((0, path_1.join)(projectSourceRoot, normalizedPattern))) {\n            normalizedPattern = `${normalizedPattern}/**/*.spec.@(ts|tsx)`;\n        }\n        else {\n            // see if matching spec file exists\n            const fileExt = (0, path_1.extname)(normalizedPattern);\n            // Replace extension to `.spec.ext`. Example: `src/app/app.component.ts`-> `src/app/app.component.spec.ts`\n            const potentialSpec = (0, path_1.join)(projectSourceRoot, (0, path_1.dirname)(normalizedPattern), `${(0, path_1.basename)(normalizedPattern, fileExt)}.spec${fileExt}`);\n            if (await exists(potentialSpec)) {\n                return [potentialSpec];\n            }\n        }\n    }\n    return globPromise(normalizedPattern, {\n        cwd: projectSourceRoot,\n        root: projectSourceRoot,\n        nomount: true,\n        absolute: true,\n        ignore: ['**/node_modules/**'],\n    });\n}\nasync function isDirectory(path) {\n    try {\n        const stats = await fs_1.promises.stat(path);\n        return stats.isDirectory();\n    }\n    catch {\n        return false;\n    }\n}\nasync function exists(path) {\n    try {\n        await fs_1.promises.access(path, fs_1.constants.F_OK);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}