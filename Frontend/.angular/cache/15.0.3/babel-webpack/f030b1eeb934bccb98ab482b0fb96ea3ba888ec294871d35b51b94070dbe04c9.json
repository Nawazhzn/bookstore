{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeBrowserSchema = void 0;\nconst normalize_asset_patterns_1 = require(\"./normalize-asset-patterns\");\nconst normalize_cache_1 = require(\"./normalize-cache\");\nconst normalize_file_replacements_1 = require(\"./normalize-file-replacements\");\nconst normalize_optimization_1 = require(\"./normalize-optimization\");\nconst normalize_polyfills_1 = require(\"./normalize-polyfills\");\nconst normalize_source_maps_1 = require(\"./normalize-source-maps\");\nconst supported_browsers_1 = require(\"./supported-browsers\");\nfunction normalizeBrowserSchema(workspaceRoot, projectRoot, projectSourceRoot, options, metadata, logger) {\n  return {\n    ...options,\n    cache: (0, normalize_cache_1.normalizeCacheOptions)(metadata, workspaceRoot),\n    assets: (0, normalize_asset_patterns_1.normalizeAssetPatterns)(options.assets || [], workspaceRoot, projectRoot, projectSourceRoot),\n    fileReplacements: (0, normalize_file_replacements_1.normalizeFileReplacements)(options.fileReplacements || [], workspaceRoot),\n    optimization: (0, normalize_optimization_1.normalizeOptimization)(options.optimization),\n    sourceMap: (0, normalize_source_maps_1.normalizeSourceMaps)(options.sourceMap || false),\n    polyfills: (0, normalize_polyfills_1.normalizePolyfills)(options.polyfills, workspaceRoot),\n    preserveSymlinks: options.preserveSymlinks === undefined ? process.execArgv.includes('--preserve-symlinks') : options.preserveSymlinks,\n    statsJson: options.statsJson || false,\n    budgets: options.budgets || [],\n    scripts: options.scripts || [],\n    styles: options.styles || [],\n    stylePreprocessorOptions: {\n      includePaths: options.stylePreprocessorOptions && options.stylePreprocessorOptions.includePaths || []\n    },\n    // Using just `--poll` will result in a value of 0 which is very likely not the intention\n    // A value of 0 is falsy and will disable polling rather then enable\n    // 500 ms is a sensible default in this case\n    poll: options.poll === 0 ? 500 : options.poll,\n    supportedBrowsers: (0, supported_browsers_1.getSupportedBrowsers)(projectRoot, logger)\n  };\n}\nexports.normalizeBrowserSchema = normalizeBrowserSchema;","map":{"version":3,"names":["Object","defineProperty","exports","value","normalizeBrowserSchema","normalize_asset_patterns_1","require","normalize_cache_1","normalize_file_replacements_1","normalize_optimization_1","normalize_polyfills_1","normalize_source_maps_1","supported_browsers_1","workspaceRoot","projectRoot","projectSourceRoot","options","metadata","logger","cache","normalizeCacheOptions","assets","normalizeAssetPatterns","fileReplacements","normalizeFileReplacements","optimization","normalizeOptimization","sourceMap","normalizeSourceMaps","polyfills","normalizePolyfills","preserveSymlinks","undefined","process","execArgv","includes","statsJson","budgets","scripts","styles","stylePreprocessorOptions","includePaths","poll","supportedBrowsers","getSupportedBrowsers"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/utils/normalize-builder-schema.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeBrowserSchema = void 0;\nconst normalize_asset_patterns_1 = require(\"./normalize-asset-patterns\");\nconst normalize_cache_1 = require(\"./normalize-cache\");\nconst normalize_file_replacements_1 = require(\"./normalize-file-replacements\");\nconst normalize_optimization_1 = require(\"./normalize-optimization\");\nconst normalize_polyfills_1 = require(\"./normalize-polyfills\");\nconst normalize_source_maps_1 = require(\"./normalize-source-maps\");\nconst supported_browsers_1 = require(\"./supported-browsers\");\nfunction normalizeBrowserSchema(workspaceRoot, projectRoot, projectSourceRoot, options, metadata, logger) {\n    return {\n        ...options,\n        cache: (0, normalize_cache_1.normalizeCacheOptions)(metadata, workspaceRoot),\n        assets: (0, normalize_asset_patterns_1.normalizeAssetPatterns)(options.assets || [], workspaceRoot, projectRoot, projectSourceRoot),\n        fileReplacements: (0, normalize_file_replacements_1.normalizeFileReplacements)(options.fileReplacements || [], workspaceRoot),\n        optimization: (0, normalize_optimization_1.normalizeOptimization)(options.optimization),\n        sourceMap: (0, normalize_source_maps_1.normalizeSourceMaps)(options.sourceMap || false),\n        polyfills: (0, normalize_polyfills_1.normalizePolyfills)(options.polyfills, workspaceRoot),\n        preserveSymlinks: options.preserveSymlinks === undefined\n            ? process.execArgv.includes('--preserve-symlinks')\n            : options.preserveSymlinks,\n        statsJson: options.statsJson || false,\n        budgets: options.budgets || [],\n        scripts: options.scripts || [],\n        styles: options.styles || [],\n        stylePreprocessorOptions: {\n            includePaths: (options.stylePreprocessorOptions && options.stylePreprocessorOptions.includePaths) || [],\n        },\n        // Using just `--poll` will result in a value of 0 which is very likely not the intention\n        // A value of 0 is falsy and will disable polling rather then enable\n        // 500 ms is a sensible default in this case\n        poll: options.poll === 0 ? 500 : options.poll,\n        supportedBrowsers: (0, supported_browsers_1.getSupportedBrowsers)(projectRoot, logger),\n    };\n}\nexports.normalizeBrowserSchema = normalizeBrowserSchema;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,sBAAsB,GAAG,KAAK,CAAC;AACvC,MAAMC,0BAA0B,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AACxE,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AACtD,MAAME,6BAA6B,GAAGF,OAAO,CAAC,+BAA+B,CAAC;AAC9E,MAAMG,wBAAwB,GAAGH,OAAO,CAAC,0BAA0B,CAAC;AACpE,MAAMI,qBAAqB,GAAGJ,OAAO,CAAC,uBAAuB,CAAC;AAC9D,MAAMK,uBAAuB,GAAGL,OAAO,CAAC,yBAAyB,CAAC;AAClE,MAAMM,oBAAoB,GAAGN,OAAO,CAAC,sBAAsB,CAAC;AAC5D,SAASF,sBAAsB,CAACS,aAAa,EAAEC,WAAW,EAAEC,iBAAiB,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,EAAE;EACtG,OAAO;IACH,GAAGF,OAAO;IACVG,KAAK,EAAE,CAAC,CAAC,EAAEZ,iBAAiB,CAACa,qBAAqB,EAAEH,QAAQ,EAAEJ,aAAa,CAAC;IAC5EQ,MAAM,EAAE,CAAC,CAAC,EAAEhB,0BAA0B,CAACiB,sBAAsB,EAAEN,OAAO,CAACK,MAAM,IAAI,EAAE,EAAER,aAAa,EAAEC,WAAW,EAAEC,iBAAiB,CAAC;IACnIQ,gBAAgB,EAAE,CAAC,CAAC,EAAEf,6BAA6B,CAACgB,yBAAyB,EAAER,OAAO,CAACO,gBAAgB,IAAI,EAAE,EAAEV,aAAa,CAAC;IAC7HY,YAAY,EAAE,CAAC,CAAC,EAAEhB,wBAAwB,CAACiB,qBAAqB,EAAEV,OAAO,CAACS,YAAY,CAAC;IACvFE,SAAS,EAAE,CAAC,CAAC,EAAEhB,uBAAuB,CAACiB,mBAAmB,EAAEZ,OAAO,CAACW,SAAS,IAAI,KAAK,CAAC;IACvFE,SAAS,EAAE,CAAC,CAAC,EAAEnB,qBAAqB,CAACoB,kBAAkB,EAAEd,OAAO,CAACa,SAAS,EAAEhB,aAAa,CAAC;IAC1FkB,gBAAgB,EAAEf,OAAO,CAACe,gBAAgB,KAAKC,SAAS,GAClDC,OAAO,CAACC,QAAQ,CAACC,QAAQ,CAAC,qBAAqB,CAAC,GAChDnB,OAAO,CAACe,gBAAgB;IAC9BK,SAAS,EAAEpB,OAAO,CAACoB,SAAS,IAAI,KAAK;IACrCC,OAAO,EAAErB,OAAO,CAACqB,OAAO,IAAI,EAAE;IAC9BC,OAAO,EAAEtB,OAAO,CAACsB,OAAO,IAAI,EAAE;IAC9BC,MAAM,EAAEvB,OAAO,CAACuB,MAAM,IAAI,EAAE;IAC5BC,wBAAwB,EAAE;MACtBC,YAAY,EAAGzB,OAAO,CAACwB,wBAAwB,IAAIxB,OAAO,CAACwB,wBAAwB,CAACC,YAAY,IAAK;IACzG,CAAC;IACD;IACA;IACA;IACAC,IAAI,EAAE1B,OAAO,CAAC0B,IAAI,KAAK,CAAC,GAAG,GAAG,GAAG1B,OAAO,CAAC0B,IAAI;IAC7CC,iBAAiB,EAAE,CAAC,CAAC,EAAE/B,oBAAoB,CAACgC,oBAAoB,EAAE9B,WAAW,EAAEI,MAAM;EACzF,CAAC;AACL;AACAhB,OAAO,CAACE,sBAAsB,GAAGA,sBAAsB"},"metadata":{},"sourceType":"script","externalDependencies":[]}