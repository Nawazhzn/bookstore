{"ast":null,"code":"'use strict';\n\n// eslint-disable-next-line node/no-deprecated-api\nconst resolve = require('url').resolve;\nconst SourceMapConsumer = require('source-map').SourceMapConsumer;\nconst _ = require('lodash');\nconst PathUtils = require('./utils/path-utils');\nconst log = require('./logger').create('reporter');\nconst MultiReporter = require('./reporters/multi');\nconst baseReporterDecoratorFactory = require('./reporters/base').decoratorFactory;\nfunction createErrorFormatter(config, emitter, SourceMapConsumer) {\n  const basePath = config.basePath;\n  const urlRoot = config.urlRoot === '/' ? '' : config.urlRoot || '';\n  let lastServedFiles = [];\n  emitter.on('file_list_modified', files => {\n    lastServedFiles = files.served;\n  });\n  const URL_REGEXP = new RegExp('(?:https?:\\\\/\\\\/' + config.hostname + '(?:\\\\:' + config.port + ')?' + ')?\\\\/?' + urlRoot + '\\\\/?' + '(base/|absolute)' +\n  // prefix, including slash for base/ to create relative paths.\n  '((?:[A-z]\\\\:)?[^\\\\?\\\\s\\\\:]*)' +\n  // path\n  '(\\\\?\\\\w*)?' +\n  // sha\n  '(\\\\:(\\\\d+))?' +\n  // line\n  '(\\\\:(\\\\d+))?' +\n  // column\n  '', 'g');\n  const cache = new WeakMap();\n  function getSourceMapConsumer(sourceMap) {\n    if (!cache.has(sourceMap)) {\n      cache.set(sourceMap, new SourceMapConsumer(sourceMap));\n    }\n    return cache.get(sourceMap);\n  }\n  return function (input, indentation) {\n    indentation = _.isString(indentation) ? indentation : '';\n    if (_.isError(input)) {\n      input = input.message;\n    } else if (_.isEmpty(input)) {\n      input = '';\n    } else if (!_.isString(input)) {\n      input = JSON.stringify(input, null, indentation);\n    }\n    let msg = input.replace(URL_REGEXP, function (stackTracePath, prefix, path, __, ___, line, ____, column) {\n      const normalizedPath = prefix === 'base/' ? `${basePath}/${path}` : path;\n      const file = lastServedFiles.find(file => file.path === normalizedPath);\n      if (file && file.sourceMap && line) {\n        line = +line;\n        column = +column;\n\n        // When no column is given and we default to 0, it doesn't make sense to only search for smaller\n        // or equal columns in the sourcemap, let's search for equal or greater columns.\n        const bias = column ? SourceMapConsumer.GREATEST_LOWER_BOUND : SourceMapConsumer.LEAST_UPPER_BOUND;\n        try {\n          const zeroBasedColumn = Math.max(0, (column || 1) - 1);\n          const original = getSourceMapConsumer(file.sourceMap).originalPositionFor({\n            line,\n            column: zeroBasedColumn,\n            bias\n          });\n\n          // If there is no original position/source for the current stack trace path, then\n          // we return early with the formatted generated position. This handles the case of\n          // generated code which does not map to anything, see Case 1 of the source-map spec.\n          // https://sourcemaps.info/spec.html.\n          if (original.source === null) {\n            return PathUtils.formatPathMapping(path, line, column);\n          }\n\n          // Source maps often only have a local file name, resolve to turn into a full path if\n          // the path is not absolute yet.\n          const oneBasedOriginalColumn = original.column == null ? original.column : original.column + 1;\n          return `${PathUtils.formatPathMapping(resolve(path, original.source), original.line, oneBasedOriginalColumn)} <- ${PathUtils.formatPathMapping(path, line, column)}`;\n        } catch (e) {\n          log.warn(`An unexpected error occurred while resolving the original position for: ${stackTracePath}`);\n          log.warn(e);\n        }\n      }\n      return PathUtils.formatPathMapping(path, line, column) || prefix;\n    });\n    if (indentation) {\n      msg = indentation + msg.replace(/\\n/g, '\\n' + indentation);\n    }\n    return config.formatError ? config.formatError(msg) : msg + '\\n';\n  };\n}\nfunction createReporters(names, config, emitter, injector) {\n  const errorFormatter = createErrorFormatter(config, emitter, SourceMapConsumer);\n  const reporters = [];\n  names.forEach(name => {\n    if (['dots', 'progress'].includes(name)) {\n      [require(`./reporters/${name}`), require(`./reporters/${name}_color`)].forEach(Reporter => {\n        reporters.push(new Reporter(errorFormatter, config.reportSlowerThan, config.colors, config.browserConsoleLogOptions));\n      });\n      return;\n    }\n    const locals = {\n      baseReporterDecorator: ['factory', baseReporterDecoratorFactory],\n      formatError: ['value', errorFormatter]\n    };\n    try {\n      log.debug(`Trying to load reporter: ${name}`);\n      reporters.push(injector.createChild([locals], ['reporter:' + name]).get('reporter:' + name));\n    } catch (e) {\n      if (e.message.includes(`No provider for \"reporter:${name}\"`)) {\n        log.error(`Can not load reporter \"${name}\", it is not registered!\\n  Perhaps you are missing some plugin?`);\n      } else {\n        log.error(`Can not load \"${name}\"!\\n ${e.stack}`);\n      }\n      emitter.emit('load_error', 'reporter', name);\n      return;\n    }\n    const colorName = name + '_color';\n    if (!names.includes(colorName)) {\n      try {\n        log.debug(`Trying to load color-version of reporter: ${name} (${colorName})`);\n        reporters.push(injector.createChild([locals], ['reporter:' + colorName]).get('reporter:' + name));\n      } catch (e) {\n        log.debug('Couldn\\'t load color-version.');\n      }\n    }\n  });\n  reporters.forEach(reporter => emitter.bind(reporter));\n  return new MultiReporter(reporters);\n}\ncreateReporters.$inject = ['config.reporters', 'config', 'emitter', 'injector'];\nexports.createReporters = createReporters;","map":{"version":3,"names":["resolve","require","SourceMapConsumer","_","PathUtils","log","create","MultiReporter","baseReporterDecoratorFactory","decoratorFactory","createErrorFormatter","config","emitter","basePath","urlRoot","lastServedFiles","on","files","served","URL_REGEXP","RegExp","hostname","port","cache","WeakMap","getSourceMapConsumer","sourceMap","has","set","get","input","indentation","isString","isError","message","isEmpty","JSON","stringify","msg","replace","stackTracePath","prefix","path","__","___","line","____","column","normalizedPath","file","find","bias","GREATEST_LOWER_BOUND","LEAST_UPPER_BOUND","zeroBasedColumn","Math","max","original","originalPositionFor","source","formatPathMapping","oneBasedOriginalColumn","e","warn","formatError","createReporters","names","injector","errorFormatter","reporters","forEach","name","includes","Reporter","push","reportSlowerThan","colors","browserConsoleLogOptions","locals","baseReporterDecorator","debug","createChild","error","stack","emit","colorName","reporter","bind","$inject","exports"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/karma/lib/reporter.js"],"sourcesContent":["'use strict'\n\n// eslint-disable-next-line node/no-deprecated-api\nconst resolve = require('url').resolve\nconst SourceMapConsumer = require('source-map').SourceMapConsumer\nconst _ = require('lodash')\n\nconst PathUtils = require('./utils/path-utils')\nconst log = require('./logger').create('reporter')\nconst MultiReporter = require('./reporters/multi')\nconst baseReporterDecoratorFactory = require('./reporters/base').decoratorFactory\n\nfunction createErrorFormatter (config, emitter, SourceMapConsumer) {\n  const basePath = config.basePath\n  const urlRoot = config.urlRoot === '/' ? '' : (config.urlRoot || '')\n  let lastServedFiles = []\n\n  emitter.on('file_list_modified', (files) => {\n    lastServedFiles = files.served\n  })\n\n  const URL_REGEXP = new RegExp('(?:https?:\\\\/\\\\/' +\n    config.hostname + '(?:\\\\:' + config.port + ')?' + ')?\\\\/?' +\n    urlRoot + '\\\\/?' +\n    '(base/|absolute)' + // prefix, including slash for base/ to create relative paths.\n    '((?:[A-z]\\\\:)?[^\\\\?\\\\s\\\\:]*)' + // path\n    '(\\\\?\\\\w*)?' + // sha\n    '(\\\\:(\\\\d+))?' + // line\n    '(\\\\:(\\\\d+))?' + // column\n    '', 'g')\n\n  const cache = new WeakMap()\n\n  function getSourceMapConsumer (sourceMap) {\n    if (!cache.has(sourceMap)) {\n      cache.set(sourceMap, new SourceMapConsumer(sourceMap))\n    }\n    return cache.get(sourceMap)\n  }\n\n  return function (input, indentation) {\n    indentation = _.isString(indentation) ? indentation : ''\n    if (_.isError(input)) {\n      input = input.message\n    } else if (_.isEmpty(input)) {\n      input = ''\n    } else if (!_.isString(input)) {\n      input = JSON.stringify(input, null, indentation)\n    }\n\n    let msg = input.replace(URL_REGEXP, function (stackTracePath, prefix, path, __, ___, line, ____, column) {\n      const normalizedPath = prefix === 'base/' ? `${basePath}/${path}` : path\n      const file = lastServedFiles.find((file) => file.path === normalizedPath)\n\n      if (file && file.sourceMap && line) {\n        line = +line\n        column = +column\n\n        // When no column is given and we default to 0, it doesn't make sense to only search for smaller\n        // or equal columns in the sourcemap, let's search for equal or greater columns.\n        const bias = column ? SourceMapConsumer.GREATEST_LOWER_BOUND : SourceMapConsumer.LEAST_UPPER_BOUND\n\n        try {\n          const zeroBasedColumn = Math.max(0, (column || 1) - 1)\n          const original = getSourceMapConsumer(file.sourceMap).originalPositionFor({ line, column: zeroBasedColumn, bias })\n\n          // If there is no original position/source for the current stack trace path, then\n          // we return early with the formatted generated position. This handles the case of\n          // generated code which does not map to anything, see Case 1 of the source-map spec.\n          // https://sourcemaps.info/spec.html.\n          if (original.source === null) {\n            return PathUtils.formatPathMapping(path, line, column)\n          }\n\n          // Source maps often only have a local file name, resolve to turn into a full path if\n          // the path is not absolute yet.\n          const oneBasedOriginalColumn = original.column == null ? original.column : original.column + 1\n          return `${PathUtils.formatPathMapping(resolve(path, original.source), original.line, oneBasedOriginalColumn)} <- ${PathUtils.formatPathMapping(path, line, column)}`\n        } catch (e) {\n          log.warn(`An unexpected error occurred while resolving the original position for: ${stackTracePath}`)\n          log.warn(e)\n        }\n      }\n\n      return PathUtils.formatPathMapping(path, line, column) || prefix\n    })\n\n    if (indentation) {\n      msg = indentation + msg.replace(/\\n/g, '\\n' + indentation)\n    }\n\n    return config.formatError ? config.formatError(msg) : msg + '\\n'\n  }\n}\n\nfunction createReporters (names, config, emitter, injector) {\n  const errorFormatter = createErrorFormatter(config, emitter, SourceMapConsumer)\n  const reporters = []\n\n  names.forEach((name) => {\n    if (['dots', 'progress'].includes(name)) {\n      [\n        require(`./reporters/${name}`),\n        require(`./reporters/${name}_color`)\n      ].forEach((Reporter) => {\n        reporters.push(new Reporter(errorFormatter, config.reportSlowerThan, config.colors, config.browserConsoleLogOptions))\n      })\n      return\n    }\n\n    const locals = {\n      baseReporterDecorator: ['factory', baseReporterDecoratorFactory],\n      formatError: ['value', errorFormatter]\n    }\n\n    try {\n      log.debug(`Trying to load reporter: ${name}`)\n      reporters.push(injector.createChild([locals], ['reporter:' + name]).get('reporter:' + name))\n    } catch (e) {\n      if (e.message.includes(`No provider for \"reporter:${name}\"`)) {\n        log.error(`Can not load reporter \"${name}\", it is not registered!\\n  Perhaps you are missing some plugin?`)\n      } else {\n        log.error(`Can not load \"${name}\"!\\n ${e.stack}`)\n      }\n      emitter.emit('load_error', 'reporter', name)\n      return\n    }\n\n    const colorName = name + '_color'\n    if (!names.includes(colorName)) {\n      try {\n        log.debug(`Trying to load color-version of reporter: ${name} (${colorName})`)\n        reporters.push(injector.createChild([locals], ['reporter:' + colorName]).get('reporter:' + name))\n      } catch (e) {\n        log.debug('Couldn\\'t load color-version.')\n      }\n    }\n  })\n\n  reporters.forEach((reporter) => emitter.bind(reporter))\n\n  return new MultiReporter(reporters)\n}\n\ncreateReporters.$inject = [\n  'config.reporters',\n  'config',\n  'emitter',\n  'injector'\n]\n\nexports.createReporters = createReporters\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}