{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EsbuildExecutor = void 0;\n/**\n * Provides the ability to execute esbuild regardless of the current platform's support\n * for using the native variant of esbuild. The native variant will be preferred (assuming\n * the `alwaysUseWasm` constructor option is `false) due to its inherent performance advantages.\n * At first use of esbuild, a supportability test will be automatically performed and the\n * WASM-variant will be used if needed by the platform.\n */\nclass EsbuildExecutor {\n  /**\n   * Constructs an instance of the `EsbuildExecutor` class.\n   *\n   * @param alwaysUseWasm If true, the WASM-variant will be preferred and no support test will be\n   * performed; if false (default), the native variant will be preferred.\n   */\n  constructor(alwaysUseWasm = false) {\n    this.alwaysUseWasm = alwaysUseWasm;\n    this.initialized = false;\n    this.esbuildTransform = this.esbuildFormatMessages = () => {\n      throw new Error('esbuild implementation missing');\n    };\n  }\n  /**\n   * Determines whether the native variant of esbuild can be used on the current platform.\n   *\n   * @returns A promise which resolves to `true`, if the native variant of esbuild is support or `false`, if the WASM variant is required.\n   */\n  static hasNativeSupport() {\n    return _asyncToGenerator(function* () {\n      // Try to use native variant to ensure it is functional for the platform.\n      try {\n        const {\n          formatMessages\n        } = yield Promise.resolve().then(() => __importStar(require('esbuild')));\n        yield formatMessages([], {\n          kind: 'error'\n        });\n        return true;\n      } catch {\n        return false;\n      }\n    })();\n  }\n  /**\n   * Initializes the esbuild transform and format messages functions.\n   *\n   * @returns A promise that fulfills when esbuild has been loaded and available for use.\n   */\n  ensureEsbuild() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.initialized) {\n        return;\n      }\n      // If the WASM variant was preferred at class construction or native is not supported, use WASM\n      if (_this.alwaysUseWasm || !(yield EsbuildExecutor.hasNativeSupport())) {\n        yield _this.useWasm();\n        _this.initialized = true;\n        return;\n      }\n      try {\n        // Use the faster native variant if available.\n        const {\n          transform,\n          formatMessages\n        } = yield Promise.resolve().then(() => __importStar(require('esbuild')));\n        _this.esbuildTransform = transform;\n        _this.esbuildFormatMessages = formatMessages;\n      } catch {\n        // If the native variant is not installed then use the WASM-based variant\n        yield _this.useWasm();\n      }\n      _this.initialized = true;\n    })();\n  }\n  /**\n   * Transitions an executor instance to use the WASM-variant of esbuild.\n   */\n  useWasm() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        transform,\n        formatMessages\n      } = yield Promise.resolve().then(() => __importStar(require('esbuild-wasm')));\n      _this2.esbuildTransform = transform;\n      _this2.esbuildFormatMessages = formatMessages;\n      // The ESBUILD_BINARY_PATH environment variable cannot exist when attempting to use the\n      // WASM variant. If it is then the binary located at the specified path will be used instead\n      // of the WASM variant.\n      delete process.env.ESBUILD_BINARY_PATH;\n      _this2.alwaysUseWasm = true;\n    })();\n  }\n  transform(input, options) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      yield _this3.ensureEsbuild();\n      return _this3.esbuildTransform(input, options);\n    })();\n  }\n  formatMessages(messages, options) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      yield _this4.ensureEsbuild();\n      return _this4.esbuildFormatMessages(messages, options);\n    })();\n  }\n}\nexports.EsbuildExecutor = EsbuildExecutor;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","EsbuildExecutor","constructor","alwaysUseWasm","initialized","esbuildTransform","esbuildFormatMessages","Error","hasNativeSupport","formatMessages","Promise","resolve","then","require","kind","ensureEsbuild","useWasm","transform","process","env","ESBUILD_BINARY_PATH","input","options","messages"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/@angular-devkit/build-angular/src/webpack/plugins/esbuild-executor.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EsbuildExecutor = void 0;\n/**\n * Provides the ability to execute esbuild regardless of the current platform's support\n * for using the native variant of esbuild. The native variant will be preferred (assuming\n * the `alwaysUseWasm` constructor option is `false) due to its inherent performance advantages.\n * At first use of esbuild, a supportability test will be automatically performed and the\n * WASM-variant will be used if needed by the platform.\n */\nclass EsbuildExecutor {\n    /**\n     * Constructs an instance of the `EsbuildExecutor` class.\n     *\n     * @param alwaysUseWasm If true, the WASM-variant will be preferred and no support test will be\n     * performed; if false (default), the native variant will be preferred.\n     */\n    constructor(alwaysUseWasm = false) {\n        this.alwaysUseWasm = alwaysUseWasm;\n        this.initialized = false;\n        this.esbuildTransform = this.esbuildFormatMessages = () => {\n            throw new Error('esbuild implementation missing');\n        };\n    }\n    /**\n     * Determines whether the native variant of esbuild can be used on the current platform.\n     *\n     * @returns A promise which resolves to `true`, if the native variant of esbuild is support or `false`, if the WASM variant is required.\n     */\n    static async hasNativeSupport() {\n        // Try to use native variant to ensure it is functional for the platform.\n        try {\n            const { formatMessages } = await Promise.resolve().then(() => __importStar(require('esbuild')));\n            await formatMessages([], { kind: 'error' });\n            return true;\n        }\n        catch {\n            return false;\n        }\n    }\n    /**\n     * Initializes the esbuild transform and format messages functions.\n     *\n     * @returns A promise that fulfills when esbuild has been loaded and available for use.\n     */\n    async ensureEsbuild() {\n        if (this.initialized) {\n            return;\n        }\n        // If the WASM variant was preferred at class construction or native is not supported, use WASM\n        if (this.alwaysUseWasm || !(await EsbuildExecutor.hasNativeSupport())) {\n            await this.useWasm();\n            this.initialized = true;\n            return;\n        }\n        try {\n            // Use the faster native variant if available.\n            const { transform, formatMessages } = await Promise.resolve().then(() => __importStar(require('esbuild')));\n            this.esbuildTransform = transform;\n            this.esbuildFormatMessages = formatMessages;\n        }\n        catch {\n            // If the native variant is not installed then use the WASM-based variant\n            await this.useWasm();\n        }\n        this.initialized = true;\n    }\n    /**\n     * Transitions an executor instance to use the WASM-variant of esbuild.\n     */\n    async useWasm() {\n        const { transform, formatMessages } = await Promise.resolve().then(() => __importStar(require('esbuild-wasm')));\n        this.esbuildTransform = transform;\n        this.esbuildFormatMessages = formatMessages;\n        // The ESBUILD_BINARY_PATH environment variable cannot exist when attempting to use the\n        // WASM variant. If it is then the binary located at the specified path will be used instead\n        // of the WASM variant.\n        delete process.env.ESBUILD_BINARY_PATH;\n        this.alwaysUseWasm = true;\n    }\n    async transform(input, options) {\n        await this.ensureEsbuild();\n        return this.esbuildTransform(input, options);\n    }\n    async formatMessages(messages, options) {\n        await this.ensureEsbuild();\n        return this.esbuildFormatMessages(messages, options);\n    }\n}\nexports.EsbuildExecutor = EsbuildExecutor;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}