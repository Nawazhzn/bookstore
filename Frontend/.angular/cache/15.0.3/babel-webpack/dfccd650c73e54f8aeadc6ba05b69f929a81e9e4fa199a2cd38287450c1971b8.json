{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nlet BookDetailsComponent = class BookDetailsComponent {\n  constructor(bookService, route, router) {\n    this.bookService = bookService;\n    this.route = route;\n    this.router = router;\n    this.viewMode = false;\n    this.currentBook = {\n      title: '',\n      description: '',\n      author: '',\n      year: '',\n      publisher: ''\n    };\n    this.message = '';\n  }\n  ngOnInit() {\n    if (!this.viewMode) {\n      this.message = '';\n      this.getBook(this.route.snapshot.params[\"id\"]);\n    }\n  }\n  getBook(id) {\n    this.booksService.get(id).subscribe({\n      next: data => {\n        this.currentBook = data;\n      },\n      error: e => console.error(e)\n    });\n  }\n  updatePublished(status) {\n    const data = {\n      title: this.currentBook.title,\n      description: this.currentBook.description,\n      author: this.currentBook.author,\n      year: this.currentBook.year,\n      publisher: this.currentBook.publisher\n    };\n    this.message = '';\n    this.booksService.update(this.currentBook.id, data).subscribe({\n      next: res => {\n        console.log(res);\n        this.currentBook.id = status;\n        this.message = res.message ? res.message : 'The status was updated successfully!';\n      },\n      error: e => console.error(e)\n    });\n  }\n  updateBook() {\n    this.message = '';\n    this.booksService.update(this.currentBook.id, this.currentBook).subscribe({\n      next: res => {\n        console.log(res);\n        this.message = res.message ? res.message : 'This book was updated successfully!';\n      },\n      error: e => console.error(e)\n    });\n  }\n  deleteBook() {\n    this.booksService.delete(this.currentBook.id).subscribe({\n      next: res => {\n        console.log(res);\n        this.router.navigate(['/books']);\n      },\n      error: e => console.error(e)\n    });\n  }\n};\n__decorate([Input()], BookDetailsComponent.prototype, \"viewMode\", void 0);\n__decorate([Input()], BookDetailsComponent.prototype, \"currentBook\", void 0);\nBookDetailsComponent = __decorate([Component({\n  selector: 'app-book-details',\n  templateUrl: './book-details.component.html',\n  styleUrls: ['./book-details.component.css']\n})], BookDetailsComponent);\nexport { BookDetailsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAgB,eAAe;AAUjD,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAgBjCC,YACUC,WAAwB,EACxBC,KAAqB,EACrBC,MAAc;IAFd,gBAAW,GAAXF,WAAW;IACX,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IAjBL,aAAQ,GAAG,KAAK;IAEhB,gBAAW,GAAS;MAE3BC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,MAAM,EAAC,EAAE;MACTC,IAAI,EAAC,EAAE;MACPC,SAAS,EAAC;KAEX;IAEH,YAAO,GAAE,EAAE;EAKiB;EAE5BC,QAAQ;IACN,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;MAClB,IAAI,CAACC,OAAO,GAAG,EAAE;MACjB,IAAI,CAACC,OAAO,CAAC,IAAI,CAACV,KAAK,CAACW,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC;;EAElD;EAEAF,OAAO,CAACG,EAAU;IAChB,IAAI,CAACC,YAAY,CAACC,GAAG,CAACF,EAAE,CAAC,CACtBG,SAAS,CAAC;MACTC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACC,WAAW,GAAGD,IAAI;MACzB,CAAC;MACDE,KAAK,EAAGC,CAAC,IAAKC,OAAO,CAACF,KAAK,CAACC,CAAC;KAC9B,CAAC;EACN;EAEAE,eAAe,CAACC,MAAe;IAC7B,MAAMN,IAAI,GAAG;MACXhB,KAAK,EAAE,IAAI,CAACiB,WAAW,CAACjB,KAAK;MAC7BC,WAAW,EAAE,IAAI,CAACgB,WAAW,CAAChB,WAAW;MACzCC,MAAM,EAAE,IAAI,CAACe,WAAW,CAACf,MAAM;MAC/BC,IAAI,EAAE,IAAI,CAACc,WAAW,CAACd,IAAI;MAC3BC,SAAS,EAAC,IAAI,CAACa,WAAW,CAACb;KAC5B;IAGD,IAAI,CAACG,OAAO,GAAG,EAAE;IAEjB,IAAI,CAACK,YAAY,CAACW,MAAM,CAAC,IAAI,CAACN,WAAW,CAACN,EAAE,EAAEK,IAAI,CAAC,CAChDF,SAAS,CAAC;MACTC,IAAI,EAAGS,GAAG,IAAI;QACZJ,OAAO,CAACK,GAAG,CAACD,GAAG,CAAC;QAChB,IAAI,CAACP,WAAW,CAACN,EAAE,GAAGW,MAAM;QAC5B,IAAI,CAACf,OAAO,GAAGiB,GAAG,CAACjB,OAAO,GAAGiB,GAAG,CAACjB,OAAO,GAAG,sCAAsC;MACnF,CAAC;MACDW,KAAK,EAAGC,CAAC,IAAKC,OAAO,CAACF,KAAK,CAACC,CAAC;KAC9B,CAAC;EACN;EAEAO,UAAU;IACR,IAAI,CAACnB,OAAO,GAAG,EAAE;IAEjB,IAAI,CAACK,YAAY,CAACW,MAAM,CAAC,IAAI,CAACN,WAAW,CAACN,EAAE,EAAE,IAAI,CAACM,WAAW,CAAC,CAC5DH,SAAS,CAAC;MACTC,IAAI,EAAGS,GAAG,IAAI;QACZJ,OAAO,CAACK,GAAG,CAACD,GAAG,CAAC;QAChB,IAAI,CAACjB,OAAO,GAAGiB,GAAG,CAACjB,OAAO,GAAGiB,GAAG,CAACjB,OAAO,GAAG,qCAAqC;MAClF,CAAC;MACDW,KAAK,EAAGC,CAAC,IAAKC,OAAO,CAACF,KAAK,CAACC,CAAC;KAC9B,CAAC;EACN;EAGAQ,UAAU;IACR,IAAI,CAACf,YAAY,CAACgB,MAAM,CAAC,IAAI,CAACX,WAAW,CAACN,EAAE,CAAC,CAC1CG,SAAS,CAAC;MACTC,IAAI,EAAGS,GAAG,IAAI;QACZJ,OAAO,CAACK,GAAG,CAACD,GAAG,CAAC;QAChB,IAAI,CAACzB,MAAM,CAAC8B,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAClC,CAAC;MACDX,KAAK,EAAGC,CAAC,IAAKC,OAAO,CAACF,KAAK,CAACC,CAAC;KAC9B,CAAC;EACN;CAGC;AArFUW,YAARpC,KAAK,EAAE,sDAAkB;AAEjBoC,YAARpC,KAAK,EAAE,yDAQN;AAZSC,oBAAoB,eALhCF,SAAS,CAAC;EACTsC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWtC,oBAAoB,CAuFhC;SAvFYA,oBAAoB","names":["Component","Input","BookDetailsComponent","constructor","bookService","route","router","title","description","author","year","publisher","ngOnInit","viewMode","message","getBook","snapshot","params","id","booksService","get","subscribe","next","data","currentBook","error","e","console","updatePublished","status","update","res","log","updateBook","deleteBook","delete","navigate","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Nawaz\\Downloads\\mean-stack-authentication-authorization-master\\mean-stack-authentication-authorization-master\\frontend\\src\\app\\components\\book-details\\book-details.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Book } from 'src/app/models/book.model';\nimport { BookService } from 'src/app/services/books.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-book-details',\n  templateUrl: './book-details.component.html',\n  styleUrls: ['./book-details.component.css']\n})\nexport class BookDetailsComponent implements OnInit{\n\n  @Input() viewMode = false;\n\n  @Input() currentBook: Book = {\n\n    title: '',\n    description: '',\n    author:'',\n    year:'',\n    publisher:'',\n\n  };\n\nmessage ='';\n\nconstructor(\n  private bookService: BookService,\n  private route: ActivatedRoute,\n  private router: Router) { }\n\nngOnInit(): void {\n  if (!this.viewMode) {\n    this.message = '';\n    this.getBook(this.route.snapshot.params[\"id\"]);\n  }\n}\n\ngetBook(id: string): void {\n  this.booksService.get(id)\n    .subscribe({\n      next: (data) => {\n        this.currentBook = data;\n      },\n      error: (e) => console.error(e)\n    });\n}\n\nupdatePublished(status: boolean): void {\n  const data = {\n    title: this.currentBook.title,\n    description: this.currentBook.description,\n    author: this.currentBook.author,\n    year: this.currentBook.year,\n    publisher:this.currentBook.publisher\n  };\n\n\n  this.message = '';\n\n  this.booksService.update(this.currentBook.id, data)\n    .subscribe({\n      next: (res) => {\n        console.log(res);\n        this.currentBook.id = status;\n        this.message = res.message ? res.message : 'The status was updated successfully!';\n      },\n      error: (e) => console.error(e)\n    });\n}\n\nupdateBook(): void {\n  this.message = '';\n\n  this.booksService.update(this.currentBook.id, this.currentBook)\n    .subscribe({\n      next: (res) => {\n        console.log(res);\n        this.message = res.message ? res.message : 'This book was updated successfully!';\n      },\n      error: (e) => console.error(e)\n    });\n}\n\n\ndeleteBook(): void {\n  this.booksService.delete(this.currentBook.id)\n    .subscribe({\n      next: (res) => {\n        console.log(res);\n        this.router.navigate(['/books']);\n      },\n      error: (e) => console.error(e)\n    });\n}\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}