{"ast":null,"code":"'use strict';\n\nconst mm = require('minimatch');\nconst braces = require('braces');\nconst PatternUtils = require('./utils/pattern-utils');\nconst helper = require('./helper');\nconst log = require('./logger').create('watcher');\nconst DIR_SEP = require('path').sep;\nfunction watchPatterns(patterns, watcher) {\n  let expandedPatterns = [];\n  patterns.map(pattern => {\n    // expand ['a/{b,c}'] to ['a/b', 'a/c']\n    expandedPatterns = expandedPatterns.concat(braces.expand(pattern, {\n      keepEscaping: true\n    }));\n  });\n  expandedPatterns.map(PatternUtils.getBaseDir).filter((path, index, paths) => paths.indexOf(path) === index) // filter unique values\n  .forEach((path, index, paths) => {\n    if (!paths.some(p => path.startsWith(p + DIR_SEP))) {\n      watcher.add(path);\n      log.debug(`Watching \"${path}\"`);\n    }\n  });\n}\nfunction checkAnyPathMatch(patterns, path) {\n  return patterns.some(pattern => mm(path, pattern, {\n    dot: true\n  }));\n}\nfunction createIgnore(patterns, excludes) {\n  return function (path, stat) {\n    if (stat && !stat.isDirectory()) {\n      return !checkAnyPathMatch(patterns, path) || checkAnyPathMatch(excludes, path);\n    } else {\n      return false;\n    }\n  };\n}\nfunction getWatchedPatterns(patterns) {\n  return patterns.filter(pattern => pattern.watched).map(pattern => pattern.pattern);\n}\nfunction watch(patterns, excludes, fileList, usePolling, emitter) {\n  const watchedPatterns = getWatchedPatterns(patterns);\n  // Lazy-load 'chokidar' to make the dependency optional. This is desired when\n  // third-party watchers are in use.\n  const chokidar = require('chokidar');\n  const watcher = new chokidar.FSWatcher({\n    usePolling: usePolling,\n    ignorePermissionErrors: true,\n    ignoreInitial: true,\n    ignored: createIgnore(watchedPatterns, excludes)\n  });\n  watchPatterns(watchedPatterns, watcher);\n  watcher.on('add', path => fileList.addFile(helper.normalizeWinPath(path))).on('change', path => fileList.changeFile(helper.normalizeWinPath(path))).on('unlink', path => fileList.removeFile(helper.normalizeWinPath(path))).on('error', log.debug.bind(log));\n  emitter.on('exit', done => {\n    watcher.close();\n    done();\n  });\n  return watcher;\n}\nwatch.$inject = ['config.files', 'config.exclude', 'fileList', 'config.usePolling', 'emitter'];\nmodule.exports = watch;","map":{"version":3,"names":["mm","require","braces","PatternUtils","helper","log","create","DIR_SEP","sep","watchPatterns","patterns","watcher","expandedPatterns","map","pattern","concat","expand","keepEscaping","getBaseDir","filter","path","index","paths","indexOf","forEach","some","p","startsWith","add","debug","checkAnyPathMatch","dot","createIgnore","excludes","stat","isDirectory","getWatchedPatterns","watched","watch","fileList","usePolling","emitter","watchedPatterns","chokidar","FSWatcher","ignorePermissionErrors","ignoreInitial","ignored","on","addFile","normalizeWinPath","changeFile","removeFile","bind","done","close","$inject","module","exports"],"sources":["C:/Users/Nawaz/Downloads/mean-stack-authentication-authorization-master/mean-stack-authentication-authorization-master/Frontend/node_modules/karma/lib/watcher.js"],"sourcesContent":["'use strict'\n\nconst mm = require('minimatch')\nconst braces = require('braces')\nconst PatternUtils = require('./utils/pattern-utils')\n\nconst helper = require('./helper')\nconst log = require('./logger').create('watcher')\n\nconst DIR_SEP = require('path').sep\n\nfunction watchPatterns (patterns, watcher) {\n  let expandedPatterns = []\n  patterns.map((pattern) => {\n    // expand ['a/{b,c}'] to ['a/b', 'a/c']\n    expandedPatterns = expandedPatterns.concat(braces.expand(pattern, { keepEscaping: true }))\n  })\n  expandedPatterns\n    .map(PatternUtils.getBaseDir)\n    .filter((path, index, paths) => paths.indexOf(path) === index) // filter unique values\n    .forEach((path, index, paths) => {\n      if (!paths.some((p) => path.startsWith(p + DIR_SEP))) {\n        watcher.add(path)\n        log.debug(`Watching \"${path}\"`)\n      }\n    })\n}\n\nfunction checkAnyPathMatch (patterns, path) {\n  return patterns.some((pattern) => mm(path, pattern, { dot: true }))\n}\n\nfunction createIgnore (patterns, excludes) {\n  return function (path, stat) {\n    if (stat && !stat.isDirectory()) {\n      return !checkAnyPathMatch(patterns, path) || checkAnyPathMatch(excludes, path)\n    } else {\n      return false\n    }\n  }\n}\n\nfunction getWatchedPatterns (patterns) {\n  return patterns\n    .filter((pattern) => pattern.watched)\n    .map((pattern) => pattern.pattern)\n}\n\nfunction watch (patterns, excludes, fileList, usePolling, emitter) {\n  const watchedPatterns = getWatchedPatterns(patterns)\n  // Lazy-load 'chokidar' to make the dependency optional. This is desired when\n  // third-party watchers are in use.\n  const chokidar = require('chokidar')\n  const watcher = new chokidar.FSWatcher({\n    usePolling: usePolling,\n    ignorePermissionErrors: true,\n    ignoreInitial: true,\n    ignored: createIgnore(watchedPatterns, excludes)\n  })\n\n  watchPatterns(watchedPatterns, watcher)\n\n  watcher\n    .on('add', (path) => fileList.addFile(helper.normalizeWinPath(path)))\n    .on('change', (path) => fileList.changeFile(helper.normalizeWinPath(path)))\n    .on('unlink', (path) => fileList.removeFile(helper.normalizeWinPath(path)))\n    .on('error', log.debug.bind(log))\n\n  emitter.on('exit', (done) => {\n    watcher.close()\n    done()\n  })\n\n  return watcher\n}\n\nwatch.$inject = [\n  'config.files',\n  'config.exclude',\n  'fileList',\n  'config.usePolling',\n  'emitter'\n]\n\nmodule.exports = watch\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}